/*
 * StorageService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import java.io.File;
import org.openapitools.client.model.FileUploadDtoEnvelope;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FilesApi
 */
@Disabled
public class FilesApiTest {

    private final FilesApi api = new FilesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFileAsyncTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        UUID id = null;
        OffsetDateTime timestamp = null;
        String notes = null;
        String title = null;
        String author = null;
        Boolean isFolder = null;
        String fileName = null;
        String _abstract = null;
        String keyWords = null;
        Boolean validResponse = null;
        String parentFileUploadId = null;
        String filePath = null;
        File _file = null;
        EmptyEnvelope response = api.createFileAsync(tenantId, apiVersion, xApiVersion, id, timestamp, notes, title, author, isFolder, fileName, _abstract, keyWords, validResponse, parentFileUploadId, filePath, _file);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFileAsyncTest() throws ApiException {
        UUID fileId = null;
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        FileUploadDtoEnvelope response = api.deleteFileAsync(fileId, tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadFileAsyncTest() throws ApiException {
        UUID fileId = null;
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        File response = api.downloadFileAsync(fileId, tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFileAsyncTest() throws ApiException {
        UUID fileId = null;
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        FileUploadDtoEnvelope response = api.getFileAsync(fileId, tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFilesAsyncTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        FileUploadDtoEnvelope response = api.getFilesAsync(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFileAsyncTest() throws ApiException {
        UUID fileId = null;
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        String notes = null;
        String metadata = null;
        String title = null;
        String author = null;
        Boolean isFolder = null;
        String fileName = null;
        String _abstract = null;
        String keyWords = null;
        Boolean validResponse = null;
        String parentFileUploadID = null;
        String filePath = null;
        File _file = null;
        FileUploadDtoEnvelope response = api.updateFileAsync(fileId, tenantId, apiVersion, xApiVersion, notes, metadata, title, author, isFolder, fileName, _abstract, keyWords, validResponse, parentFileUploadID, filePath, _file);
        // TODO: test validations
    }

}
