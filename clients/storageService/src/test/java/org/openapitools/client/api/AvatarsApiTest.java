/*
 * StorageService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import java.io.File;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AvatarsApi
 */
@Disabled
public class AvatarsApiTest {

    private final AvatarsApi api = new AvatarsApi();

    /**
     * Get the avatar for a given social profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAvatarTest() throws ApiException {
        UUID socialProfileId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.getAvatar(socialProfileId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * Get the avatar for a given contact.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContactAvatarTest() throws ApiException {
        UUID contactId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.getContactAvatar(contactId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * Get the avatar for the current user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCurrentUserAvatarTest() throws ApiException {
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.getCurrentUserAvatar(apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * Get the avatar for a given tenant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTenantAvatarTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.getTenantAvatar(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * Get the avatar for a given user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserAvatarTest() throws ApiException {
        UUID userId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.getUserAvatar(userId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * Update the avatar for a given contact.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateContactAvatarTest() throws ApiException {
        UUID contactId = null;
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        File avatar = null;
        EmptyEnvelope response = api.updateContactAvatar(contactId, tenantId, apiVersion, xApiVersion, avatar);
        // TODO: test validations
    }

    /**
     * Update the avatar for a given tenant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTenantAvatarTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        File avatar = null;
        EmptyEnvelope response = api.updateTenantAvatar(tenantId, apiVersion, xApiVersion, avatar);
        // TODO: test validations
    }

    /**
     * Update the avatar for the current user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserAvatarTest() throws ApiException {
        String apiVersion = null;
        String xApiVersion = null;
        File avatar = null;
        EmptyEnvelope response = api.updateUserAvatar(apiVersion, xApiVersion, avatar);
        // TODO: test validations
    }

}
