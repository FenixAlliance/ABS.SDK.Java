/*
 * GlobeService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CityDtoListEnvelope;
import org.openapitools.client.model.CountryCallingCodeDtoListEnvelope;
import org.openapitools.client.model.CountryDtoEnvelope;
import org.openapitools.client.model.CountryDtoListEnvelope;
import org.openapitools.client.model.CountryStateDtoEnvelope;
import org.openapitools.client.model.CountryStateDtoListEnvelope;
import org.openapitools.client.model.CountryTopLevelDomainDtoListEnvelope;
import org.openapitools.client.model.CurrencyDtoListEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.TimezoneDtoListEnvelope;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CountriesApi
 */
@Disabled
public class CountriesApiTest {

    private final CountriesApi api = new CountriesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesCountryIdCallingCodesGetTest() throws ApiException {
        String countryId = null;
        String apiVersion = null;
        String xApiVersion = null;
        CountryCallingCodeDtoListEnvelope response = api.apiV2GlobeServiceCountriesCountryIdCallingCodesGet(countryId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesCountryIdCurrenciesGetTest() throws ApiException {
        String countryId = null;
        String apiVersion = null;
        String xApiVersion = null;
        CurrencyDtoListEnvelope response = api.apiV2GlobeServiceCountriesCountryIdCurrenciesGet(countryId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesCountryIdGetTest() throws ApiException {
        String countryId = null;
        String apiVersion = null;
        String xApiVersion = null;
        CountryDtoEnvelope response = api.apiV2GlobeServiceCountriesCountryIdGet(countryId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesCountryIdStatesCountryStateIdCitiesGetTest() throws ApiException {
        String countryStateId = null;
        String countryId = null;
        String apiVersion = null;
        String xApiVersion = null;
        CityDtoListEnvelope response = api.apiV2GlobeServiceCountriesCountryIdStatesCountryStateIdCitiesGet(countryStateId, countryId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesCountryIdStatesCountryStateIdGetTest() throws ApiException {
        String countryStateId = null;
        String countryId = null;
        String apiVersion = null;
        String xApiVersion = null;
        CountryStateDtoEnvelope response = api.apiV2GlobeServiceCountriesCountryIdStatesCountryStateIdGet(countryStateId, countryId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesCountryIdStatesGetTest() throws ApiException {
        String countryId = null;
        String apiVersion = null;
        String xApiVersion = null;
        CountryStateDtoListEnvelope response = api.apiV2GlobeServiceCountriesCountryIdStatesGet(countryId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesCountryIdTimezonesGetTest() throws ApiException {
        String countryId = null;
        String apiVersion = null;
        String xApiVersion = null;
        TimezoneDtoListEnvelope response = api.apiV2GlobeServiceCountriesCountryIdTimezonesGet(countryId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesCountryIdTopLevelDomainsGetTest() throws ApiException {
        String countryId = null;
        String apiVersion = null;
        String xApiVersion = null;
        CountryTopLevelDomainDtoListEnvelope response = api.apiV2GlobeServiceCountriesCountryIdTopLevelDomainsGet(countryId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesGetTest() throws ApiException {
        String apiVersion = null;
        String xApiVersion = null;
        CountryDtoListEnvelope response = api.apiV2GlobeServiceCountriesGet(apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2GlobeServiceCountriesSearchGetTest() throws ApiException {
        String countryName = null;
        String apiVersion = null;
        String xApiVersion = null;
        CountryDtoListEnvelope response = api.apiV2GlobeServiceCountriesSearchGet(countryName, apiVersion, xApiVersion);
        // TODO: test validations
    }

}
