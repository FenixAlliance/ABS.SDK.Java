/*
 * DealsService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DealUnitUpdateDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T15:35:46.834379800-05:00[America/Bogota]", comments = "Generator version: 7.9.0")
public class DealUnitUpdateDto {
  public static final String SERIALIZED_NAME_CLOSED = "closed";
  @SerializedName(SERIALIZED_NAME_CLOSED)
  private Boolean closed;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_FOREX_RATE = "forexRate";
  @SerializedName(SERIALIZED_NAME_FOREX_RATE)
  private Double forexRate;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "currencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private String currencyId;

  public static final String SERIALIZED_NAME_PRICE_LIST_ID = "priceListId";
  @SerializedName(SERIALIZED_NAME_PRICE_LIST_ID)
  private String priceListId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENROLLMENT_ID = "enrollmentId";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_ID)
  private String enrollmentId;

  public static final String SERIALIZED_NAME_INDIVIDUAL_ID = "individualId";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_ID)
  private String individualId;

  public static final String SERIALIZED_NAME_PAYMENT_TERM_ID = "paymentTermId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERM_ID)
  private String paymentTermId;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private String organizationId;

  public static final String SERIALIZED_NAME_RECEIVER_TENANT_ID = "receiverTenantId";
  @SerializedName(SERIALIZED_NAME_RECEIVER_TENANT_ID)
  private String receiverTenantId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_BILLING_EMAIL = "billingEmail";
  @SerializedName(SERIALIZED_NAME_BILLING_EMAIL)
  private String billingEmail;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private String countryId;

  public static final String SERIALIZED_NAME_STATE_ID = "stateId";
  @SerializedName(SERIALIZED_NAME_STATE_ID)
  private String stateId;

  public static final String SERIALIZED_NAME_CITY_ID = "cityId";
  @SerializedName(SERIALIZED_NAME_CITY_ID)
  private String cityId;

  public static final String SERIALIZED_NAME_BILLING_LOCATION_ID = "billingLocationId";
  @SerializedName(SERIALIZED_NAME_BILLING_LOCATION_ID)
  private String billingLocationId;

  public static final String SERIALIZED_NAME_SHIPPING_LOCATION_ID = "shippingLocationId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LOCATION_ID)
  private String shippingLocationId;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_ID = "shippingMethodId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_ID)
  private String shippingMethodId;

  public static final String SERIALIZED_NAME_ORDERED = "ordered";
  @SerializedName(SERIALIZED_NAME_ORDERED)
  private Boolean ordered;

  public static final String SERIALIZED_NAME_CART_ID = "cartId";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private String cartId;

  public static final String SERIALIZED_NAME_DEAL_UNIT_FEED_ID = "dealUnitFeedId";
  @SerializedName(SERIALIZED_NAME_DEAL_UNIT_FEED_ID)
  private String dealUnitFeedId;

  public static final String SERIALIZED_NAME_DEAL_UNIT_FLOW_ID = "dealUnitFlowId";
  @SerializedName(SERIALIZED_NAME_DEAL_UNIT_FLOW_ID)
  private String dealUnitFlowId;

  public static final String SERIALIZED_NAME_DEAL_UNIT_FLOW_STAGE_ID = "dealUnitFlowStageId";
  @SerializedName(SERIALIZED_NAME_DEAL_UNIT_FLOW_STAGE_ID)
  private String dealUnitFlowStageId;

  public static final String SERIALIZED_NAME_PARTNER_CREATED = "partnerCreated";
  @SerializedName(SERIALIZED_NAME_PARTNER_CREATED)
  private Boolean partnerCreated;

  public static final String SERIALIZED_NAME_PARTNER_COLLABORATION = "partnerCollaboration";
  @SerializedName(SERIALIZED_NAME_PARTNER_COLLABORATION)
  private Boolean partnerCollaboration;

  public static final String SERIALIZED_NAME_PROPOSED_SOLUTION = "proposedSolution";
  @SerializedName(SERIALIZED_NAME_PROPOSED_SOLUTION)
  private String proposedSolution;

  public static final String SERIALIZED_NAME_CURRENT_SITUATION = "currentSituation";
  @SerializedName(SERIALIZED_NAME_CURRENT_SITUATION)
  private String currentSituation;

  public static final String SERIALIZED_NAME_CUSTOMER_NEED = "customerNeed";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NEED)
  private String customerNeed;

  public static final String SERIALIZED_NAME_WON_DATE = "wonDate";
  @SerializedName(SERIALIZED_NAME_WON_DATE)
  private OffsetDateTime wonDate;

  public static final String SERIALIZED_NAME_LOST_DATE = "lostDate";
  @SerializedName(SERIALIZED_NAME_LOST_DATE)
  private OffsetDateTime lostDate;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiryDate";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  private OffsetDateTime expiryDate;

  public static final String SERIALIZED_NAME_DELIVERED_DATE = "deliveredDate";
  @SerializedName(SERIALIZED_NAME_DELIVERED_DATE)
  private OffsetDateTime deliveredDate;

  public static final String SERIALIZED_NAME_CLOSED_TIMESTAMP = "closedTimestamp";
  @SerializedName(SERIALIZED_NAME_CLOSED_TIMESTAMP)
  private OffsetDateTime closedTimestamp;

  public static final String SERIALIZED_NAME_EXPECTED_CLOSE_DATE = "expectedCloseDate";
  @SerializedName(SERIALIZED_NAME_EXPECTED_CLOSE_DATE)
  private OffsetDateTime expectedCloseDate;

  /**
   * Gets or Sets dealUnitStatus
   */
  @JsonAdapter(DealUnitStatusEnum.Adapter.class)
  public enum DealUnitStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    DealUnitStatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DealUnitStatusEnum fromValue(Integer value) {
      for (DealUnitStatusEnum b : DealUnitStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DealUnitStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DealUnitStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DealUnitStatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return DealUnitStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      DealUnitStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DEAL_UNIT_STATUS = "dealUnitStatus";
  @SerializedName(SERIALIZED_NAME_DEAL_UNIT_STATUS)
  private DealUnitStatusEnum dealUnitStatus;

  /**
   * Gets or Sets dealUnitPurchaseProcess
   */
  @JsonAdapter(DealUnitPurchaseProcessEnum.Adapter.class)
  public enum DealUnitPurchaseProcessEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    DealUnitPurchaseProcessEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DealUnitPurchaseProcessEnum fromValue(Integer value) {
      for (DealUnitPurchaseProcessEnum b : DealUnitPurchaseProcessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DealUnitPurchaseProcessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DealUnitPurchaseProcessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DealUnitPurchaseProcessEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return DealUnitPurchaseProcessEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      DealUnitPurchaseProcessEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DEAL_UNIT_PURCHASE_PROCESS = "dealUnitPurchaseProcess";
  @SerializedName(SERIALIZED_NAME_DEAL_UNIT_PURCHASE_PROCESS)
  private DealUnitPurchaseProcessEnum dealUnitPurchaseProcess;

  /**
   * Gets or Sets dealUnitForecastCategory
   */
  @JsonAdapter(DealUnitForecastCategoryEnum.Adapter.class)
  public enum DealUnitForecastCategoryEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    DealUnitForecastCategoryEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DealUnitForecastCategoryEnum fromValue(Integer value) {
      for (DealUnitForecastCategoryEnum b : DealUnitForecastCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DealUnitForecastCategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DealUnitForecastCategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DealUnitForecastCategoryEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return DealUnitForecastCategoryEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      DealUnitForecastCategoryEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DEAL_UNIT_FORECAST_CATEGORY = "dealUnitForecastCategory";
  @SerializedName(SERIALIZED_NAME_DEAL_UNIT_FORECAST_CATEGORY)
  private DealUnitForecastCategoryEnum dealUnitForecastCategory;

  /**
   * Gets or Sets dealUnitAmountsCalculation
   */
  @JsonAdapter(DealUnitAmountsCalculationEnum.Adapter.class)
  public enum DealUnitAmountsCalculationEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    DealUnitAmountsCalculationEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DealUnitAmountsCalculationEnum fromValue(Integer value) {
      for (DealUnitAmountsCalculationEnum b : DealUnitAmountsCalculationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DealUnitAmountsCalculationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DealUnitAmountsCalculationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DealUnitAmountsCalculationEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return DealUnitAmountsCalculationEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      DealUnitAmountsCalculationEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DEAL_UNIT_AMOUNTS_CALCULATION = "dealUnitAmountsCalculation";
  @SerializedName(SERIALIZED_NAME_DEAL_UNIT_AMOUNTS_CALCULATION)
  private DealUnitAmountsCalculationEnum dealUnitAmountsCalculation;

  public DealUnitUpdateDto() {
  }

  public DealUnitUpdateDto closed(Boolean closed) {
    this.closed = closed;
    return this;
  }

  /**
   * Get closed
   * @return closed
   */
  @javax.annotation.Nullable
  public Boolean getClosed() {
    return closed;
  }

  public void setClosed(Boolean closed) {
    this.closed = closed;
  }


  public DealUnitUpdateDto title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public DealUnitUpdateDto userId(String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  public DealUnitUpdateDto tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public DealUnitUpdateDto forexRate(Double forexRate) {
    this.forexRate = forexRate;
    return this;
  }

  /**
   * Get forexRate
   * @return forexRate
   */
  @javax.annotation.Nullable
  public Double getForexRate() {
    return forexRate;
  }

  public void setForexRate(Double forexRate) {
    this.forexRate = forexRate;
  }


  public DealUnitUpdateDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public DealUnitUpdateDto priceListId(String priceListId) {
    this.priceListId = priceListId;
    return this;
  }

  /**
   * Get priceListId
   * @return priceListId
   */
  @javax.annotation.Nullable
  public String getPriceListId() {
    return priceListId;
  }

  public void setPriceListId(String priceListId) {
    this.priceListId = priceListId;
  }


  public DealUnitUpdateDto description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DealUnitUpdateDto enrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
    return this;
  }

  /**
   * Get enrollmentId
   * @return enrollmentId
   */
  @javax.annotation.Nullable
  public String getEnrollmentId() {
    return enrollmentId;
  }

  public void setEnrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
  }


  public DealUnitUpdateDto individualId(String individualId) {
    this.individualId = individualId;
    return this;
  }

  /**
   * Get individualId
   * @return individualId
   */
  @javax.annotation.Nullable
  public String getIndividualId() {
    return individualId;
  }

  public void setIndividualId(String individualId) {
    this.individualId = individualId;
  }


  public DealUnitUpdateDto paymentTermId(String paymentTermId) {
    this.paymentTermId = paymentTermId;
    return this;
  }

  /**
   * Get paymentTermId
   * @return paymentTermId
   */
  @javax.annotation.Nullable
  public String getPaymentTermId() {
    return paymentTermId;
  }

  public void setPaymentTermId(String paymentTermId) {
    this.paymentTermId = paymentTermId;
  }


  public DealUnitUpdateDto organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Get organizationId
   * @return organizationId
   */
  @javax.annotation.Nullable
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }


  public DealUnitUpdateDto receiverTenantId(String receiverTenantId) {
    this.receiverTenantId = receiverTenantId;
    return this;
  }

  /**
   * Get receiverTenantId
   * @return receiverTenantId
   */
  @javax.annotation.Nullable
  public String getReceiverTenantId() {
    return receiverTenantId;
  }

  public void setReceiverTenantId(String receiverTenantId) {
    this.receiverTenantId = receiverTenantId;
  }


  public DealUnitUpdateDto firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public DealUnitUpdateDto lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public DealUnitUpdateDto companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public DealUnitUpdateDto billingEmail(String billingEmail) {
    this.billingEmail = billingEmail;
    return this;
  }

  /**
   * Get billingEmail
   * @return billingEmail
   */
  @javax.annotation.Nullable
  public String getBillingEmail() {
    return billingEmail;
  }

  public void setBillingEmail(String billingEmail) {
    this.billingEmail = billingEmail;
  }


  public DealUnitUpdateDto addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Get addressLine1
   * @return addressLine1
   */
  @javax.annotation.Nullable
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public DealUnitUpdateDto addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

  /**
   * Get addressLine2
   * @return addressLine2
   */
  @javax.annotation.Nullable
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public DealUnitUpdateDto postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public DealUnitUpdateDto countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

  /**
   * Get countryId
   * @return countryId
   */
  @javax.annotation.Nullable
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }


  public DealUnitUpdateDto stateId(String stateId) {
    this.stateId = stateId;
    return this;
  }

  /**
   * Get stateId
   * @return stateId
   */
  @javax.annotation.Nullable
  public String getStateId() {
    return stateId;
  }

  public void setStateId(String stateId) {
    this.stateId = stateId;
  }


  public DealUnitUpdateDto cityId(String cityId) {
    this.cityId = cityId;
    return this;
  }

  /**
   * Get cityId
   * @return cityId
   */
  @javax.annotation.Nullable
  public String getCityId() {
    return cityId;
  }

  public void setCityId(String cityId) {
    this.cityId = cityId;
  }


  public DealUnitUpdateDto billingLocationId(String billingLocationId) {
    this.billingLocationId = billingLocationId;
    return this;
  }

  /**
   * Get billingLocationId
   * @return billingLocationId
   */
  @javax.annotation.Nullable
  public String getBillingLocationId() {
    return billingLocationId;
  }

  public void setBillingLocationId(String billingLocationId) {
    this.billingLocationId = billingLocationId;
  }


  public DealUnitUpdateDto shippingLocationId(String shippingLocationId) {
    this.shippingLocationId = shippingLocationId;
    return this;
  }

  /**
   * Get shippingLocationId
   * @return shippingLocationId
   */
  @javax.annotation.Nullable
  public String getShippingLocationId() {
    return shippingLocationId;
  }

  public void setShippingLocationId(String shippingLocationId) {
    this.shippingLocationId = shippingLocationId;
  }


  public DealUnitUpdateDto shippingMethodId(String shippingMethodId) {
    this.shippingMethodId = shippingMethodId;
    return this;
  }

  /**
   * Get shippingMethodId
   * @return shippingMethodId
   */
  @javax.annotation.Nullable
  public String getShippingMethodId() {
    return shippingMethodId;
  }

  public void setShippingMethodId(String shippingMethodId) {
    this.shippingMethodId = shippingMethodId;
  }


  public DealUnitUpdateDto ordered(Boolean ordered) {
    this.ordered = ordered;
    return this;
  }

  /**
   * Get ordered
   * @return ordered
   */
  @javax.annotation.Nullable
  public Boolean getOrdered() {
    return ordered;
  }

  public void setOrdered(Boolean ordered) {
    this.ordered = ordered;
  }


  public DealUnitUpdateDto cartId(String cartId) {
    this.cartId = cartId;
    return this;
  }

  /**
   * Get cartId
   * @return cartId
   */
  @javax.annotation.Nullable
  public String getCartId() {
    return cartId;
  }

  public void setCartId(String cartId) {
    this.cartId = cartId;
  }


  public DealUnitUpdateDto dealUnitFeedId(String dealUnitFeedId) {
    this.dealUnitFeedId = dealUnitFeedId;
    return this;
  }

  /**
   * Get dealUnitFeedId
   * @return dealUnitFeedId
   */
  @javax.annotation.Nullable
  public String getDealUnitFeedId() {
    return dealUnitFeedId;
  }

  public void setDealUnitFeedId(String dealUnitFeedId) {
    this.dealUnitFeedId = dealUnitFeedId;
  }


  public DealUnitUpdateDto dealUnitFlowId(String dealUnitFlowId) {
    this.dealUnitFlowId = dealUnitFlowId;
    return this;
  }

  /**
   * Get dealUnitFlowId
   * @return dealUnitFlowId
   */
  @javax.annotation.Nullable
  public String getDealUnitFlowId() {
    return dealUnitFlowId;
  }

  public void setDealUnitFlowId(String dealUnitFlowId) {
    this.dealUnitFlowId = dealUnitFlowId;
  }


  public DealUnitUpdateDto dealUnitFlowStageId(String dealUnitFlowStageId) {
    this.dealUnitFlowStageId = dealUnitFlowStageId;
    return this;
  }

  /**
   * Get dealUnitFlowStageId
   * @return dealUnitFlowStageId
   */
  @javax.annotation.Nullable
  public String getDealUnitFlowStageId() {
    return dealUnitFlowStageId;
  }

  public void setDealUnitFlowStageId(String dealUnitFlowStageId) {
    this.dealUnitFlowStageId = dealUnitFlowStageId;
  }


  public DealUnitUpdateDto partnerCreated(Boolean partnerCreated) {
    this.partnerCreated = partnerCreated;
    return this;
  }

  /**
   * Get partnerCreated
   * @return partnerCreated
   */
  @javax.annotation.Nullable
  public Boolean getPartnerCreated() {
    return partnerCreated;
  }

  public void setPartnerCreated(Boolean partnerCreated) {
    this.partnerCreated = partnerCreated;
  }


  public DealUnitUpdateDto partnerCollaboration(Boolean partnerCollaboration) {
    this.partnerCollaboration = partnerCollaboration;
    return this;
  }

  /**
   * Get partnerCollaboration
   * @return partnerCollaboration
   */
  @javax.annotation.Nullable
  public Boolean getPartnerCollaboration() {
    return partnerCollaboration;
  }

  public void setPartnerCollaboration(Boolean partnerCollaboration) {
    this.partnerCollaboration = partnerCollaboration;
  }


  public DealUnitUpdateDto proposedSolution(String proposedSolution) {
    this.proposedSolution = proposedSolution;
    return this;
  }

  /**
   * Get proposedSolution
   * @return proposedSolution
   */
  @javax.annotation.Nullable
  public String getProposedSolution() {
    return proposedSolution;
  }

  public void setProposedSolution(String proposedSolution) {
    this.proposedSolution = proposedSolution;
  }


  public DealUnitUpdateDto currentSituation(String currentSituation) {
    this.currentSituation = currentSituation;
    return this;
  }

  /**
   * Get currentSituation
   * @return currentSituation
   */
  @javax.annotation.Nullable
  public String getCurrentSituation() {
    return currentSituation;
  }

  public void setCurrentSituation(String currentSituation) {
    this.currentSituation = currentSituation;
  }


  public DealUnitUpdateDto customerNeed(String customerNeed) {
    this.customerNeed = customerNeed;
    return this;
  }

  /**
   * Get customerNeed
   * @return customerNeed
   */
  @javax.annotation.Nullable
  public String getCustomerNeed() {
    return customerNeed;
  }

  public void setCustomerNeed(String customerNeed) {
    this.customerNeed = customerNeed;
  }


  public DealUnitUpdateDto wonDate(OffsetDateTime wonDate) {
    this.wonDate = wonDate;
    return this;
  }

  /**
   * Get wonDate
   * @return wonDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getWonDate() {
    return wonDate;
  }

  public void setWonDate(OffsetDateTime wonDate) {
    this.wonDate = wonDate;
  }


  public DealUnitUpdateDto lostDate(OffsetDateTime lostDate) {
    this.lostDate = lostDate;
    return this;
  }

  /**
   * Get lostDate
   * @return lostDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLostDate() {
    return lostDate;
  }

  public void setLostDate(OffsetDateTime lostDate) {
    this.lostDate = lostDate;
  }


  public DealUnitUpdateDto expiryDate(OffsetDateTime expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

  /**
   * Get expiryDate
   * @return expiryDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(OffsetDateTime expiryDate) {
    this.expiryDate = expiryDate;
  }


  public DealUnitUpdateDto deliveredDate(OffsetDateTime deliveredDate) {
    this.deliveredDate = deliveredDate;
    return this;
  }

  /**
   * Get deliveredDate
   * @return deliveredDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeliveredDate() {
    return deliveredDate;
  }

  public void setDeliveredDate(OffsetDateTime deliveredDate) {
    this.deliveredDate = deliveredDate;
  }


  public DealUnitUpdateDto closedTimestamp(OffsetDateTime closedTimestamp) {
    this.closedTimestamp = closedTimestamp;
    return this;
  }

  /**
   * Get closedTimestamp
   * @return closedTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getClosedTimestamp() {
    return closedTimestamp;
  }

  public void setClosedTimestamp(OffsetDateTime closedTimestamp) {
    this.closedTimestamp = closedTimestamp;
  }


  public DealUnitUpdateDto expectedCloseDate(OffsetDateTime expectedCloseDate) {
    this.expectedCloseDate = expectedCloseDate;
    return this;
  }

  /**
   * Get expectedCloseDate
   * @return expectedCloseDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpectedCloseDate() {
    return expectedCloseDate;
  }

  public void setExpectedCloseDate(OffsetDateTime expectedCloseDate) {
    this.expectedCloseDate = expectedCloseDate;
  }


  public DealUnitUpdateDto dealUnitStatus(DealUnitStatusEnum dealUnitStatus) {
    this.dealUnitStatus = dealUnitStatus;
    return this;
  }

  /**
   * Get dealUnitStatus
   * @return dealUnitStatus
   */
  @javax.annotation.Nullable
  public DealUnitStatusEnum getDealUnitStatus() {
    return dealUnitStatus;
  }

  public void setDealUnitStatus(DealUnitStatusEnum dealUnitStatus) {
    this.dealUnitStatus = dealUnitStatus;
  }


  public DealUnitUpdateDto dealUnitPurchaseProcess(DealUnitPurchaseProcessEnum dealUnitPurchaseProcess) {
    this.dealUnitPurchaseProcess = dealUnitPurchaseProcess;
    return this;
  }

  /**
   * Get dealUnitPurchaseProcess
   * @return dealUnitPurchaseProcess
   */
  @javax.annotation.Nullable
  public DealUnitPurchaseProcessEnum getDealUnitPurchaseProcess() {
    return dealUnitPurchaseProcess;
  }

  public void setDealUnitPurchaseProcess(DealUnitPurchaseProcessEnum dealUnitPurchaseProcess) {
    this.dealUnitPurchaseProcess = dealUnitPurchaseProcess;
  }


  public DealUnitUpdateDto dealUnitForecastCategory(DealUnitForecastCategoryEnum dealUnitForecastCategory) {
    this.dealUnitForecastCategory = dealUnitForecastCategory;
    return this;
  }

  /**
   * Get dealUnitForecastCategory
   * @return dealUnitForecastCategory
   */
  @javax.annotation.Nullable
  public DealUnitForecastCategoryEnum getDealUnitForecastCategory() {
    return dealUnitForecastCategory;
  }

  public void setDealUnitForecastCategory(DealUnitForecastCategoryEnum dealUnitForecastCategory) {
    this.dealUnitForecastCategory = dealUnitForecastCategory;
  }


  public DealUnitUpdateDto dealUnitAmountsCalculation(DealUnitAmountsCalculationEnum dealUnitAmountsCalculation) {
    this.dealUnitAmountsCalculation = dealUnitAmountsCalculation;
    return this;
  }

  /**
   * Get dealUnitAmountsCalculation
   * @return dealUnitAmountsCalculation
   */
  @javax.annotation.Nullable
  public DealUnitAmountsCalculationEnum getDealUnitAmountsCalculation() {
    return dealUnitAmountsCalculation;
  }

  public void setDealUnitAmountsCalculation(DealUnitAmountsCalculationEnum dealUnitAmountsCalculation) {
    this.dealUnitAmountsCalculation = dealUnitAmountsCalculation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DealUnitUpdateDto dealUnitUpdateDto = (DealUnitUpdateDto) o;
    return Objects.equals(this.closed, dealUnitUpdateDto.closed) &&
        Objects.equals(this.title, dealUnitUpdateDto.title) &&
        Objects.equals(this.userId, dealUnitUpdateDto.userId) &&
        Objects.equals(this.tenantId, dealUnitUpdateDto.tenantId) &&
        Objects.equals(this.forexRate, dealUnitUpdateDto.forexRate) &&
        Objects.equals(this.currencyId, dealUnitUpdateDto.currencyId) &&
        Objects.equals(this.priceListId, dealUnitUpdateDto.priceListId) &&
        Objects.equals(this.description, dealUnitUpdateDto.description) &&
        Objects.equals(this.enrollmentId, dealUnitUpdateDto.enrollmentId) &&
        Objects.equals(this.individualId, dealUnitUpdateDto.individualId) &&
        Objects.equals(this.paymentTermId, dealUnitUpdateDto.paymentTermId) &&
        Objects.equals(this.organizationId, dealUnitUpdateDto.organizationId) &&
        Objects.equals(this.receiverTenantId, dealUnitUpdateDto.receiverTenantId) &&
        Objects.equals(this.firstName, dealUnitUpdateDto.firstName) &&
        Objects.equals(this.lastName, dealUnitUpdateDto.lastName) &&
        Objects.equals(this.companyName, dealUnitUpdateDto.companyName) &&
        Objects.equals(this.billingEmail, dealUnitUpdateDto.billingEmail) &&
        Objects.equals(this.addressLine1, dealUnitUpdateDto.addressLine1) &&
        Objects.equals(this.addressLine2, dealUnitUpdateDto.addressLine2) &&
        Objects.equals(this.postalCode, dealUnitUpdateDto.postalCode) &&
        Objects.equals(this.countryId, dealUnitUpdateDto.countryId) &&
        Objects.equals(this.stateId, dealUnitUpdateDto.stateId) &&
        Objects.equals(this.cityId, dealUnitUpdateDto.cityId) &&
        Objects.equals(this.billingLocationId, dealUnitUpdateDto.billingLocationId) &&
        Objects.equals(this.shippingLocationId, dealUnitUpdateDto.shippingLocationId) &&
        Objects.equals(this.shippingMethodId, dealUnitUpdateDto.shippingMethodId) &&
        Objects.equals(this.ordered, dealUnitUpdateDto.ordered) &&
        Objects.equals(this.cartId, dealUnitUpdateDto.cartId) &&
        Objects.equals(this.dealUnitFeedId, dealUnitUpdateDto.dealUnitFeedId) &&
        Objects.equals(this.dealUnitFlowId, dealUnitUpdateDto.dealUnitFlowId) &&
        Objects.equals(this.dealUnitFlowStageId, dealUnitUpdateDto.dealUnitFlowStageId) &&
        Objects.equals(this.partnerCreated, dealUnitUpdateDto.partnerCreated) &&
        Objects.equals(this.partnerCollaboration, dealUnitUpdateDto.partnerCollaboration) &&
        Objects.equals(this.proposedSolution, dealUnitUpdateDto.proposedSolution) &&
        Objects.equals(this.currentSituation, dealUnitUpdateDto.currentSituation) &&
        Objects.equals(this.customerNeed, dealUnitUpdateDto.customerNeed) &&
        Objects.equals(this.wonDate, dealUnitUpdateDto.wonDate) &&
        Objects.equals(this.lostDate, dealUnitUpdateDto.lostDate) &&
        Objects.equals(this.expiryDate, dealUnitUpdateDto.expiryDate) &&
        Objects.equals(this.deliveredDate, dealUnitUpdateDto.deliveredDate) &&
        Objects.equals(this.closedTimestamp, dealUnitUpdateDto.closedTimestamp) &&
        Objects.equals(this.expectedCloseDate, dealUnitUpdateDto.expectedCloseDate) &&
        Objects.equals(this.dealUnitStatus, dealUnitUpdateDto.dealUnitStatus) &&
        Objects.equals(this.dealUnitPurchaseProcess, dealUnitUpdateDto.dealUnitPurchaseProcess) &&
        Objects.equals(this.dealUnitForecastCategory, dealUnitUpdateDto.dealUnitForecastCategory) &&
        Objects.equals(this.dealUnitAmountsCalculation, dealUnitUpdateDto.dealUnitAmountsCalculation);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(closed, title, userId, tenantId, forexRate, currencyId, priceListId, description, enrollmentId, individualId, paymentTermId, organizationId, receiverTenantId, firstName, lastName, companyName, billingEmail, addressLine1, addressLine2, postalCode, countryId, stateId, cityId, billingLocationId, shippingLocationId, shippingMethodId, ordered, cartId, dealUnitFeedId, dealUnitFlowId, dealUnitFlowStageId, partnerCreated, partnerCollaboration, proposedSolution, currentSituation, customerNeed, wonDate, lostDate, expiryDate, deliveredDate, closedTimestamp, expectedCloseDate, dealUnitStatus, dealUnitPurchaseProcess, dealUnitForecastCategory, dealUnitAmountsCalculation);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DealUnitUpdateDto {\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    forexRate: ").append(toIndentedString(forexRate)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    priceListId: ").append(toIndentedString(priceListId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enrollmentId: ").append(toIndentedString(enrollmentId)).append("\n");
    sb.append("    individualId: ").append(toIndentedString(individualId)).append("\n");
    sb.append("    paymentTermId: ").append(toIndentedString(paymentTermId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    receiverTenantId: ").append(toIndentedString(receiverTenantId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    billingEmail: ").append(toIndentedString(billingEmail)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    stateId: ").append(toIndentedString(stateId)).append("\n");
    sb.append("    cityId: ").append(toIndentedString(cityId)).append("\n");
    sb.append("    billingLocationId: ").append(toIndentedString(billingLocationId)).append("\n");
    sb.append("    shippingLocationId: ").append(toIndentedString(shippingLocationId)).append("\n");
    sb.append("    shippingMethodId: ").append(toIndentedString(shippingMethodId)).append("\n");
    sb.append("    ordered: ").append(toIndentedString(ordered)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    dealUnitFeedId: ").append(toIndentedString(dealUnitFeedId)).append("\n");
    sb.append("    dealUnitFlowId: ").append(toIndentedString(dealUnitFlowId)).append("\n");
    sb.append("    dealUnitFlowStageId: ").append(toIndentedString(dealUnitFlowStageId)).append("\n");
    sb.append("    partnerCreated: ").append(toIndentedString(partnerCreated)).append("\n");
    sb.append("    partnerCollaboration: ").append(toIndentedString(partnerCollaboration)).append("\n");
    sb.append("    proposedSolution: ").append(toIndentedString(proposedSolution)).append("\n");
    sb.append("    currentSituation: ").append(toIndentedString(currentSituation)).append("\n");
    sb.append("    customerNeed: ").append(toIndentedString(customerNeed)).append("\n");
    sb.append("    wonDate: ").append(toIndentedString(wonDate)).append("\n");
    sb.append("    lostDate: ").append(toIndentedString(lostDate)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    deliveredDate: ").append(toIndentedString(deliveredDate)).append("\n");
    sb.append("    closedTimestamp: ").append(toIndentedString(closedTimestamp)).append("\n");
    sb.append("    expectedCloseDate: ").append(toIndentedString(expectedCloseDate)).append("\n");
    sb.append("    dealUnitStatus: ").append(toIndentedString(dealUnitStatus)).append("\n");
    sb.append("    dealUnitPurchaseProcess: ").append(toIndentedString(dealUnitPurchaseProcess)).append("\n");
    sb.append("    dealUnitForecastCategory: ").append(toIndentedString(dealUnitForecastCategory)).append("\n");
    sb.append("    dealUnitAmountsCalculation: ").append(toIndentedString(dealUnitAmountsCalculation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("closed");
    openapiFields.add("title");
    openapiFields.add("userId");
    openapiFields.add("tenantId");
    openapiFields.add("forexRate");
    openapiFields.add("currencyId");
    openapiFields.add("priceListId");
    openapiFields.add("description");
    openapiFields.add("enrollmentId");
    openapiFields.add("individualId");
    openapiFields.add("paymentTermId");
    openapiFields.add("organizationId");
    openapiFields.add("receiverTenantId");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("companyName");
    openapiFields.add("billingEmail");
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("postalCode");
    openapiFields.add("countryId");
    openapiFields.add("stateId");
    openapiFields.add("cityId");
    openapiFields.add("billingLocationId");
    openapiFields.add("shippingLocationId");
    openapiFields.add("shippingMethodId");
    openapiFields.add("ordered");
    openapiFields.add("cartId");
    openapiFields.add("dealUnitFeedId");
    openapiFields.add("dealUnitFlowId");
    openapiFields.add("dealUnitFlowStageId");
    openapiFields.add("partnerCreated");
    openapiFields.add("partnerCollaboration");
    openapiFields.add("proposedSolution");
    openapiFields.add("currentSituation");
    openapiFields.add("customerNeed");
    openapiFields.add("wonDate");
    openapiFields.add("lostDate");
    openapiFields.add("expiryDate");
    openapiFields.add("deliveredDate");
    openapiFields.add("closedTimestamp");
    openapiFields.add("expectedCloseDate");
    openapiFields.add("dealUnitStatus");
    openapiFields.add("dealUnitPurchaseProcess");
    openapiFields.add("dealUnitForecastCategory");
    openapiFields.add("dealUnitAmountsCalculation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DealUnitUpdateDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DealUnitUpdateDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DealUnitUpdateDto is not found in the empty JSON string", DealUnitUpdateDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DealUnitUpdateDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DealUnitUpdateDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("currencyId") != null && !jsonObj.get("currencyId").isJsonNull()) && !jsonObj.get("currencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyId").toString()));
      }
      if ((jsonObj.get("priceListId") != null && !jsonObj.get("priceListId").isJsonNull()) && !jsonObj.get("priceListId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceListId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceListId").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("enrollmentId") != null && !jsonObj.get("enrollmentId").isJsonNull()) && !jsonObj.get("enrollmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enrollmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enrollmentId").toString()));
      }
      if ((jsonObj.get("individualId") != null && !jsonObj.get("individualId").isJsonNull()) && !jsonObj.get("individualId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `individualId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("individualId").toString()));
      }
      if ((jsonObj.get("paymentTermId") != null && !jsonObj.get("paymentTermId").isJsonNull()) && !jsonObj.get("paymentTermId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentTermId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentTermId").toString()));
      }
      if ((jsonObj.get("organizationId") != null && !jsonObj.get("organizationId").isJsonNull()) && !jsonObj.get("organizationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationId").toString()));
      }
      if ((jsonObj.get("receiverTenantId") != null && !jsonObj.get("receiverTenantId").isJsonNull()) && !jsonObj.get("receiverTenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverTenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverTenantId").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("billingEmail") != null && !jsonObj.get("billingEmail").isJsonNull()) && !jsonObj.get("billingEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingEmail").toString()));
      }
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("countryId") != null && !jsonObj.get("countryId").isJsonNull()) && !jsonObj.get("countryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryId").toString()));
      }
      if ((jsonObj.get("stateId") != null && !jsonObj.get("stateId").isJsonNull()) && !jsonObj.get("stateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateId").toString()));
      }
      if ((jsonObj.get("cityId") != null && !jsonObj.get("cityId").isJsonNull()) && !jsonObj.get("cityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cityId").toString()));
      }
      if ((jsonObj.get("billingLocationId") != null && !jsonObj.get("billingLocationId").isJsonNull()) && !jsonObj.get("billingLocationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingLocationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingLocationId").toString()));
      }
      if ((jsonObj.get("shippingLocationId") != null && !jsonObj.get("shippingLocationId").isJsonNull()) && !jsonObj.get("shippingLocationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingLocationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingLocationId").toString()));
      }
      if ((jsonObj.get("shippingMethodId") != null && !jsonObj.get("shippingMethodId").isJsonNull()) && !jsonObj.get("shippingMethodId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodId").toString()));
      }
      if ((jsonObj.get("cartId") != null && !jsonObj.get("cartId").isJsonNull()) && !jsonObj.get("cartId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cartId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cartId").toString()));
      }
      if ((jsonObj.get("dealUnitFeedId") != null && !jsonObj.get("dealUnitFeedId").isJsonNull()) && !jsonObj.get("dealUnitFeedId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dealUnitFeedId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dealUnitFeedId").toString()));
      }
      if ((jsonObj.get("dealUnitFlowId") != null && !jsonObj.get("dealUnitFlowId").isJsonNull()) && !jsonObj.get("dealUnitFlowId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dealUnitFlowId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dealUnitFlowId").toString()));
      }
      if ((jsonObj.get("dealUnitFlowStageId") != null && !jsonObj.get("dealUnitFlowStageId").isJsonNull()) && !jsonObj.get("dealUnitFlowStageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dealUnitFlowStageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dealUnitFlowStageId").toString()));
      }
      if ((jsonObj.get("proposedSolution") != null && !jsonObj.get("proposedSolution").isJsonNull()) && !jsonObj.get("proposedSolution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proposedSolution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proposedSolution").toString()));
      }
      if ((jsonObj.get("currentSituation") != null && !jsonObj.get("currentSituation").isJsonNull()) && !jsonObj.get("currentSituation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentSituation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentSituation").toString()));
      }
      if ((jsonObj.get("customerNeed") != null && !jsonObj.get("customerNeed").isJsonNull()) && !jsonObj.get("customerNeed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerNeed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerNeed").toString()));
      }
      // validate the optional field `dealUnitStatus`
      if (jsonObj.get("dealUnitStatus") != null && !jsonObj.get("dealUnitStatus").isJsonNull()) {
        DealUnitStatusEnum.validateJsonElement(jsonObj.get("dealUnitStatus"));
      }
      // validate the optional field `dealUnitPurchaseProcess`
      if (jsonObj.get("dealUnitPurchaseProcess") != null && !jsonObj.get("dealUnitPurchaseProcess").isJsonNull()) {
        DealUnitPurchaseProcessEnum.validateJsonElement(jsonObj.get("dealUnitPurchaseProcess"));
      }
      // validate the optional field `dealUnitForecastCategory`
      if (jsonObj.get("dealUnitForecastCategory") != null && !jsonObj.get("dealUnitForecastCategory").isJsonNull()) {
        DealUnitForecastCategoryEnum.validateJsonElement(jsonObj.get("dealUnitForecastCategory"));
      }
      // validate the optional field `dealUnitAmountsCalculation`
      if (jsonObj.get("dealUnitAmountsCalculation") != null && !jsonObj.get("dealUnitAmountsCalculation").isJsonNull()) {
        DealUnitAmountsCalculationEnum.validateJsonElement(jsonObj.get("dealUnitAmountsCalculation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DealUnitUpdateDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DealUnitUpdateDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DealUnitUpdateDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DealUnitUpdateDto.class));

       return (TypeAdapter<T>) new TypeAdapter<DealUnitUpdateDto>() {
           @Override
           public void write(JsonWriter out, DealUnitUpdateDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DealUnitUpdateDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DealUnitUpdateDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DealUnitUpdateDto
   * @throws IOException if the JSON string is invalid with respect to DealUnitUpdateDto
   */
  public static DealUnitUpdateDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DealUnitUpdateDto.class);
  }

  /**
   * Convert an instance of DealUnitUpdateDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

