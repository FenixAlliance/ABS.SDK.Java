/*
 * DealsService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.ExtendedSalesLiteratureDtoListEnvelope;
import org.openapitools.client.model.SalesLiteratureCreateDto;
import org.openapitools.client.model.SalesLiteratureDtoEnvelope;
import org.openapitools.client.model.SalesLiteratureDtoListEnvelope;
import org.openapitools.client.model.SalesLiteratureUpdateDto;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SalesLiteraturesApi
 */
@Disabled
public class SalesLiteraturesApiTest {

    private final SalesLiteraturesApi api = new SalesLiteraturesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceSalesLiteraturesExtendedGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        ExtendedSalesLiteratureDtoListEnvelope response = api.apiV2DealsServiceSalesLiteraturesExtendedGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceSalesLiteraturesGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        SalesLiteratureDtoListEnvelope response = api.apiV2DealsServiceSalesLiteraturesGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceSalesLiteraturesPostTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        SalesLiteratureCreateDto salesLiteratureCreateDto = null;
        EmptyEnvelope response = api.apiV2DealsServiceSalesLiteraturesPost(tenantId, apiVersion, xApiVersion, salesLiteratureCreateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceSalesLiteraturesSalesLiteratureIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID salesLiteratureId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2DealsServiceSalesLiteraturesSalesLiteratureIdDelete(tenantId, salesLiteratureId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceSalesLiteraturesSalesLiteratureIdGetTest() throws ApiException {
        UUID salesLiteratureId = null;
        String apiVersion = null;
        String xApiVersion = null;
        SalesLiteratureDtoEnvelope response = api.apiV2DealsServiceSalesLiteraturesSalesLiteratureIdGet(salesLiteratureId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceSalesLiteraturesSalesLiteratureIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID salesLiteratureId = null;
        String apiVersion = null;
        String xApiVersion = null;
        SalesLiteratureUpdateDto salesLiteratureUpdateDto = null;
        EmptyEnvelope response = api.apiV2DealsServiceSalesLiteraturesSalesLiteratureIdPut(tenantId, salesLiteratureId, apiVersion, xApiVersion, salesLiteratureUpdateDto);
        // TODO: test validations
    }

}
