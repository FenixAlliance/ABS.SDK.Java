/*
 * DealsService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DealUnitFlowCreateDto;
import org.openapitools.client.model.DealUnitFlowDtoEnvelope;
import org.openapitools.client.model.DealUnitFlowDtoListEnvelope;
import org.openapitools.client.model.DealUnitFlowStageCreateDto;
import org.openapitools.client.model.DealUnitFlowStageDtoEnvelope;
import org.openapitools.client.model.DealUnitFlowStageDtoListEnvelope;
import org.openapitools.client.model.DealUnitFlowStageUpdateDto;
import org.openapitools.client.model.DealUnitFlowUpdateDto;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.Int32Envelope;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DealUnitFlowsApi
 */
@Disabled
public class DealUnitFlowsApiTest {

    private final DealUnitFlowsApi api = new DealUnitFlowsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsCountGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.apiV2DealsServiceDealUnitFlowsCountGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsDealUnitFlowIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID dealUnitFlowId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2DealsServiceDealUnitFlowsDealUnitFlowIdDelete(tenantId, dealUnitFlowId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsDealUnitFlowIdGetTest() throws ApiException {
        UUID tenantId = null;
        UUID dealUnitFlowId = null;
        String apiVersion = null;
        String xApiVersion = null;
        DealUnitFlowDtoEnvelope response = api.apiV2DealsServiceDealUnitFlowsDealUnitFlowIdGet(tenantId, dealUnitFlowId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsDealUnitFlowIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID dealUnitFlowId = null;
        String apiVersion = null;
        String xApiVersion = null;
        DealUnitFlowUpdateDto dealUnitFlowUpdateDto = null;
        EmptyEnvelope response = api.apiV2DealsServiceDealUnitFlowsDealUnitFlowIdPut(tenantId, dealUnitFlowId, apiVersion, xApiVersion, dealUnitFlowUpdateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesCountGetTest() throws ApiException {
        UUID tenantId = null;
        UUID dealUnitFlowId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesCountGet(tenantId, dealUnitFlowId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesDealUnitFlowStageIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID dealUnitFlowId = null;
        UUID dealUnitFlowStageId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesDealUnitFlowStageIdDelete(tenantId, dealUnitFlowId, dealUnitFlowStageId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesDealUnitFlowStageIdGetTest() throws ApiException {
        UUID tenantId = null;
        UUID dealUnitFlowId = null;
        UUID dealUnitFlowStageId = null;
        String apiVersion = null;
        String xApiVersion = null;
        DealUnitFlowStageDtoEnvelope response = api.apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesDealUnitFlowStageIdGet(tenantId, dealUnitFlowId, dealUnitFlowStageId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesDealUnitFlowStageIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID dealUnitFlowId = null;
        UUID dealUnitFlowStageId = null;
        String apiVersion = null;
        String xApiVersion = null;
        DealUnitFlowStageUpdateDto dealUnitFlowStageUpdateDto = null;
        EmptyEnvelope response = api.apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesDealUnitFlowStageIdPut(tenantId, dealUnitFlowId, dealUnitFlowStageId, apiVersion, xApiVersion, dealUnitFlowStageUpdateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesGetTest() throws ApiException {
        UUID tenantId = null;
        UUID dealUnitFlowId = null;
        String apiVersion = null;
        String xApiVersion = null;
        DealUnitFlowStageDtoListEnvelope response = api.apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesGet(tenantId, dealUnitFlowId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesPostTest() throws ApiException {
        UUID tenantId = null;
        UUID dealUnitFlowId = null;
        String apiVersion = null;
        String xApiVersion = null;
        DealUnitFlowStageCreateDto dealUnitFlowStageCreateDto = null;
        EmptyEnvelope response = api.apiV2DealsServiceDealUnitFlowsDealUnitFlowIdStagesPost(tenantId, dealUnitFlowId, apiVersion, xApiVersion, dealUnitFlowStageCreateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        DealUnitFlowDtoListEnvelope response = api.apiV2DealsServiceDealUnitFlowsGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2DealsServiceDealUnitFlowsPostTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        DealUnitFlowCreateDto dealUnitFlowCreateDto = null;
        EmptyEnvelope response = api.apiV2DealsServiceDealUnitFlowsPost(tenantId, apiVersion, xApiVersion, dealUnitFlowCreateDto);
        // TODO: test validations
    }

}
