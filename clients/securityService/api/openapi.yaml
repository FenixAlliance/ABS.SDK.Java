openapi: 3.0.1
info:
  contact:
    email: support@fenix-alliance.com
    name: Fenix Alliance Inc.
    url: https://fenixalliance.com.co/Support
  license:
    name: Fenix Alliance Inc.
    url: https://fenix-alliance.com.co/Legal/Policies/eula
  termsOfService: https://absuite.net/eula
  title: SecurityService
  version: 2.0.1.4089
servers:
- url: /
security:
- Bearer: []
paths:
  /api/v2/SecurityService/Permissions:
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRoleDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurityRoleDtoListEnvelope'
          description: OK
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityPermissionCreateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/SecurityPermissionCreateDto'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: Created
      tags:
      - Permissions
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Permissions/{securityPermissionId}:
    delete:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: No Content
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRoleDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurityRoleDtoListEnvelope'
          description: OK
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
    put:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityPermissionUpdateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/SecurityPermissionUpdateDto'
        required: true
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Permissions
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Permissions/{securityPermissionId}/Roles/{securityRoleId}:
    delete:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: No Content
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: Created
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Permissions/{securityPermissionId}/Enrollments:
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantEnrolmentDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/TenantEnrolmentDtoListEnvelope'
          description: OK
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Permissions/{securityPermissionId}/Enrollments/{enrollmentId}:
    delete:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: enrollmentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: No Content
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: enrollmentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: Created
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Permissions/{securityPermissionId}/Applications/{applicationId}:
    delete:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: Created
      tags:
      - Permissions
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Roles:
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRoleDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurityRoleDtoListEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRoleCreateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/SecurityRoleCreateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: Created
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Roles/{securityRoleId}:
    delete:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRoleDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurityRoleDtoListEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
    put:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRoleUpdateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/SecurityRoleUpdateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Roles/{securityRoleId}/Permissions:
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPermissionDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurityPermissionDtoListEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Roles/{securityRoleId}/Permissions/{securityPermissionId}:
    delete:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: securityPermissionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Roles/{securityRoleId}/Enrollments:
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantEnrolmentDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/TenantEnrolmentDtoListEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Roles/{securityRoleId}/Enrollments/{enrollmentId}:
    delete:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: enrollmentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: enrollmentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
  /api/v2/SecurityService/Roles/{securityRoleId}/Applications/{applicationId}:
    delete:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: securityRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Bad Request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Roles
      x-accepts:
      - application/json
      - application/xml
components:
  schemas:
    EmptyEnvelope:
      additionalProperties: false
      example:
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
      type: object
    ErrorEnvelope:
      additionalProperties: false
      example:
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
      type: object
    SecurityPermissionCreateDto:
      additionalProperties: false
      example:
        name: name
        tenantId: tenantId
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        tenantId:
          minLength: 1
          type: string
        description:
          maxLength: 500
          nullable: true
          type: string
      required:
      - name
      - tenantId
      type: object
    SecurityPermissionDto:
      additionalProperties: false
      example:
        name: name
        tenantId: tenantId
        description: description
        id: id
        isSystemPermission: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        timestamp:
          format: date-time
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        isSystemPermission:
          type: boolean
      type: object
    SecurityPermissionDtoListEnvelope:
      additionalProperties: false
      example:
        result:
        - name: name
          tenantId: tenantId
          description: description
          id: id
          isSystemPermission: true
          timestamp: 2000-01-23T04:56:07.000+00:00
        - name: name
          tenantId: tenantId
          description: description
          id: id
          isSystemPermission: true
          timestamp: 2000-01-23T04:56:07.000+00:00
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
        result:
          items:
            $ref: '#/components/schemas/SecurityPermissionDto'
          nullable: true
          type: array
      type: object
    SecurityPermissionUpdateDto:
      additionalProperties: false
      example:
        name: name
        description: description
      properties:
        name:
          minLength: 1
          type: string
        description:
          maxLength: 500
          nullable: true
          type: string
      required:
      - name
      type: object
    SecurityRoleCreateDto:
      additionalProperties: false
      example:
        name: name
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        name:
          minLength: 1
          type: string
        tenantId:
          format: uuid
          type: string
        description:
          maxLength: 500
          nullable: true
          type: string
      required:
      - name
      - tenantId
      type: object
    SecurityRoleDto:
      additionalProperties: false
      example:
        isSystemRole: true
        name: name
        tenantId: tenantId
        description: description
        id: id
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        timestamp:
          format: date-time
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        isSystemRole:
          type: boolean
      type: object
    SecurityRoleDtoListEnvelope:
      additionalProperties: false
      example:
        result:
        - isSystemRole: true
          name: name
          tenantId: tenantId
          description: description
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        - isSystemRole: true
          name: name
          tenantId: tenantId
          description: description
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
        result:
          items:
            $ref: '#/components/schemas/SecurityRoleDto'
          nullable: true
          type: array
      type: object
    SecurityRoleUpdateDto:
      additionalProperties: false
      example:
        name: name
        description: description
      properties:
        name:
          minLength: 1
          type: string
        description:
          maxLength: 500
          nullable: true
          type: string
      required:
      - name
      type: object
    TenantEnrolmentDto:
      additionalProperties: false
      example:
        isRoot: true
        isOwner: true
        tenantId: tenantId
        id: id
        isAdmin: true
        isDisabled: true
        userId: userId
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        timestamp:
          format: date-time
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        userId:
          nullable: true
          type: string
        isRoot:
          type: boolean
        isOwner:
          type: boolean
        isAdmin:
          type: boolean
        isDisabled:
          type: boolean
      type: object
    TenantEnrolmentDtoListEnvelope:
      additionalProperties: false
      example:
        result:
        - isRoot: true
          isOwner: true
          tenantId: tenantId
          id: id
          isAdmin: true
          isDisabled: true
          userId: userId
          timestamp: 2000-01-23T04:56:07.000+00:00
        - isRoot: true
          isOwner: true
          tenantId: tenantId
          id: id
          isAdmin: true
          isDisabled: true
          userId: userId
          timestamp: 2000-01-23T04:56:07.000+00:00
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
        result:
          items:
            $ref: '#/components/schemas/TenantEnrolmentDto'
          nullable: true
          type: array
      type: object
  securitySchemes:
    Bearer:
      description: "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter\
        \ 'Bearer' [Single Space] and then your token in the text input below.\r\n\
        \r\nExample: \"Bearer ey...cc\""
      in: header
      name: Authorization
      type: apiKey

