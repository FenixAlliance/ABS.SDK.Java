/*
 * CrmService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContactUpdateDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T15:35:39.798602200-05:00[America/Bogota]", comments = "Generator version: 7.9.0")
public class ContactUpdateDto {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_BIRTHDAY = "birthday";
  @SerializedName(SERIALIZED_NAME_BIRTHDAY)
  private OffsetDateTime birthday;

  public static final String SERIALIZED_NAME_DUNS = "duns";
  @SerializedName(SERIALIZED_NAME_DUNS)
  private String duns;

  public static final String SERIALIZED_NAME_TAX_ID = "taxId";
  @SerializedName(SERIALIZED_NAME_TAX_ID)
  private String taxId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_PRIMARY_CONTACT_ID = "primaryContactId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CONTACT_ID)
  private String primaryContactId;

  public static final String SERIALIZED_NAME_QUALIFIED_NAME = "qualifiedName";
  @SerializedName(SERIALIZED_NAME_QUALIFIED_NAME)
  private String qualifiedName;

  public static final String SERIALIZED_NAME_ABOUT = "about";
  @SerializedName(SERIALIZED_NAME_ABOUT)
  private String about;

  public static final String SERIALIZED_NAME_MOBILE_PHONE = "mobilePhone";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE)
  private String mobilePhone;

  public static final String SERIALIZED_NAME_BUSINESS_PHONE = "businessPhone";
  @SerializedName(SERIALIZED_NAME_BUSINESS_PHONE)
  private String businessPhone;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private String countryId;

  public static final String SERIALIZED_NAME_PARENT_CONTACT_ID = "parentContactId";
  @SerializedName(SERIALIZED_NAME_PARENT_CONTACT_ID)
  private String parentContactId;

  public static final String SERIALIZED_NAME_STATE_ID = "stateId";
  @SerializedName(SERIALIZED_NAME_STATE_ID)
  private String stateId;

  public static final String SERIALIZED_NAME_CITY_ID = "cityId";
  @SerializedName(SERIALIZED_NAME_CITY_ID)
  private String cityId;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_STREET_LINE1 = "streetLine1";
  @SerializedName(SERIALIZED_NAME_STREET_LINE1)
  private String streetLine1;

  public static final String SERIALIZED_NAME_STREET_LINE2 = "streetLine2";
  @SerializedName(SERIALIZED_NAME_STREET_LINE2)
  private String streetLine2;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "currencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private String currencyId;

  public static final String SERIALIZED_NAME_LANGUAGE_ID = "languageId";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_ID)
  private String languageId;

  public static final String SERIALIZED_NAME_TIMEZONE_ID = "timezoneId";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_ID)
  private String timezoneId;

  public static final String SERIALIZED_NAME_COVER_URL = "coverUrl";
  @SerializedName(SERIALIZED_NAME_COVER_URL)
  private String coverUrl;

  public static final String SERIALIZED_NAME_GITHUB_USERNAME = "githubUsername";
  @SerializedName(SERIALIZED_NAME_GITHUB_USERNAME)
  private String githubUsername;

  public static final String SERIALIZED_NAME_INSTAGRAM_USERNAME = "instagramUsername";
  @SerializedName(SERIALIZED_NAME_INSTAGRAM_USERNAME)
  private String instagramUsername;

  public static final String SERIALIZED_NAME_TWITCH_URL = "twitchUrl";
  @SerializedName(SERIALIZED_NAME_TWITCH_URL)
  private String twitchUrl;

  public static final String SERIALIZED_NAME_REDDIT_URL = "redditUrl";
  @SerializedName(SERIALIZED_NAME_REDDIT_URL)
  private String redditUrl;

  public static final String SERIALIZED_NAME_GIT_HUB_URL = "gitHubUrl";
  @SerializedName(SERIALIZED_NAME_GIT_HUB_URL)
  private String gitHubUrl;

  public static final String SERIALIZED_NAME_GITHUB_URL = "githubUrl";
  @SerializedName(SERIALIZED_NAME_GITHUB_URL)
  private String githubUrl;

  public static final String SERIALIZED_NAME_TIK_TOK_URL = "tikTokUrl";
  @SerializedName(SERIALIZED_NAME_TIK_TOK_URL)
  private String tikTokUrl;

  public static final String SERIALIZED_NAME_TWITTER_URL = "twitterUrl";
  @SerializedName(SERIALIZED_NAME_TWITTER_URL)
  private String twitterUrl;

  public static final String SERIALIZED_NAME_YOU_TUBE_URL = "youTubeUrl";
  @SerializedName(SERIALIZED_NAME_YOU_TUBE_URL)
  private String youTubeUrl;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "websiteUrl";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;

  public static final String SERIALIZED_NAME_FACEBOOK_URL = "facebookUrl";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_URL)
  private String facebookUrl;

  public static final String SERIALIZED_NAME_LINKED_IN_URL = "linkedInUrl";
  @SerializedName(SERIALIZED_NAME_LINKED_IN_URL)
  private String linkedInUrl;

  public static final String SERIALIZED_NAME_INSTAGRAM_URL = "instagramUrl";
  @SerializedName(SERIALIZED_NAME_INSTAGRAM_URL)
  private String instagramUrl;

  public static final String SERIALIZED_NAME_TIK_TOK_USERNAME = "tikTokUsername";
  @SerializedName(SERIALIZED_NAME_TIK_TOK_USERNAME)
  private String tikTokUsername;

  public static final String SERIALIZED_NAME_STACK_EXCHANGE_URL = "stackExchangeUrl";
  @SerializedName(SERIALIZED_NAME_STACK_EXCHANGE_URL)
  private String stackExchangeUrl;

  public static final String SERIALIZED_NAME_STACK_OVERFLOW_URL = "stackOverflowUrl";
  @SerializedName(SERIALIZED_NAME_STACK_OVERFLOW_URL)
  private String stackOverflowUrl;

  public ContactUpdateDto() {
  }

  public ContactUpdateDto(
     String qualifiedName
  ) {
    this();
    this.qualifiedName = qualifiedName;
  }

  public ContactUpdateDto type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ContactUpdateDto birthday(OffsetDateTime birthday) {
    this.birthday = birthday;
    return this;
  }

  /**
   * Get birthday
   * @return birthday
   */
  @javax.annotation.Nullable
  public OffsetDateTime getBirthday() {
    return birthday;
  }

  public void setBirthday(OffsetDateTime birthday) {
    this.birthday = birthday;
  }


  public ContactUpdateDto duns(String duns) {
    this.duns = duns;
    return this;
  }

  /**
   * Get duns
   * @return duns
   */
  @javax.annotation.Nullable
  public String getDuns() {
    return duns;
  }

  public void setDuns(String duns) {
    this.duns = duns;
  }


  public ContactUpdateDto taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

  /**
   * Get taxId
   * @return taxId
   */
  @javax.annotation.Nullable
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }


  public ContactUpdateDto email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public ContactUpdateDto firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nonnull
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public ContactUpdateDto lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public ContactUpdateDto primaryContactId(String primaryContactId) {
    this.primaryContactId = primaryContactId;
    return this;
  }

  /**
   * Get primaryContactId
   * @return primaryContactId
   */
  @javax.annotation.Nullable
  public String getPrimaryContactId() {
    return primaryContactId;
  }

  public void setPrimaryContactId(String primaryContactId) {
    this.primaryContactId = primaryContactId;
  }


  /**
   * Get qualifiedName
   * @return qualifiedName
   */
  @javax.annotation.Nullable
  public String getQualifiedName() {
    return qualifiedName;
  }



  public ContactUpdateDto about(String about) {
    this.about = about;
    return this;
  }

  /**
   * Get about
   * @return about
   */
  @javax.annotation.Nullable
  public String getAbout() {
    return about;
  }

  public void setAbout(String about) {
    this.about = about;
  }


  public ContactUpdateDto mobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
    return this;
  }

  /**
   * Get mobilePhone
   * @return mobilePhone
   */
  @javax.annotation.Nullable
  public String getMobilePhone() {
    return mobilePhone;
  }

  public void setMobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
  }


  public ContactUpdateDto businessPhone(String businessPhone) {
    this.businessPhone = businessPhone;
    return this;
  }

  /**
   * Get businessPhone
   * @return businessPhone
   */
  @javax.annotation.Nullable
  public String getBusinessPhone() {
    return businessPhone;
  }

  public void setBusinessPhone(String businessPhone) {
    this.businessPhone = businessPhone;
  }


  public ContactUpdateDto jobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
    return this;
  }

  /**
   * Get jobTitle
   * @return jobTitle
   */
  @javax.annotation.Nullable
  public String getJobTitle() {
    return jobTitle;
  }

  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }


  public ContactUpdateDto countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

  /**
   * Get countryId
   * @return countryId
   */
  @javax.annotation.Nullable
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }


  public ContactUpdateDto parentContactId(String parentContactId) {
    this.parentContactId = parentContactId;
    return this;
  }

  /**
   * Get parentContactId
   * @return parentContactId
   */
  @javax.annotation.Nullable
  public String getParentContactId() {
    return parentContactId;
  }

  public void setParentContactId(String parentContactId) {
    this.parentContactId = parentContactId;
  }


  public ContactUpdateDto stateId(String stateId) {
    this.stateId = stateId;
    return this;
  }

  /**
   * Get stateId
   * @return stateId
   */
  @javax.annotation.Nullable
  public String getStateId() {
    return stateId;
  }

  public void setStateId(String stateId) {
    this.stateId = stateId;
  }


  public ContactUpdateDto cityId(String cityId) {
    this.cityId = cityId;
    return this;
  }

  /**
   * Get cityId
   * @return cityId
   */
  @javax.annotation.Nullable
  public String getCityId() {
    return cityId;
  }

  public void setCityId(String cityId) {
    this.cityId = cityId;
  }


  public ContactUpdateDto postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public ContactUpdateDto streetLine1(String streetLine1) {
    this.streetLine1 = streetLine1;
    return this;
  }

  /**
   * Get streetLine1
   * @return streetLine1
   */
  @javax.annotation.Nullable
  public String getStreetLine1() {
    return streetLine1;
  }

  public void setStreetLine1(String streetLine1) {
    this.streetLine1 = streetLine1;
  }


  public ContactUpdateDto streetLine2(String streetLine2) {
    this.streetLine2 = streetLine2;
    return this;
  }

  /**
   * Get streetLine2
   * @return streetLine2
   */
  @javax.annotation.Nullable
  public String getStreetLine2() {
    return streetLine2;
  }

  public void setStreetLine2(String streetLine2) {
    this.streetLine2 = streetLine2;
  }


  public ContactUpdateDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public ContactUpdateDto languageId(String languageId) {
    this.languageId = languageId;
    return this;
  }

  /**
   * Get languageId
   * @return languageId
   */
  @javax.annotation.Nullable
  public String getLanguageId() {
    return languageId;
  }

  public void setLanguageId(String languageId) {
    this.languageId = languageId;
  }


  public ContactUpdateDto timezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
    return this;
  }

  /**
   * Get timezoneId
   * @return timezoneId
   */
  @javax.annotation.Nullable
  public String getTimezoneId() {
    return timezoneId;
  }

  public void setTimezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
  }


  public ContactUpdateDto coverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
    return this;
  }

  /**
   * Get coverUrl
   * @return coverUrl
   */
  @javax.annotation.Nullable
  public String getCoverUrl() {
    return coverUrl;
  }

  public void setCoverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
  }


  public ContactUpdateDto githubUsername(String githubUsername) {
    this.githubUsername = githubUsername;
    return this;
  }

  /**
   * Get githubUsername
   * @return githubUsername
   */
  @javax.annotation.Nullable
  public String getGithubUsername() {
    return githubUsername;
  }

  public void setGithubUsername(String githubUsername) {
    this.githubUsername = githubUsername;
  }


  public ContactUpdateDto instagramUsername(String instagramUsername) {
    this.instagramUsername = instagramUsername;
    return this;
  }

  /**
   * Get instagramUsername
   * @return instagramUsername
   */
  @javax.annotation.Nullable
  public String getInstagramUsername() {
    return instagramUsername;
  }

  public void setInstagramUsername(String instagramUsername) {
    this.instagramUsername = instagramUsername;
  }


  public ContactUpdateDto twitchUrl(String twitchUrl) {
    this.twitchUrl = twitchUrl;
    return this;
  }

  /**
   * Get twitchUrl
   * @return twitchUrl
   */
  @javax.annotation.Nullable
  public String getTwitchUrl() {
    return twitchUrl;
  }

  public void setTwitchUrl(String twitchUrl) {
    this.twitchUrl = twitchUrl;
  }


  public ContactUpdateDto redditUrl(String redditUrl) {
    this.redditUrl = redditUrl;
    return this;
  }

  /**
   * Get redditUrl
   * @return redditUrl
   */
  @javax.annotation.Nullable
  public String getRedditUrl() {
    return redditUrl;
  }

  public void setRedditUrl(String redditUrl) {
    this.redditUrl = redditUrl;
  }


  public ContactUpdateDto gitHubUrl(String gitHubUrl) {
    this.gitHubUrl = gitHubUrl;
    return this;
  }

  /**
   * Get gitHubUrl
   * @return gitHubUrl
   */
  @javax.annotation.Nullable
  public String getGitHubUrl() {
    return gitHubUrl;
  }

  public void setGitHubUrl(String gitHubUrl) {
    this.gitHubUrl = gitHubUrl;
  }


  public ContactUpdateDto githubUrl(String githubUrl) {
    this.githubUrl = githubUrl;
    return this;
  }

  /**
   * Get githubUrl
   * @return githubUrl
   */
  @javax.annotation.Nullable
  public String getGithubUrl() {
    return githubUrl;
  }

  public void setGithubUrl(String githubUrl) {
    this.githubUrl = githubUrl;
  }


  public ContactUpdateDto tikTokUrl(String tikTokUrl) {
    this.tikTokUrl = tikTokUrl;
    return this;
  }

  /**
   * Get tikTokUrl
   * @return tikTokUrl
   */
  @javax.annotation.Nullable
  public String getTikTokUrl() {
    return tikTokUrl;
  }

  public void setTikTokUrl(String tikTokUrl) {
    this.tikTokUrl = tikTokUrl;
  }


  public ContactUpdateDto twitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
    return this;
  }

  /**
   * Get twitterUrl
   * @return twitterUrl
   */
  @javax.annotation.Nullable
  public String getTwitterUrl() {
    return twitterUrl;
  }

  public void setTwitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
  }


  public ContactUpdateDto youTubeUrl(String youTubeUrl) {
    this.youTubeUrl = youTubeUrl;
    return this;
  }

  /**
   * Get youTubeUrl
   * @return youTubeUrl
   */
  @javax.annotation.Nullable
  public String getYouTubeUrl() {
    return youTubeUrl;
  }

  public void setYouTubeUrl(String youTubeUrl) {
    this.youTubeUrl = youTubeUrl;
  }


  public ContactUpdateDto websiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * Get websiteUrl
   * @return websiteUrl
   */
  @javax.annotation.Nullable
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }


  public ContactUpdateDto facebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
    return this;
  }

  /**
   * Get facebookUrl
   * @return facebookUrl
   */
  @javax.annotation.Nullable
  public String getFacebookUrl() {
    return facebookUrl;
  }

  public void setFacebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
  }


  public ContactUpdateDto linkedInUrl(String linkedInUrl) {
    this.linkedInUrl = linkedInUrl;
    return this;
  }

  /**
   * Get linkedInUrl
   * @return linkedInUrl
   */
  @javax.annotation.Nullable
  public String getLinkedInUrl() {
    return linkedInUrl;
  }

  public void setLinkedInUrl(String linkedInUrl) {
    this.linkedInUrl = linkedInUrl;
  }


  public ContactUpdateDto instagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
    return this;
  }

  /**
   * Get instagramUrl
   * @return instagramUrl
   */
  @javax.annotation.Nullable
  public String getInstagramUrl() {
    return instagramUrl;
  }

  public void setInstagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
  }


  public ContactUpdateDto tikTokUsername(String tikTokUsername) {
    this.tikTokUsername = tikTokUsername;
    return this;
  }

  /**
   * Get tikTokUsername
   * @return tikTokUsername
   */
  @javax.annotation.Nullable
  public String getTikTokUsername() {
    return tikTokUsername;
  }

  public void setTikTokUsername(String tikTokUsername) {
    this.tikTokUsername = tikTokUsername;
  }


  public ContactUpdateDto stackExchangeUrl(String stackExchangeUrl) {
    this.stackExchangeUrl = stackExchangeUrl;
    return this;
  }

  /**
   * Get stackExchangeUrl
   * @return stackExchangeUrl
   */
  @javax.annotation.Nullable
  public String getStackExchangeUrl() {
    return stackExchangeUrl;
  }

  public void setStackExchangeUrl(String stackExchangeUrl) {
    this.stackExchangeUrl = stackExchangeUrl;
  }


  public ContactUpdateDto stackOverflowUrl(String stackOverflowUrl) {
    this.stackOverflowUrl = stackOverflowUrl;
    return this;
  }

  /**
   * Get stackOverflowUrl
   * @return stackOverflowUrl
   */
  @javax.annotation.Nullable
  public String getStackOverflowUrl() {
    return stackOverflowUrl;
  }

  public void setStackOverflowUrl(String stackOverflowUrl) {
    this.stackOverflowUrl = stackOverflowUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactUpdateDto contactUpdateDto = (ContactUpdateDto) o;
    return Objects.equals(this.type, contactUpdateDto.type) &&
        Objects.equals(this.birthday, contactUpdateDto.birthday) &&
        Objects.equals(this.duns, contactUpdateDto.duns) &&
        Objects.equals(this.taxId, contactUpdateDto.taxId) &&
        Objects.equals(this.email, contactUpdateDto.email) &&
        Objects.equals(this.firstName, contactUpdateDto.firstName) &&
        Objects.equals(this.lastName, contactUpdateDto.lastName) &&
        Objects.equals(this.primaryContactId, contactUpdateDto.primaryContactId) &&
        Objects.equals(this.qualifiedName, contactUpdateDto.qualifiedName) &&
        Objects.equals(this.about, contactUpdateDto.about) &&
        Objects.equals(this.mobilePhone, contactUpdateDto.mobilePhone) &&
        Objects.equals(this.businessPhone, contactUpdateDto.businessPhone) &&
        Objects.equals(this.jobTitle, contactUpdateDto.jobTitle) &&
        Objects.equals(this.countryId, contactUpdateDto.countryId) &&
        Objects.equals(this.parentContactId, contactUpdateDto.parentContactId) &&
        Objects.equals(this.stateId, contactUpdateDto.stateId) &&
        Objects.equals(this.cityId, contactUpdateDto.cityId) &&
        Objects.equals(this.postalCode, contactUpdateDto.postalCode) &&
        Objects.equals(this.streetLine1, contactUpdateDto.streetLine1) &&
        Objects.equals(this.streetLine2, contactUpdateDto.streetLine2) &&
        Objects.equals(this.currencyId, contactUpdateDto.currencyId) &&
        Objects.equals(this.languageId, contactUpdateDto.languageId) &&
        Objects.equals(this.timezoneId, contactUpdateDto.timezoneId) &&
        Objects.equals(this.coverUrl, contactUpdateDto.coverUrl) &&
        Objects.equals(this.githubUsername, contactUpdateDto.githubUsername) &&
        Objects.equals(this.instagramUsername, contactUpdateDto.instagramUsername) &&
        Objects.equals(this.twitchUrl, contactUpdateDto.twitchUrl) &&
        Objects.equals(this.redditUrl, contactUpdateDto.redditUrl) &&
        Objects.equals(this.gitHubUrl, contactUpdateDto.gitHubUrl) &&
        Objects.equals(this.githubUrl, contactUpdateDto.githubUrl) &&
        Objects.equals(this.tikTokUrl, contactUpdateDto.tikTokUrl) &&
        Objects.equals(this.twitterUrl, contactUpdateDto.twitterUrl) &&
        Objects.equals(this.youTubeUrl, contactUpdateDto.youTubeUrl) &&
        Objects.equals(this.websiteUrl, contactUpdateDto.websiteUrl) &&
        Objects.equals(this.facebookUrl, contactUpdateDto.facebookUrl) &&
        Objects.equals(this.linkedInUrl, contactUpdateDto.linkedInUrl) &&
        Objects.equals(this.instagramUrl, contactUpdateDto.instagramUrl) &&
        Objects.equals(this.tikTokUsername, contactUpdateDto.tikTokUsername) &&
        Objects.equals(this.stackExchangeUrl, contactUpdateDto.stackExchangeUrl) &&
        Objects.equals(this.stackOverflowUrl, contactUpdateDto.stackOverflowUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, birthday, duns, taxId, email, firstName, lastName, primaryContactId, qualifiedName, about, mobilePhone, businessPhone, jobTitle, countryId, parentContactId, stateId, cityId, postalCode, streetLine1, streetLine2, currencyId, languageId, timezoneId, coverUrl, githubUsername, instagramUsername, twitchUrl, redditUrl, gitHubUrl, githubUrl, tikTokUrl, twitterUrl, youTubeUrl, websiteUrl, facebookUrl, linkedInUrl, instagramUrl, tikTokUsername, stackExchangeUrl, stackOverflowUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactUpdateDto {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    duns: ").append(toIndentedString(duns)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    primaryContactId: ").append(toIndentedString(primaryContactId)).append("\n");
    sb.append("    qualifiedName: ").append(toIndentedString(qualifiedName)).append("\n");
    sb.append("    about: ").append(toIndentedString(about)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    businessPhone: ").append(toIndentedString(businessPhone)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    parentContactId: ").append(toIndentedString(parentContactId)).append("\n");
    sb.append("    stateId: ").append(toIndentedString(stateId)).append("\n");
    sb.append("    cityId: ").append(toIndentedString(cityId)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    streetLine1: ").append(toIndentedString(streetLine1)).append("\n");
    sb.append("    streetLine2: ").append(toIndentedString(streetLine2)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    languageId: ").append(toIndentedString(languageId)).append("\n");
    sb.append("    timezoneId: ").append(toIndentedString(timezoneId)).append("\n");
    sb.append("    coverUrl: ").append(toIndentedString(coverUrl)).append("\n");
    sb.append("    githubUsername: ").append(toIndentedString(githubUsername)).append("\n");
    sb.append("    instagramUsername: ").append(toIndentedString(instagramUsername)).append("\n");
    sb.append("    twitchUrl: ").append(toIndentedString(twitchUrl)).append("\n");
    sb.append("    redditUrl: ").append(toIndentedString(redditUrl)).append("\n");
    sb.append("    gitHubUrl: ").append(toIndentedString(gitHubUrl)).append("\n");
    sb.append("    githubUrl: ").append(toIndentedString(githubUrl)).append("\n");
    sb.append("    tikTokUrl: ").append(toIndentedString(tikTokUrl)).append("\n");
    sb.append("    twitterUrl: ").append(toIndentedString(twitterUrl)).append("\n");
    sb.append("    youTubeUrl: ").append(toIndentedString(youTubeUrl)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    facebookUrl: ").append(toIndentedString(facebookUrl)).append("\n");
    sb.append("    linkedInUrl: ").append(toIndentedString(linkedInUrl)).append("\n");
    sb.append("    instagramUrl: ").append(toIndentedString(instagramUrl)).append("\n");
    sb.append("    tikTokUsername: ").append(toIndentedString(tikTokUsername)).append("\n");
    sb.append("    stackExchangeUrl: ").append(toIndentedString(stackExchangeUrl)).append("\n");
    sb.append("    stackOverflowUrl: ").append(toIndentedString(stackOverflowUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("birthday");
    openapiFields.add("duns");
    openapiFields.add("taxId");
    openapiFields.add("email");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("primaryContactId");
    openapiFields.add("qualifiedName");
    openapiFields.add("about");
    openapiFields.add("mobilePhone");
    openapiFields.add("businessPhone");
    openapiFields.add("jobTitle");
    openapiFields.add("countryId");
    openapiFields.add("parentContactId");
    openapiFields.add("stateId");
    openapiFields.add("cityId");
    openapiFields.add("postalCode");
    openapiFields.add("streetLine1");
    openapiFields.add("streetLine2");
    openapiFields.add("currencyId");
    openapiFields.add("languageId");
    openapiFields.add("timezoneId");
    openapiFields.add("coverUrl");
    openapiFields.add("githubUsername");
    openapiFields.add("instagramUsername");
    openapiFields.add("twitchUrl");
    openapiFields.add("redditUrl");
    openapiFields.add("gitHubUrl");
    openapiFields.add("githubUrl");
    openapiFields.add("tikTokUrl");
    openapiFields.add("twitterUrl");
    openapiFields.add("youTubeUrl");
    openapiFields.add("websiteUrl");
    openapiFields.add("facebookUrl");
    openapiFields.add("linkedInUrl");
    openapiFields.add("instagramUrl");
    openapiFields.add("tikTokUsername");
    openapiFields.add("stackExchangeUrl");
    openapiFields.add("stackOverflowUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("firstName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContactUpdateDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContactUpdateDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContactUpdateDto is not found in the empty JSON string", ContactUpdateDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContactUpdateDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContactUpdateDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ContactUpdateDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `type`
      TypeEnum.validateJsonElement(jsonObj.get("type"));
      if ((jsonObj.get("duns") != null && !jsonObj.get("duns").isJsonNull()) && !jsonObj.get("duns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `duns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("duns").toString()));
      }
      if ((jsonObj.get("taxId") != null && !jsonObj.get("taxId").isJsonNull()) && !jsonObj.get("taxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxId").toString()));
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("primaryContactId") != null && !jsonObj.get("primaryContactId").isJsonNull()) && !jsonObj.get("primaryContactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryContactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryContactId").toString()));
      }
      if ((jsonObj.get("qualifiedName") != null && !jsonObj.get("qualifiedName").isJsonNull()) && !jsonObj.get("qualifiedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qualifiedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qualifiedName").toString()));
      }
      if ((jsonObj.get("about") != null && !jsonObj.get("about").isJsonNull()) && !jsonObj.get("about").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `about` to be a primitive type in the JSON string but got `%s`", jsonObj.get("about").toString()));
      }
      if ((jsonObj.get("mobilePhone") != null && !jsonObj.get("mobilePhone").isJsonNull()) && !jsonObj.get("mobilePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobilePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobilePhone").toString()));
      }
      if ((jsonObj.get("businessPhone") != null && !jsonObj.get("businessPhone").isJsonNull()) && !jsonObj.get("businessPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessPhone").toString()));
      }
      if ((jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonNull()) && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
      if ((jsonObj.get("countryId") != null && !jsonObj.get("countryId").isJsonNull()) && !jsonObj.get("countryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryId").toString()));
      }
      if ((jsonObj.get("parentContactId") != null && !jsonObj.get("parentContactId").isJsonNull()) && !jsonObj.get("parentContactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentContactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentContactId").toString()));
      }
      if ((jsonObj.get("stateId") != null && !jsonObj.get("stateId").isJsonNull()) && !jsonObj.get("stateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateId").toString()));
      }
      if ((jsonObj.get("cityId") != null && !jsonObj.get("cityId").isJsonNull()) && !jsonObj.get("cityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cityId").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("streetLine1") != null && !jsonObj.get("streetLine1").isJsonNull()) && !jsonObj.get("streetLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetLine1").toString()));
      }
      if ((jsonObj.get("streetLine2") != null && !jsonObj.get("streetLine2").isJsonNull()) && !jsonObj.get("streetLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetLine2").toString()));
      }
      if ((jsonObj.get("currencyId") != null && !jsonObj.get("currencyId").isJsonNull()) && !jsonObj.get("currencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyId").toString()));
      }
      if ((jsonObj.get("languageId") != null && !jsonObj.get("languageId").isJsonNull()) && !jsonObj.get("languageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageId").toString()));
      }
      if ((jsonObj.get("timezoneId") != null && !jsonObj.get("timezoneId").isJsonNull()) && !jsonObj.get("timezoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezoneId").toString()));
      }
      if ((jsonObj.get("coverUrl") != null && !jsonObj.get("coverUrl").isJsonNull()) && !jsonObj.get("coverUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverUrl").toString()));
      }
      if ((jsonObj.get("githubUsername") != null && !jsonObj.get("githubUsername").isJsonNull()) && !jsonObj.get("githubUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `githubUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("githubUsername").toString()));
      }
      if ((jsonObj.get("instagramUsername") != null && !jsonObj.get("instagramUsername").isJsonNull()) && !jsonObj.get("instagramUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instagramUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instagramUsername").toString()));
      }
      if ((jsonObj.get("twitchUrl") != null && !jsonObj.get("twitchUrl").isJsonNull()) && !jsonObj.get("twitchUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitchUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitchUrl").toString()));
      }
      if ((jsonObj.get("redditUrl") != null && !jsonObj.get("redditUrl").isJsonNull()) && !jsonObj.get("redditUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redditUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redditUrl").toString()));
      }
      if ((jsonObj.get("gitHubUrl") != null && !jsonObj.get("gitHubUrl").isJsonNull()) && !jsonObj.get("gitHubUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gitHubUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gitHubUrl").toString()));
      }
      if ((jsonObj.get("githubUrl") != null && !jsonObj.get("githubUrl").isJsonNull()) && !jsonObj.get("githubUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `githubUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("githubUrl").toString()));
      }
      if ((jsonObj.get("tikTokUrl") != null && !jsonObj.get("tikTokUrl").isJsonNull()) && !jsonObj.get("tikTokUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tikTokUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tikTokUrl").toString()));
      }
      if ((jsonObj.get("twitterUrl") != null && !jsonObj.get("twitterUrl").isJsonNull()) && !jsonObj.get("twitterUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitterUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitterUrl").toString()));
      }
      if ((jsonObj.get("youTubeUrl") != null && !jsonObj.get("youTubeUrl").isJsonNull()) && !jsonObj.get("youTubeUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `youTubeUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("youTubeUrl").toString()));
      }
      if ((jsonObj.get("websiteUrl") != null && !jsonObj.get("websiteUrl").isJsonNull()) && !jsonObj.get("websiteUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `websiteUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("websiteUrl").toString()));
      }
      if ((jsonObj.get("facebookUrl") != null && !jsonObj.get("facebookUrl").isJsonNull()) && !jsonObj.get("facebookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebookUrl").toString()));
      }
      if ((jsonObj.get("linkedInUrl") != null && !jsonObj.get("linkedInUrl").isJsonNull()) && !jsonObj.get("linkedInUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedInUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedInUrl").toString()));
      }
      if ((jsonObj.get("instagramUrl") != null && !jsonObj.get("instagramUrl").isJsonNull()) && !jsonObj.get("instagramUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instagramUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instagramUrl").toString()));
      }
      if ((jsonObj.get("tikTokUsername") != null && !jsonObj.get("tikTokUsername").isJsonNull()) && !jsonObj.get("tikTokUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tikTokUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tikTokUsername").toString()));
      }
      if ((jsonObj.get("stackExchangeUrl") != null && !jsonObj.get("stackExchangeUrl").isJsonNull()) && !jsonObj.get("stackExchangeUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stackExchangeUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stackExchangeUrl").toString()));
      }
      if ((jsonObj.get("stackOverflowUrl") != null && !jsonObj.get("stackOverflowUrl").isJsonNull()) && !jsonObj.get("stackOverflowUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stackOverflowUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stackOverflowUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContactUpdateDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContactUpdateDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContactUpdateDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContactUpdateDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ContactUpdateDto>() {
           @Override
           public void write(JsonWriter out, ContactUpdateDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContactUpdateDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContactUpdateDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContactUpdateDto
   * @throws IOException if the JSON string is invalid with respect to ContactUpdateDto
   */
  public static ContactUpdateDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContactUpdateDto.class);
  }

  /**
   * Convert an instance of ContactUpdateDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

