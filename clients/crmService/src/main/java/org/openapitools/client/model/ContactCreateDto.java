/*
 * CrmService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContactCreateDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T15:35:39.798602200-05:00[America/Bogota]", comments = "Generator version: 7.9.0")
public class ContactCreateDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private OffsetDateTime timestamp;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_TAX_ID = "taxId";
  @SerializedName(SERIALIZED_NAME_TAX_ID)
  private String taxId;

  public static final String SERIALIZED_NAME_PRIMARY_CONTACT_ID = "primaryContactId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CONTACT_ID)
  private String primaryContactId;

  public static final String SERIALIZED_NAME_QUALIFIED_NAME = "qualifiedName";
  @SerializedName(SERIALIZED_NAME_QUALIFIED_NAME)
  private String qualifiedName;

  public static final String SERIALIZED_NAME_ABOUT = "about";
  @SerializedName(SERIALIZED_NAME_ABOUT)
  private String about;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private String countryId;

  public static final String SERIALIZED_NAME_STATE_ID = "stateId";
  @SerializedName(SERIALIZED_NAME_STATE_ID)
  private String stateId;

  public static final String SERIALIZED_NAME_CITY_ID = "cityId";
  @SerializedName(SERIALIZED_NAME_CITY_ID)
  private String cityId;

  public static final String SERIALIZED_NAME_MOBILE_PHONE = "mobilePhone";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE)
  private String mobilePhone;

  public static final String SERIALIZED_NAME_BUSINESS_PHONE = "businessPhone";
  @SerializedName(SERIALIZED_NAME_BUSINESS_PHONE)
  private String businessPhone;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_DUNS = "duns";
  @SerializedName(SERIALIZED_NAME_DUNS)
  private String duns;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_WEB_URL = "webUrl";
  @SerializedName(SERIALIZED_NAME_WEB_URL)
  private String webUrl;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "currencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private String currencyId;

  public static final String SERIALIZED_NAME_LANGUAGE_ID = "languageId";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_ID)
  private String languageId;

  public static final String SERIALIZED_NAME_TIMEZONE_ID = "timezoneId";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_ID)
  private String timezoneId;

  public static final String SERIALIZED_NAME_BIRTHDAY = "birthday";
  @SerializedName(SERIALIZED_NAME_BIRTHDAY)
  private OffsetDateTime birthday;

  public static final String SERIALIZED_NAME_STREET_LINE1 = "streetLine1";
  @SerializedName(SERIALIZED_NAME_STREET_LINE1)
  private String streetLine1;

  public static final String SERIALIZED_NAME_STREET_LINE2 = "streetLine2";
  @SerializedName(SERIALIZED_NAME_STREET_LINE2)
  private String streetLine2;

  public static final String SERIALIZED_NAME_GIT_HUB_URL = "gitHubUrl";
  @SerializedName(SERIALIZED_NAME_GIT_HUB_URL)
  private String gitHubUrl;

  public static final String SERIALIZED_NAME_TWITCH_URL = "twitchUrl";
  @SerializedName(SERIALIZED_NAME_TWITCH_URL)
  private String twitchUrl;

  public static final String SERIALIZED_NAME_REDDIT_URL = "redditUrl";
  @SerializedName(SERIALIZED_NAME_REDDIT_URL)
  private String redditUrl;

  public static final String SERIALIZED_NAME_TIK_TOK_URL = "tikTokUrl";
  @SerializedName(SERIALIZED_NAME_TIK_TOK_URL)
  private String tikTokUrl;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "websiteUrl";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;

  public static final String SERIALIZED_NAME_TWITTER_URL = "twitterUrl";
  @SerializedName(SERIALIZED_NAME_TWITTER_URL)
  private String twitterUrl;

  public static final String SERIALIZED_NAME_FACEBOOK_URL = "facebookUrl";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_URL)
  private String facebookUrl;

  public static final String SERIALIZED_NAME_YOU_TUBE_URL = "youTubeUrl";
  @SerializedName(SERIALIZED_NAME_YOU_TUBE_URL)
  private String youTubeUrl;

  public static final String SERIALIZED_NAME_LINKED_IN_URL = "linkedInUrl";
  @SerializedName(SERIALIZED_NAME_LINKED_IN_URL)
  private String linkedInUrl;

  public static final String SERIALIZED_NAME_INSTAGRAM_URL = "instagramUrl";
  @SerializedName(SERIALIZED_NAME_INSTAGRAM_URL)
  private String instagramUrl;

  public static final String SERIALIZED_NAME_GITHUB_USERNAME = "githubUsername";
  @SerializedName(SERIALIZED_NAME_GITHUB_USERNAME)
  private String githubUsername;

  public static final String SERIALIZED_NAME_INSTAGRAM_USERNAME = "instagramUsername";
  @SerializedName(SERIALIZED_NAME_INSTAGRAM_USERNAME)
  private Object instagramUsername = null;

  public static final String SERIALIZED_NAME_TIK_TOK_USERNAME = "tikTokUsername";
  @SerializedName(SERIALIZED_NAME_TIK_TOK_USERNAME)
  private Object tikTokUsername = null;

  public static final String SERIALIZED_NAME_STACK_EXCHANGE_URL = "stackExchangeUrl";
  @SerializedName(SERIALIZED_NAME_STACK_EXCHANGE_URL)
  private Object stackExchangeUrl = null;

  public static final String SERIALIZED_NAME_STACK_OVERFLOW_URL = "stackOverflowUrl";
  @SerializedName(SERIALIZED_NAME_STACK_OVERFLOW_URL)
  private Object stackOverflowUrl = null;

  public static final String SERIALIZED_NAME_PARENT_CONTACT_ID = "parentContactId";
  @SerializedName(SERIALIZED_NAME_PARENT_CONTACT_ID)
  private Object parentContactId = null;

  public ContactCreateDto() {
  }

  public ContactCreateDto(
     UUID id, 
     OffsetDateTime timestamp, 
     String qualifiedName
  ) {
    this();
    this.id = id;
    this.timestamp = timestamp;
    this.qualifiedName = qualifiedName;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }



  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }



  public ContactCreateDto tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nonnull
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public ContactCreateDto type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ContactCreateDto firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nonnull
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public ContactCreateDto lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public ContactCreateDto email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public ContactCreateDto taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

  /**
   * Get taxId
   * @return taxId
   */
  @javax.annotation.Nullable
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }


  public ContactCreateDto primaryContactId(String primaryContactId) {
    this.primaryContactId = primaryContactId;
    return this;
  }

  /**
   * Get primaryContactId
   * @return primaryContactId
   */
  @javax.annotation.Nullable
  public String getPrimaryContactId() {
    return primaryContactId;
  }

  public void setPrimaryContactId(String primaryContactId) {
    this.primaryContactId = primaryContactId;
  }


  /**
   * Get qualifiedName
   * @return qualifiedName
   */
  @javax.annotation.Nullable
  public String getQualifiedName() {
    return qualifiedName;
  }



  public ContactCreateDto about(String about) {
    this.about = about;
    return this;
  }

  /**
   * Get about
   * @return about
   */
  @javax.annotation.Nullable
  public String getAbout() {
    return about;
  }

  public void setAbout(String about) {
    this.about = about;
  }


  public ContactCreateDto countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

  /**
   * Get countryId
   * @return countryId
   */
  @javax.annotation.Nullable
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }


  public ContactCreateDto stateId(String stateId) {
    this.stateId = stateId;
    return this;
  }

  /**
   * Get stateId
   * @return stateId
   */
  @javax.annotation.Nullable
  public String getStateId() {
    return stateId;
  }

  public void setStateId(String stateId) {
    this.stateId = stateId;
  }


  public ContactCreateDto cityId(String cityId) {
    this.cityId = cityId;
    return this;
  }

  /**
   * Get cityId
   * @return cityId
   */
  @javax.annotation.Nullable
  public String getCityId() {
    return cityId;
  }

  public void setCityId(String cityId) {
    this.cityId = cityId;
  }


  public ContactCreateDto mobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
    return this;
  }

  /**
   * Get mobilePhone
   * @return mobilePhone
   */
  @javax.annotation.Nullable
  public String getMobilePhone() {
    return mobilePhone;
  }

  public void setMobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
  }


  public ContactCreateDto businessPhone(String businessPhone) {
    this.businessPhone = businessPhone;
    return this;
  }

  /**
   * Get businessPhone
   * @return businessPhone
   */
  @javax.annotation.Nullable
  public String getBusinessPhone() {
    return businessPhone;
  }

  public void setBusinessPhone(String businessPhone) {
    this.businessPhone = businessPhone;
  }


  public ContactCreateDto postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public ContactCreateDto duns(String duns) {
    this.duns = duns;
    return this;
  }

  /**
   * Get duns
   * @return duns
   */
  @javax.annotation.Nullable
  public String getDuns() {
    return duns;
  }

  public void setDuns(String duns) {
    this.duns = duns;
  }


  public ContactCreateDto jobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
    return this;
  }

  /**
   * Get jobTitle
   * @return jobTitle
   */
  @javax.annotation.Nullable
  public String getJobTitle() {
    return jobTitle;
  }

  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }


  public ContactCreateDto webUrl(String webUrl) {
    this.webUrl = webUrl;
    return this;
  }

  /**
   * Get webUrl
   * @return webUrl
   */
  @javax.annotation.Nullable
  public String getWebUrl() {
    return webUrl;
  }

  public void setWebUrl(String webUrl) {
    this.webUrl = webUrl;
  }


  public ContactCreateDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public ContactCreateDto languageId(String languageId) {
    this.languageId = languageId;
    return this;
  }

  /**
   * Get languageId
   * @return languageId
   */
  @javax.annotation.Nullable
  public String getLanguageId() {
    return languageId;
  }

  public void setLanguageId(String languageId) {
    this.languageId = languageId;
  }


  public ContactCreateDto timezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
    return this;
  }

  /**
   * Get timezoneId
   * @return timezoneId
   */
  @javax.annotation.Nullable
  public String getTimezoneId() {
    return timezoneId;
  }

  public void setTimezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
  }


  public ContactCreateDto birthday(OffsetDateTime birthday) {
    this.birthday = birthday;
    return this;
  }

  /**
   * Get birthday
   * @return birthday
   */
  @javax.annotation.Nullable
  public OffsetDateTime getBirthday() {
    return birthday;
  }

  public void setBirthday(OffsetDateTime birthday) {
    this.birthday = birthday;
  }


  public ContactCreateDto streetLine1(String streetLine1) {
    this.streetLine1 = streetLine1;
    return this;
  }

  /**
   * Get streetLine1
   * @return streetLine1
   */
  @javax.annotation.Nullable
  public String getStreetLine1() {
    return streetLine1;
  }

  public void setStreetLine1(String streetLine1) {
    this.streetLine1 = streetLine1;
  }


  public ContactCreateDto streetLine2(String streetLine2) {
    this.streetLine2 = streetLine2;
    return this;
  }

  /**
   * Get streetLine2
   * @return streetLine2
   */
  @javax.annotation.Nullable
  public String getStreetLine2() {
    return streetLine2;
  }

  public void setStreetLine2(String streetLine2) {
    this.streetLine2 = streetLine2;
  }


  public ContactCreateDto gitHubUrl(String gitHubUrl) {
    this.gitHubUrl = gitHubUrl;
    return this;
  }

  /**
   * Get gitHubUrl
   * @return gitHubUrl
   */
  @javax.annotation.Nullable
  public String getGitHubUrl() {
    return gitHubUrl;
  }

  public void setGitHubUrl(String gitHubUrl) {
    this.gitHubUrl = gitHubUrl;
  }


  public ContactCreateDto twitchUrl(String twitchUrl) {
    this.twitchUrl = twitchUrl;
    return this;
  }

  /**
   * Get twitchUrl
   * @return twitchUrl
   */
  @javax.annotation.Nullable
  public String getTwitchUrl() {
    return twitchUrl;
  }

  public void setTwitchUrl(String twitchUrl) {
    this.twitchUrl = twitchUrl;
  }


  public ContactCreateDto redditUrl(String redditUrl) {
    this.redditUrl = redditUrl;
    return this;
  }

  /**
   * Get redditUrl
   * @return redditUrl
   */
  @javax.annotation.Nullable
  public String getRedditUrl() {
    return redditUrl;
  }

  public void setRedditUrl(String redditUrl) {
    this.redditUrl = redditUrl;
  }


  public ContactCreateDto tikTokUrl(String tikTokUrl) {
    this.tikTokUrl = tikTokUrl;
    return this;
  }

  /**
   * Get tikTokUrl
   * @return tikTokUrl
   */
  @javax.annotation.Nullable
  public String getTikTokUrl() {
    return tikTokUrl;
  }

  public void setTikTokUrl(String tikTokUrl) {
    this.tikTokUrl = tikTokUrl;
  }


  public ContactCreateDto websiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * Get websiteUrl
   * @return websiteUrl
   */
  @javax.annotation.Nullable
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }


  public ContactCreateDto twitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
    return this;
  }

  /**
   * Get twitterUrl
   * @return twitterUrl
   */
  @javax.annotation.Nullable
  public String getTwitterUrl() {
    return twitterUrl;
  }

  public void setTwitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
  }


  public ContactCreateDto facebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
    return this;
  }

  /**
   * Get facebookUrl
   * @return facebookUrl
   */
  @javax.annotation.Nullable
  public String getFacebookUrl() {
    return facebookUrl;
  }

  public void setFacebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
  }


  public ContactCreateDto youTubeUrl(String youTubeUrl) {
    this.youTubeUrl = youTubeUrl;
    return this;
  }

  /**
   * Get youTubeUrl
   * @return youTubeUrl
   */
  @javax.annotation.Nullable
  public String getYouTubeUrl() {
    return youTubeUrl;
  }

  public void setYouTubeUrl(String youTubeUrl) {
    this.youTubeUrl = youTubeUrl;
  }


  public ContactCreateDto linkedInUrl(String linkedInUrl) {
    this.linkedInUrl = linkedInUrl;
    return this;
  }

  /**
   * Get linkedInUrl
   * @return linkedInUrl
   */
  @javax.annotation.Nullable
  public String getLinkedInUrl() {
    return linkedInUrl;
  }

  public void setLinkedInUrl(String linkedInUrl) {
    this.linkedInUrl = linkedInUrl;
  }


  public ContactCreateDto instagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
    return this;
  }

  /**
   * Get instagramUrl
   * @return instagramUrl
   */
  @javax.annotation.Nullable
  public String getInstagramUrl() {
    return instagramUrl;
  }

  public void setInstagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
  }


  public ContactCreateDto githubUsername(String githubUsername) {
    this.githubUsername = githubUsername;
    return this;
  }

  /**
   * Get githubUsername
   * @return githubUsername
   */
  @javax.annotation.Nullable
  public String getGithubUsername() {
    return githubUsername;
  }

  public void setGithubUsername(String githubUsername) {
    this.githubUsername = githubUsername;
  }


  public ContactCreateDto instagramUsername(Object instagramUsername) {
    this.instagramUsername = instagramUsername;
    return this;
  }

  /**
   * Get instagramUsername
   * @return instagramUsername
   */
  @javax.annotation.Nullable
  public Object getInstagramUsername() {
    return instagramUsername;
  }

  public void setInstagramUsername(Object instagramUsername) {
    this.instagramUsername = instagramUsername;
  }


  public ContactCreateDto tikTokUsername(Object tikTokUsername) {
    this.tikTokUsername = tikTokUsername;
    return this;
  }

  /**
   * Get tikTokUsername
   * @return tikTokUsername
   */
  @javax.annotation.Nullable
  public Object getTikTokUsername() {
    return tikTokUsername;
  }

  public void setTikTokUsername(Object tikTokUsername) {
    this.tikTokUsername = tikTokUsername;
  }


  public ContactCreateDto stackExchangeUrl(Object stackExchangeUrl) {
    this.stackExchangeUrl = stackExchangeUrl;
    return this;
  }

  /**
   * Get stackExchangeUrl
   * @return stackExchangeUrl
   */
  @javax.annotation.Nullable
  public Object getStackExchangeUrl() {
    return stackExchangeUrl;
  }

  public void setStackExchangeUrl(Object stackExchangeUrl) {
    this.stackExchangeUrl = stackExchangeUrl;
  }


  public ContactCreateDto stackOverflowUrl(Object stackOverflowUrl) {
    this.stackOverflowUrl = stackOverflowUrl;
    return this;
  }

  /**
   * Get stackOverflowUrl
   * @return stackOverflowUrl
   */
  @javax.annotation.Nullable
  public Object getStackOverflowUrl() {
    return stackOverflowUrl;
  }

  public void setStackOverflowUrl(Object stackOverflowUrl) {
    this.stackOverflowUrl = stackOverflowUrl;
  }


  public ContactCreateDto parentContactId(Object parentContactId) {
    this.parentContactId = parentContactId;
    return this;
  }

  /**
   * Get parentContactId
   * @return parentContactId
   */
  @javax.annotation.Nullable
  public Object getParentContactId() {
    return parentContactId;
  }

  public void setParentContactId(Object parentContactId) {
    this.parentContactId = parentContactId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactCreateDto contactCreateDto = (ContactCreateDto) o;
    return Objects.equals(this.id, contactCreateDto.id) &&
        Objects.equals(this.timestamp, contactCreateDto.timestamp) &&
        Objects.equals(this.tenantId, contactCreateDto.tenantId) &&
        Objects.equals(this.type, contactCreateDto.type) &&
        Objects.equals(this.firstName, contactCreateDto.firstName) &&
        Objects.equals(this.lastName, contactCreateDto.lastName) &&
        Objects.equals(this.email, contactCreateDto.email) &&
        Objects.equals(this.taxId, contactCreateDto.taxId) &&
        Objects.equals(this.primaryContactId, contactCreateDto.primaryContactId) &&
        Objects.equals(this.qualifiedName, contactCreateDto.qualifiedName) &&
        Objects.equals(this.about, contactCreateDto.about) &&
        Objects.equals(this.countryId, contactCreateDto.countryId) &&
        Objects.equals(this.stateId, contactCreateDto.stateId) &&
        Objects.equals(this.cityId, contactCreateDto.cityId) &&
        Objects.equals(this.mobilePhone, contactCreateDto.mobilePhone) &&
        Objects.equals(this.businessPhone, contactCreateDto.businessPhone) &&
        Objects.equals(this.postalCode, contactCreateDto.postalCode) &&
        Objects.equals(this.duns, contactCreateDto.duns) &&
        Objects.equals(this.jobTitle, contactCreateDto.jobTitle) &&
        Objects.equals(this.webUrl, contactCreateDto.webUrl) &&
        Objects.equals(this.currencyId, contactCreateDto.currencyId) &&
        Objects.equals(this.languageId, contactCreateDto.languageId) &&
        Objects.equals(this.timezoneId, contactCreateDto.timezoneId) &&
        Objects.equals(this.birthday, contactCreateDto.birthday) &&
        Objects.equals(this.streetLine1, contactCreateDto.streetLine1) &&
        Objects.equals(this.streetLine2, contactCreateDto.streetLine2) &&
        Objects.equals(this.gitHubUrl, contactCreateDto.gitHubUrl) &&
        Objects.equals(this.twitchUrl, contactCreateDto.twitchUrl) &&
        Objects.equals(this.redditUrl, contactCreateDto.redditUrl) &&
        Objects.equals(this.tikTokUrl, contactCreateDto.tikTokUrl) &&
        Objects.equals(this.websiteUrl, contactCreateDto.websiteUrl) &&
        Objects.equals(this.twitterUrl, contactCreateDto.twitterUrl) &&
        Objects.equals(this.facebookUrl, contactCreateDto.facebookUrl) &&
        Objects.equals(this.youTubeUrl, contactCreateDto.youTubeUrl) &&
        Objects.equals(this.linkedInUrl, contactCreateDto.linkedInUrl) &&
        Objects.equals(this.instagramUrl, contactCreateDto.instagramUrl) &&
        Objects.equals(this.githubUsername, contactCreateDto.githubUsername) &&
        Objects.equals(this.instagramUsername, contactCreateDto.instagramUsername) &&
        Objects.equals(this.tikTokUsername, contactCreateDto.tikTokUsername) &&
        Objects.equals(this.stackExchangeUrl, contactCreateDto.stackExchangeUrl) &&
        Objects.equals(this.stackOverflowUrl, contactCreateDto.stackOverflowUrl) &&
        Objects.equals(this.parentContactId, contactCreateDto.parentContactId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, timestamp, tenantId, type, firstName, lastName, email, taxId, primaryContactId, qualifiedName, about, countryId, stateId, cityId, mobilePhone, businessPhone, postalCode, duns, jobTitle, webUrl, currencyId, languageId, timezoneId, birthday, streetLine1, streetLine2, gitHubUrl, twitchUrl, redditUrl, tikTokUrl, websiteUrl, twitterUrl, facebookUrl, youTubeUrl, linkedInUrl, instagramUrl, githubUsername, instagramUsername, tikTokUsername, stackExchangeUrl, stackOverflowUrl, parentContactId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactCreateDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    primaryContactId: ").append(toIndentedString(primaryContactId)).append("\n");
    sb.append("    qualifiedName: ").append(toIndentedString(qualifiedName)).append("\n");
    sb.append("    about: ").append(toIndentedString(about)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    stateId: ").append(toIndentedString(stateId)).append("\n");
    sb.append("    cityId: ").append(toIndentedString(cityId)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    businessPhone: ").append(toIndentedString(businessPhone)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    duns: ").append(toIndentedString(duns)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    languageId: ").append(toIndentedString(languageId)).append("\n");
    sb.append("    timezoneId: ").append(toIndentedString(timezoneId)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    streetLine1: ").append(toIndentedString(streetLine1)).append("\n");
    sb.append("    streetLine2: ").append(toIndentedString(streetLine2)).append("\n");
    sb.append("    gitHubUrl: ").append(toIndentedString(gitHubUrl)).append("\n");
    sb.append("    twitchUrl: ").append(toIndentedString(twitchUrl)).append("\n");
    sb.append("    redditUrl: ").append(toIndentedString(redditUrl)).append("\n");
    sb.append("    tikTokUrl: ").append(toIndentedString(tikTokUrl)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    twitterUrl: ").append(toIndentedString(twitterUrl)).append("\n");
    sb.append("    facebookUrl: ").append(toIndentedString(facebookUrl)).append("\n");
    sb.append("    youTubeUrl: ").append(toIndentedString(youTubeUrl)).append("\n");
    sb.append("    linkedInUrl: ").append(toIndentedString(linkedInUrl)).append("\n");
    sb.append("    instagramUrl: ").append(toIndentedString(instagramUrl)).append("\n");
    sb.append("    githubUsername: ").append(toIndentedString(githubUsername)).append("\n");
    sb.append("    instagramUsername: ").append(toIndentedString(instagramUsername)).append("\n");
    sb.append("    tikTokUsername: ").append(toIndentedString(tikTokUsername)).append("\n");
    sb.append("    stackExchangeUrl: ").append(toIndentedString(stackExchangeUrl)).append("\n");
    sb.append("    stackOverflowUrl: ").append(toIndentedString(stackOverflowUrl)).append("\n");
    sb.append("    parentContactId: ").append(toIndentedString(parentContactId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("timestamp");
    openapiFields.add("tenantId");
    openapiFields.add("type");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("email");
    openapiFields.add("taxId");
    openapiFields.add("primaryContactId");
    openapiFields.add("qualifiedName");
    openapiFields.add("about");
    openapiFields.add("countryId");
    openapiFields.add("stateId");
    openapiFields.add("cityId");
    openapiFields.add("mobilePhone");
    openapiFields.add("businessPhone");
    openapiFields.add("postalCode");
    openapiFields.add("duns");
    openapiFields.add("jobTitle");
    openapiFields.add("webUrl");
    openapiFields.add("currencyId");
    openapiFields.add("languageId");
    openapiFields.add("timezoneId");
    openapiFields.add("birthday");
    openapiFields.add("streetLine1");
    openapiFields.add("streetLine2");
    openapiFields.add("gitHubUrl");
    openapiFields.add("twitchUrl");
    openapiFields.add("redditUrl");
    openapiFields.add("tikTokUrl");
    openapiFields.add("websiteUrl");
    openapiFields.add("twitterUrl");
    openapiFields.add("facebookUrl");
    openapiFields.add("youTubeUrl");
    openapiFields.add("linkedInUrl");
    openapiFields.add("instagramUrl");
    openapiFields.add("githubUsername");
    openapiFields.add("instagramUsername");
    openapiFields.add("tikTokUsername");
    openapiFields.add("stackExchangeUrl");
    openapiFields.add("stackOverflowUrl");
    openapiFields.add("parentContactId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("tenantId");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("firstName");
    openapiRequiredFields.add("email");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContactCreateDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContactCreateDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContactCreateDto is not found in the empty JSON string", ContactCreateDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContactCreateDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContactCreateDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ContactCreateDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      // validate the required field `type`
      TypeEnum.validateJsonElement(jsonObj.get("type"));
      if (!jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("taxId") != null && !jsonObj.get("taxId").isJsonNull()) && !jsonObj.get("taxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxId").toString()));
      }
      if ((jsonObj.get("primaryContactId") != null && !jsonObj.get("primaryContactId").isJsonNull()) && !jsonObj.get("primaryContactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryContactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryContactId").toString()));
      }
      if ((jsonObj.get("qualifiedName") != null && !jsonObj.get("qualifiedName").isJsonNull()) && !jsonObj.get("qualifiedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qualifiedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qualifiedName").toString()));
      }
      if ((jsonObj.get("about") != null && !jsonObj.get("about").isJsonNull()) && !jsonObj.get("about").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `about` to be a primitive type in the JSON string but got `%s`", jsonObj.get("about").toString()));
      }
      if ((jsonObj.get("countryId") != null && !jsonObj.get("countryId").isJsonNull()) && !jsonObj.get("countryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryId").toString()));
      }
      if ((jsonObj.get("stateId") != null && !jsonObj.get("stateId").isJsonNull()) && !jsonObj.get("stateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateId").toString()));
      }
      if ((jsonObj.get("cityId") != null && !jsonObj.get("cityId").isJsonNull()) && !jsonObj.get("cityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cityId").toString()));
      }
      if ((jsonObj.get("mobilePhone") != null && !jsonObj.get("mobilePhone").isJsonNull()) && !jsonObj.get("mobilePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobilePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobilePhone").toString()));
      }
      if ((jsonObj.get("businessPhone") != null && !jsonObj.get("businessPhone").isJsonNull()) && !jsonObj.get("businessPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessPhone").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("duns") != null && !jsonObj.get("duns").isJsonNull()) && !jsonObj.get("duns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `duns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("duns").toString()));
      }
      if ((jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonNull()) && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
      if ((jsonObj.get("webUrl") != null && !jsonObj.get("webUrl").isJsonNull()) && !jsonObj.get("webUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webUrl").toString()));
      }
      if ((jsonObj.get("currencyId") != null && !jsonObj.get("currencyId").isJsonNull()) && !jsonObj.get("currencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyId").toString()));
      }
      if ((jsonObj.get("languageId") != null && !jsonObj.get("languageId").isJsonNull()) && !jsonObj.get("languageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageId").toString()));
      }
      if ((jsonObj.get("timezoneId") != null && !jsonObj.get("timezoneId").isJsonNull()) && !jsonObj.get("timezoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezoneId").toString()));
      }
      if ((jsonObj.get("streetLine1") != null && !jsonObj.get("streetLine1").isJsonNull()) && !jsonObj.get("streetLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetLine1").toString()));
      }
      if ((jsonObj.get("streetLine2") != null && !jsonObj.get("streetLine2").isJsonNull()) && !jsonObj.get("streetLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetLine2").toString()));
      }
      if ((jsonObj.get("gitHubUrl") != null && !jsonObj.get("gitHubUrl").isJsonNull()) && !jsonObj.get("gitHubUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gitHubUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gitHubUrl").toString()));
      }
      if ((jsonObj.get("twitchUrl") != null && !jsonObj.get("twitchUrl").isJsonNull()) && !jsonObj.get("twitchUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitchUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitchUrl").toString()));
      }
      if ((jsonObj.get("redditUrl") != null && !jsonObj.get("redditUrl").isJsonNull()) && !jsonObj.get("redditUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redditUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redditUrl").toString()));
      }
      if ((jsonObj.get("tikTokUrl") != null && !jsonObj.get("tikTokUrl").isJsonNull()) && !jsonObj.get("tikTokUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tikTokUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tikTokUrl").toString()));
      }
      if ((jsonObj.get("websiteUrl") != null && !jsonObj.get("websiteUrl").isJsonNull()) && !jsonObj.get("websiteUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `websiteUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("websiteUrl").toString()));
      }
      if ((jsonObj.get("twitterUrl") != null && !jsonObj.get("twitterUrl").isJsonNull()) && !jsonObj.get("twitterUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitterUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitterUrl").toString()));
      }
      if ((jsonObj.get("facebookUrl") != null && !jsonObj.get("facebookUrl").isJsonNull()) && !jsonObj.get("facebookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebookUrl").toString()));
      }
      if ((jsonObj.get("youTubeUrl") != null && !jsonObj.get("youTubeUrl").isJsonNull()) && !jsonObj.get("youTubeUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `youTubeUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("youTubeUrl").toString()));
      }
      if ((jsonObj.get("linkedInUrl") != null && !jsonObj.get("linkedInUrl").isJsonNull()) && !jsonObj.get("linkedInUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedInUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedInUrl").toString()));
      }
      if ((jsonObj.get("instagramUrl") != null && !jsonObj.get("instagramUrl").isJsonNull()) && !jsonObj.get("instagramUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instagramUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instagramUrl").toString()));
      }
      if ((jsonObj.get("githubUsername") != null && !jsonObj.get("githubUsername").isJsonNull()) && !jsonObj.get("githubUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `githubUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("githubUsername").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContactCreateDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContactCreateDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContactCreateDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContactCreateDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ContactCreateDto>() {
           @Override
           public void write(JsonWriter out, ContactCreateDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContactCreateDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContactCreateDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContactCreateDto
   * @throws IOException if the JSON string is invalid with respect to ContactCreateDto
   */
  public static ContactCreateDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContactCreateDto.class);
  }

  /**
   * Convert an instance of ContactCreateDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

