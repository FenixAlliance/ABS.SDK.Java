/*
 * CrmService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContactProfileDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T15:35:39.798602200-05:00[America/Bogota]", comments = "Generator version: 7.9.0")
public class ContactProfileDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private OffsetDateTime timestamp;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_CONTACT_ID = "contactId";
  @SerializedName(SERIALIZED_NAME_CONTACT_ID)
  private String contactId;

  public static final String SERIALIZED_NAME_ENROLLMENT_ID = "enrollmentId";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_ID)
  private String enrollmentId;

  public static final String SERIALIZED_NAME_ABOUT = "about";
  @SerializedName(SERIALIZED_NAME_ABOUT)
  private String about;

  public static final String SERIALIZED_NAME_VERIFIED = "verified";
  @SerializedName(SERIALIZED_NAME_VERIFIED)
  private Boolean verified;

  public static final String SERIALIZED_NAME_SUBMITTED = "submitted";
  @SerializedName(SERIALIZED_NAME_SUBMITTED)
  private Boolean submitted;

  public static final String SERIALIZED_NAME_AVATAR_URL = "avatarUrl";
  @SerializedName(SERIALIZED_NAME_AVATAR_URL)
  private String avatarUrl;

  public static final String SERIALIZED_NAME_QUALIFIED_NAME = "qualifiedName";
  @SerializedName(SERIALIZED_NAME_QUALIFIED_NAME)
  private String qualifiedName;

  public static final String SERIALIZED_NAME_VERIFICATION_TIMESTAMP = "verificationTimestamp";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_TIMESTAMP)
  private OffsetDateTime verificationTimestamp;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private String data;

  public static final String SERIALIZED_NAME_DATA_LABEL = "dataLabel";
  @SerializedName(SERIALIZED_NAME_DATA_LABEL)
  private String dataLabel;

  public static final String SERIALIZED_NAME_DATA1 = "data1";
  @SerializedName(SERIALIZED_NAME_DATA1)
  private String data1;

  public static final String SERIALIZED_NAME_DATA1_LABEL = "data1Label";
  @SerializedName(SERIALIZED_NAME_DATA1_LABEL)
  private String data1Label;

  public static final String SERIALIZED_NAME_DATA2 = "data2";
  @SerializedName(SERIALIZED_NAME_DATA2)
  private String data2;

  public static final String SERIALIZED_NAME_DATA2_LABEL = "data2Label";
  @SerializedName(SERIALIZED_NAME_DATA2_LABEL)
  private String data2Label;

  public static final String SERIALIZED_NAME_DATA3 = "data3";
  @SerializedName(SERIALIZED_NAME_DATA3)
  private String data3;

  public static final String SERIALIZED_NAME_DATA3_LABEL = "data3Label";
  @SerializedName(SERIALIZED_NAME_DATA3_LABEL)
  private String data3Label;

  public static final String SERIALIZED_NAME_DATA4 = "data4";
  @SerializedName(SERIALIZED_NAME_DATA4)
  private String data4;

  public static final String SERIALIZED_NAME_DATA4_LABEL = "data4Label";
  @SerializedName(SERIALIZED_NAME_DATA4_LABEL)
  private String data4Label;

  public static final String SERIALIZED_NAME_DATA5 = "data5";
  @SerializedName(SERIALIZED_NAME_DATA5)
  private String data5;

  public static final String SERIALIZED_NAME_DATA5_LABEL = "data5Label";
  @SerializedName(SERIALIZED_NAME_DATA5_LABEL)
  private String data5Label;

  public static final String SERIALIZED_NAME_DATA6 = "data6";
  @SerializedName(SERIALIZED_NAME_DATA6)
  private String data6;

  public static final String SERIALIZED_NAME_DATA6_LABEL = "data6Label";
  @SerializedName(SERIALIZED_NAME_DATA6_LABEL)
  private String data6Label;

  public static final String SERIALIZED_NAME_DATA7 = "data7";
  @SerializedName(SERIALIZED_NAME_DATA7)
  private String data7;

  public static final String SERIALIZED_NAME_DATA7_LABEL = "data7Label";
  @SerializedName(SERIALIZED_NAME_DATA7_LABEL)
  private String data7Label;

  public static final String SERIALIZED_NAME_DATA8 = "data8";
  @SerializedName(SERIALIZED_NAME_DATA8)
  private String data8;

  public static final String SERIALIZED_NAME_DATA8_LABEL = "data8Label";
  @SerializedName(SERIALIZED_NAME_DATA8_LABEL)
  private String data8Label;

  public static final String SERIALIZED_NAME_DATA9 = "data9";
  @SerializedName(SERIALIZED_NAME_DATA9)
  private String data9;

  public static final String SERIALIZED_NAME_DATA9_LABEL = "data9Label";
  @SerializedName(SERIALIZED_NAME_DATA9_LABEL)
  private String data9Label;

  public ContactProfileDto() {
  }

  public ContactProfileDto id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ContactProfileDto timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  public ContactProfileDto tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public ContactProfileDto contactId(String contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * Get contactId
   * @return contactId
   */
  @javax.annotation.Nullable
  public String getContactId() {
    return contactId;
  }

  public void setContactId(String contactId) {
    this.contactId = contactId;
  }


  public ContactProfileDto enrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
    return this;
  }

  /**
   * Get enrollmentId
   * @return enrollmentId
   */
  @javax.annotation.Nullable
  public String getEnrollmentId() {
    return enrollmentId;
  }

  public void setEnrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
  }


  public ContactProfileDto about(String about) {
    this.about = about;
    return this;
  }

  /**
   * Get about
   * @return about
   */
  @javax.annotation.Nullable
  public String getAbout() {
    return about;
  }

  public void setAbout(String about) {
    this.about = about;
  }


  public ContactProfileDto verified(Boolean verified) {
    this.verified = verified;
    return this;
  }

  /**
   * Get verified
   * @return verified
   */
  @javax.annotation.Nullable
  public Boolean getVerified() {
    return verified;
  }

  public void setVerified(Boolean verified) {
    this.verified = verified;
  }


  public ContactProfileDto submitted(Boolean submitted) {
    this.submitted = submitted;
    return this;
  }

  /**
   * Get submitted
   * @return submitted
   */
  @javax.annotation.Nullable
  public Boolean getSubmitted() {
    return submitted;
  }

  public void setSubmitted(Boolean submitted) {
    this.submitted = submitted;
  }


  public ContactProfileDto avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  /**
   * Get avatarUrl
   * @return avatarUrl
   */
  @javax.annotation.Nullable
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }


  public ContactProfileDto qualifiedName(String qualifiedName) {
    this.qualifiedName = qualifiedName;
    return this;
  }

  /**
   * Get qualifiedName
   * @return qualifiedName
   */
  @javax.annotation.Nullable
  public String getQualifiedName() {
    return qualifiedName;
  }

  public void setQualifiedName(String qualifiedName) {
    this.qualifiedName = qualifiedName;
  }


  public ContactProfileDto verificationTimestamp(OffsetDateTime verificationTimestamp) {
    this.verificationTimestamp = verificationTimestamp;
    return this;
  }

  /**
   * Get verificationTimestamp
   * @return verificationTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getVerificationTimestamp() {
    return verificationTimestamp;
  }

  public void setVerificationTimestamp(OffsetDateTime verificationTimestamp) {
    this.verificationTimestamp = verificationTimestamp;
  }


  public ContactProfileDto data(String data) {
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @javax.annotation.Nullable
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }


  public ContactProfileDto dataLabel(String dataLabel) {
    this.dataLabel = dataLabel;
    return this;
  }

  /**
   * Get dataLabel
   * @return dataLabel
   */
  @javax.annotation.Nullable
  public String getDataLabel() {
    return dataLabel;
  }

  public void setDataLabel(String dataLabel) {
    this.dataLabel = dataLabel;
  }


  public ContactProfileDto data1(String data1) {
    this.data1 = data1;
    return this;
  }

  /**
   * Get data1
   * @return data1
   */
  @javax.annotation.Nullable
  public String getData1() {
    return data1;
  }

  public void setData1(String data1) {
    this.data1 = data1;
  }


  public ContactProfileDto data1Label(String data1Label) {
    this.data1Label = data1Label;
    return this;
  }

  /**
   * Get data1Label
   * @return data1Label
   */
  @javax.annotation.Nullable
  public String getData1Label() {
    return data1Label;
  }

  public void setData1Label(String data1Label) {
    this.data1Label = data1Label;
  }


  public ContactProfileDto data2(String data2) {
    this.data2 = data2;
    return this;
  }

  /**
   * Get data2
   * @return data2
   */
  @javax.annotation.Nullable
  public String getData2() {
    return data2;
  }

  public void setData2(String data2) {
    this.data2 = data2;
  }


  public ContactProfileDto data2Label(String data2Label) {
    this.data2Label = data2Label;
    return this;
  }

  /**
   * Get data2Label
   * @return data2Label
   */
  @javax.annotation.Nullable
  public String getData2Label() {
    return data2Label;
  }

  public void setData2Label(String data2Label) {
    this.data2Label = data2Label;
  }


  public ContactProfileDto data3(String data3) {
    this.data3 = data3;
    return this;
  }

  /**
   * Get data3
   * @return data3
   */
  @javax.annotation.Nullable
  public String getData3() {
    return data3;
  }

  public void setData3(String data3) {
    this.data3 = data3;
  }


  public ContactProfileDto data3Label(String data3Label) {
    this.data3Label = data3Label;
    return this;
  }

  /**
   * Get data3Label
   * @return data3Label
   */
  @javax.annotation.Nullable
  public String getData3Label() {
    return data3Label;
  }

  public void setData3Label(String data3Label) {
    this.data3Label = data3Label;
  }


  public ContactProfileDto data4(String data4) {
    this.data4 = data4;
    return this;
  }

  /**
   * Get data4
   * @return data4
   */
  @javax.annotation.Nullable
  public String getData4() {
    return data4;
  }

  public void setData4(String data4) {
    this.data4 = data4;
  }


  public ContactProfileDto data4Label(String data4Label) {
    this.data4Label = data4Label;
    return this;
  }

  /**
   * Get data4Label
   * @return data4Label
   */
  @javax.annotation.Nullable
  public String getData4Label() {
    return data4Label;
  }

  public void setData4Label(String data4Label) {
    this.data4Label = data4Label;
  }


  public ContactProfileDto data5(String data5) {
    this.data5 = data5;
    return this;
  }

  /**
   * Get data5
   * @return data5
   */
  @javax.annotation.Nullable
  public String getData5() {
    return data5;
  }

  public void setData5(String data5) {
    this.data5 = data5;
  }


  public ContactProfileDto data5Label(String data5Label) {
    this.data5Label = data5Label;
    return this;
  }

  /**
   * Get data5Label
   * @return data5Label
   */
  @javax.annotation.Nullable
  public String getData5Label() {
    return data5Label;
  }

  public void setData5Label(String data5Label) {
    this.data5Label = data5Label;
  }


  public ContactProfileDto data6(String data6) {
    this.data6 = data6;
    return this;
  }

  /**
   * Get data6
   * @return data6
   */
  @javax.annotation.Nullable
  public String getData6() {
    return data6;
  }

  public void setData6(String data6) {
    this.data6 = data6;
  }


  public ContactProfileDto data6Label(String data6Label) {
    this.data6Label = data6Label;
    return this;
  }

  /**
   * Get data6Label
   * @return data6Label
   */
  @javax.annotation.Nullable
  public String getData6Label() {
    return data6Label;
  }

  public void setData6Label(String data6Label) {
    this.data6Label = data6Label;
  }


  public ContactProfileDto data7(String data7) {
    this.data7 = data7;
    return this;
  }

  /**
   * Get data7
   * @return data7
   */
  @javax.annotation.Nullable
  public String getData7() {
    return data7;
  }

  public void setData7(String data7) {
    this.data7 = data7;
  }


  public ContactProfileDto data7Label(String data7Label) {
    this.data7Label = data7Label;
    return this;
  }

  /**
   * Get data7Label
   * @return data7Label
   */
  @javax.annotation.Nullable
  public String getData7Label() {
    return data7Label;
  }

  public void setData7Label(String data7Label) {
    this.data7Label = data7Label;
  }


  public ContactProfileDto data8(String data8) {
    this.data8 = data8;
    return this;
  }

  /**
   * Get data8
   * @return data8
   */
  @javax.annotation.Nullable
  public String getData8() {
    return data8;
  }

  public void setData8(String data8) {
    this.data8 = data8;
  }


  public ContactProfileDto data8Label(String data8Label) {
    this.data8Label = data8Label;
    return this;
  }

  /**
   * Get data8Label
   * @return data8Label
   */
  @javax.annotation.Nullable
  public String getData8Label() {
    return data8Label;
  }

  public void setData8Label(String data8Label) {
    this.data8Label = data8Label;
  }


  public ContactProfileDto data9(String data9) {
    this.data9 = data9;
    return this;
  }

  /**
   * Get data9
   * @return data9
   */
  @javax.annotation.Nullable
  public String getData9() {
    return data9;
  }

  public void setData9(String data9) {
    this.data9 = data9;
  }


  public ContactProfileDto data9Label(String data9Label) {
    this.data9Label = data9Label;
    return this;
  }

  /**
   * Get data9Label
   * @return data9Label
   */
  @javax.annotation.Nullable
  public String getData9Label() {
    return data9Label;
  }

  public void setData9Label(String data9Label) {
    this.data9Label = data9Label;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactProfileDto contactProfileDto = (ContactProfileDto) o;
    return Objects.equals(this.id, contactProfileDto.id) &&
        Objects.equals(this.timestamp, contactProfileDto.timestamp) &&
        Objects.equals(this.tenantId, contactProfileDto.tenantId) &&
        Objects.equals(this.contactId, contactProfileDto.contactId) &&
        Objects.equals(this.enrollmentId, contactProfileDto.enrollmentId) &&
        Objects.equals(this.about, contactProfileDto.about) &&
        Objects.equals(this.verified, contactProfileDto.verified) &&
        Objects.equals(this.submitted, contactProfileDto.submitted) &&
        Objects.equals(this.avatarUrl, contactProfileDto.avatarUrl) &&
        Objects.equals(this.qualifiedName, contactProfileDto.qualifiedName) &&
        Objects.equals(this.verificationTimestamp, contactProfileDto.verificationTimestamp) &&
        Objects.equals(this.data, contactProfileDto.data) &&
        Objects.equals(this.dataLabel, contactProfileDto.dataLabel) &&
        Objects.equals(this.data1, contactProfileDto.data1) &&
        Objects.equals(this.data1Label, contactProfileDto.data1Label) &&
        Objects.equals(this.data2, contactProfileDto.data2) &&
        Objects.equals(this.data2Label, contactProfileDto.data2Label) &&
        Objects.equals(this.data3, contactProfileDto.data3) &&
        Objects.equals(this.data3Label, contactProfileDto.data3Label) &&
        Objects.equals(this.data4, contactProfileDto.data4) &&
        Objects.equals(this.data4Label, contactProfileDto.data4Label) &&
        Objects.equals(this.data5, contactProfileDto.data5) &&
        Objects.equals(this.data5Label, contactProfileDto.data5Label) &&
        Objects.equals(this.data6, contactProfileDto.data6) &&
        Objects.equals(this.data6Label, contactProfileDto.data6Label) &&
        Objects.equals(this.data7, contactProfileDto.data7) &&
        Objects.equals(this.data7Label, contactProfileDto.data7Label) &&
        Objects.equals(this.data8, contactProfileDto.data8) &&
        Objects.equals(this.data8Label, contactProfileDto.data8Label) &&
        Objects.equals(this.data9, contactProfileDto.data9) &&
        Objects.equals(this.data9Label, contactProfileDto.data9Label);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, timestamp, tenantId, contactId, enrollmentId, about, verified, submitted, avatarUrl, qualifiedName, verificationTimestamp, data, dataLabel, data1, data1Label, data2, data2Label, data3, data3Label, data4, data4Label, data5, data5Label, data6, data6Label, data7, data7Label, data8, data8Label, data9, data9Label);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactProfileDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    enrollmentId: ").append(toIndentedString(enrollmentId)).append("\n");
    sb.append("    about: ").append(toIndentedString(about)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    submitted: ").append(toIndentedString(submitted)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    qualifiedName: ").append(toIndentedString(qualifiedName)).append("\n");
    sb.append("    verificationTimestamp: ").append(toIndentedString(verificationTimestamp)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    dataLabel: ").append(toIndentedString(dataLabel)).append("\n");
    sb.append("    data1: ").append(toIndentedString(data1)).append("\n");
    sb.append("    data1Label: ").append(toIndentedString(data1Label)).append("\n");
    sb.append("    data2: ").append(toIndentedString(data2)).append("\n");
    sb.append("    data2Label: ").append(toIndentedString(data2Label)).append("\n");
    sb.append("    data3: ").append(toIndentedString(data3)).append("\n");
    sb.append("    data3Label: ").append(toIndentedString(data3Label)).append("\n");
    sb.append("    data4: ").append(toIndentedString(data4)).append("\n");
    sb.append("    data4Label: ").append(toIndentedString(data4Label)).append("\n");
    sb.append("    data5: ").append(toIndentedString(data5)).append("\n");
    sb.append("    data5Label: ").append(toIndentedString(data5Label)).append("\n");
    sb.append("    data6: ").append(toIndentedString(data6)).append("\n");
    sb.append("    data6Label: ").append(toIndentedString(data6Label)).append("\n");
    sb.append("    data7: ").append(toIndentedString(data7)).append("\n");
    sb.append("    data7Label: ").append(toIndentedString(data7Label)).append("\n");
    sb.append("    data8: ").append(toIndentedString(data8)).append("\n");
    sb.append("    data8Label: ").append(toIndentedString(data8Label)).append("\n");
    sb.append("    data9: ").append(toIndentedString(data9)).append("\n");
    sb.append("    data9Label: ").append(toIndentedString(data9Label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("timestamp");
    openapiFields.add("tenantId");
    openapiFields.add("contactId");
    openapiFields.add("enrollmentId");
    openapiFields.add("about");
    openapiFields.add("verified");
    openapiFields.add("submitted");
    openapiFields.add("avatarUrl");
    openapiFields.add("qualifiedName");
    openapiFields.add("verificationTimestamp");
    openapiFields.add("data");
    openapiFields.add("dataLabel");
    openapiFields.add("data1");
    openapiFields.add("data1Label");
    openapiFields.add("data2");
    openapiFields.add("data2Label");
    openapiFields.add("data3");
    openapiFields.add("data3Label");
    openapiFields.add("data4");
    openapiFields.add("data4Label");
    openapiFields.add("data5");
    openapiFields.add("data5Label");
    openapiFields.add("data6");
    openapiFields.add("data6Label");
    openapiFields.add("data7");
    openapiFields.add("data7Label");
    openapiFields.add("data8");
    openapiFields.add("data8Label");
    openapiFields.add("data9");
    openapiFields.add("data9Label");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContactProfileDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContactProfileDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContactProfileDto is not found in the empty JSON string", ContactProfileDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContactProfileDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContactProfileDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("contactId") != null && !jsonObj.get("contactId").isJsonNull()) && !jsonObj.get("contactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactId").toString()));
      }
      if ((jsonObj.get("enrollmentId") != null && !jsonObj.get("enrollmentId").isJsonNull()) && !jsonObj.get("enrollmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enrollmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enrollmentId").toString()));
      }
      if ((jsonObj.get("about") != null && !jsonObj.get("about").isJsonNull()) && !jsonObj.get("about").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `about` to be a primitive type in the JSON string but got `%s`", jsonObj.get("about").toString()));
      }
      if ((jsonObj.get("avatarUrl") != null && !jsonObj.get("avatarUrl").isJsonNull()) && !jsonObj.get("avatarUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatarUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatarUrl").toString()));
      }
      if ((jsonObj.get("qualifiedName") != null && !jsonObj.get("qualifiedName").isJsonNull()) && !jsonObj.get("qualifiedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qualifiedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qualifiedName").toString()));
      }
      if ((jsonObj.get("data") != null && !jsonObj.get("data").isJsonNull()) && !jsonObj.get("data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data").toString()));
      }
      if ((jsonObj.get("dataLabel") != null && !jsonObj.get("dataLabel").isJsonNull()) && !jsonObj.get("dataLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataLabel").toString()));
      }
      if ((jsonObj.get("data1") != null && !jsonObj.get("data1").isJsonNull()) && !jsonObj.get("data1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data1").toString()));
      }
      if ((jsonObj.get("data1Label") != null && !jsonObj.get("data1Label").isJsonNull()) && !jsonObj.get("data1Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data1Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data1Label").toString()));
      }
      if ((jsonObj.get("data2") != null && !jsonObj.get("data2").isJsonNull()) && !jsonObj.get("data2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data2").toString()));
      }
      if ((jsonObj.get("data2Label") != null && !jsonObj.get("data2Label").isJsonNull()) && !jsonObj.get("data2Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data2Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data2Label").toString()));
      }
      if ((jsonObj.get("data3") != null && !jsonObj.get("data3").isJsonNull()) && !jsonObj.get("data3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data3").toString()));
      }
      if ((jsonObj.get("data3Label") != null && !jsonObj.get("data3Label").isJsonNull()) && !jsonObj.get("data3Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data3Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data3Label").toString()));
      }
      if ((jsonObj.get("data4") != null && !jsonObj.get("data4").isJsonNull()) && !jsonObj.get("data4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data4").toString()));
      }
      if ((jsonObj.get("data4Label") != null && !jsonObj.get("data4Label").isJsonNull()) && !jsonObj.get("data4Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data4Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data4Label").toString()));
      }
      if ((jsonObj.get("data5") != null && !jsonObj.get("data5").isJsonNull()) && !jsonObj.get("data5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data5").toString()));
      }
      if ((jsonObj.get("data5Label") != null && !jsonObj.get("data5Label").isJsonNull()) && !jsonObj.get("data5Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data5Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data5Label").toString()));
      }
      if ((jsonObj.get("data6") != null && !jsonObj.get("data6").isJsonNull()) && !jsonObj.get("data6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data6").toString()));
      }
      if ((jsonObj.get("data6Label") != null && !jsonObj.get("data6Label").isJsonNull()) && !jsonObj.get("data6Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data6Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data6Label").toString()));
      }
      if ((jsonObj.get("data7") != null && !jsonObj.get("data7").isJsonNull()) && !jsonObj.get("data7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data7").toString()));
      }
      if ((jsonObj.get("data7Label") != null && !jsonObj.get("data7Label").isJsonNull()) && !jsonObj.get("data7Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data7Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data7Label").toString()));
      }
      if ((jsonObj.get("data8") != null && !jsonObj.get("data8").isJsonNull()) && !jsonObj.get("data8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data8").toString()));
      }
      if ((jsonObj.get("data8Label") != null && !jsonObj.get("data8Label").isJsonNull()) && !jsonObj.get("data8Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data8Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data8Label").toString()));
      }
      if ((jsonObj.get("data9") != null && !jsonObj.get("data9").isJsonNull()) && !jsonObj.get("data9").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data9` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data9").toString()));
      }
      if ((jsonObj.get("data9Label") != null && !jsonObj.get("data9Label").isJsonNull()) && !jsonObj.get("data9Label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data9Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data9Label").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContactProfileDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContactProfileDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContactProfileDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContactProfileDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ContactProfileDto>() {
           @Override
           public void write(JsonWriter out, ContactProfileDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContactProfileDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContactProfileDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContactProfileDto
   * @throws IOException if the JSON string is invalid with respect to ContactProfileDto
   */
  public static ContactProfileDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContactProfileDto.class);
  }

  /**
   * Convert an instance of ContactProfileDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

