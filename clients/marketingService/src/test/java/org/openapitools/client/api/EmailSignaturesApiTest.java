/*
 * MarketingService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmailSignatureCreateDto;
import org.openapitools.client.model.EmailSignatureDtoEnvelope;
import org.openapitools.client.model.EmailSignatureDtoListEnvelope;
import org.openapitools.client.model.EmailSignatureUpdateDto;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.Int32Envelope;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmailSignaturesApi
 */
@Disabled
public class EmailSignaturesApiTest {

    private final EmailSignaturesApi api = new EmailSignaturesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceEmailSignaturesCountGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.apiV2MarketingServiceEmailSignaturesCountGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceEmailSignaturesEmailsignatureIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID emailsignatureId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceEmailSignaturesEmailsignatureIdDelete(tenantId, emailsignatureId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceEmailSignaturesEmailsignatureIdGetTest() throws ApiException {
        UUID tenantId = null;
        UUID emailsignatureId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmailSignatureDtoEnvelope response = api.apiV2MarketingServiceEmailSignaturesEmailsignatureIdGet(tenantId, emailsignatureId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceEmailSignaturesEmailsignatureIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID emailsignatureId = null;
        EmailSignatureUpdateDto emailSignatureUpdateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceEmailSignaturesEmailsignatureIdPut(tenantId, emailsignatureId, emailSignatureUpdateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceEmailSignaturesGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmailSignatureDtoListEnvelope response = api.apiV2MarketingServiceEmailSignaturesGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceEmailSignaturesPostTest() throws ApiException {
        UUID tenantId = null;
        EmailSignatureCreateDto emailSignatureCreateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceEmailSignaturesPost(tenantId, emailSignatureCreateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

}
