/*
 * MarketingService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.Int32Envelope;
import org.openapitools.client.model.MarketingListCreateDto;
import org.openapitools.client.model.MarketingListDtoEnvelope;
import org.openapitools.client.model.MarketingListDtoListEnvelope;
import org.openapitools.client.model.MarketingListUpdateDto;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MarketingListsApi
 */
@Disabled
public class MarketingListsApiTest {

    private final MarketingListsApi api = new MarketingListsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingListsCountGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.apiV2MarketingServiceMarketingListsCountGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingListsGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        MarketingListDtoListEnvelope response = api.apiV2MarketingServiceMarketingListsGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingListsMarketinglistIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID marketinglistId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceMarketingListsMarketinglistIdDelete(tenantId, marketinglistId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingListsMarketinglistIdGetTest() throws ApiException {
        UUID tenantId = null;
        UUID marketinglistId = null;
        String apiVersion = null;
        String xApiVersion = null;
        MarketingListDtoEnvelope response = api.apiV2MarketingServiceMarketingListsMarketinglistIdGet(tenantId, marketinglistId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingListsMarketinglistIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID marketinglistId = null;
        MarketingListUpdateDto marketingListUpdateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceMarketingListsMarketinglistIdPut(tenantId, marketinglistId, marketingListUpdateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingListsPostTest() throws ApiException {
        UUID tenantId = null;
        MarketingListCreateDto marketingListCreateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceMarketingListsPost(tenantId, marketingListCreateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

}
