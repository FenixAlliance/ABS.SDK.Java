/*
 * MarketingService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.Int32Envelope;
import org.openapitools.client.model.MarketingCampaignCreateDto;
import org.openapitools.client.model.MarketingCampaignDtoEnvelope;
import org.openapitools.client.model.MarketingCampaignUpdateDto;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MarketingCampaignsApi
 */
@Disabled
public class MarketingCampaignsApiTest {

    private final MarketingCampaignsApi api = new MarketingCampaignsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingCampaignsCountGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.apiV2MarketingServiceMarketingCampaignsCountGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingCampaignsGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        api.apiV2MarketingServiceMarketingCampaignsGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingCampaignsMarketingcampaignIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID marketingcampaignId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceMarketingCampaignsMarketingcampaignIdDelete(tenantId, marketingcampaignId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingCampaignsMarketingcampaignIdGetTest() throws ApiException {
        UUID tenantId = null;
        UUID marketingcampaignId = null;
        String apiVersion = null;
        String xApiVersion = null;
        MarketingCampaignDtoEnvelope response = api.apiV2MarketingServiceMarketingCampaignsMarketingcampaignIdGet(tenantId, marketingcampaignId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingCampaignsMarketingcampaignIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID marketingcampaignId = null;
        MarketingCampaignUpdateDto marketingCampaignUpdateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceMarketingCampaignsMarketingcampaignIdPut(tenantId, marketingcampaignId, marketingCampaignUpdateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceMarketingCampaignsPostTest() throws ApiException {
        UUID tenantId = null;
        MarketingCampaignCreateDto marketingCampaignCreateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceMarketingCampaignsPost(tenantId, marketingCampaignCreateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

}
