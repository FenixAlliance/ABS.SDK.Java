/*
 * MarketingService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.Int32Envelope;
import org.openapitools.client.model.SocialPostBucketCreateDto;
import org.openapitools.client.model.SocialPostBucketDtoEnvelope;
import org.openapitools.client.model.SocialPostBucketDtoListEnvelope;
import org.openapitools.client.model.SocialPostBucketUpdateDto;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SocialPostBucketsApi
 */
@Disabled
public class SocialPostBucketsApiTest {

    private final SocialPostBucketsApi api = new SocialPostBucketsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialPostBucketsCountGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.apiV2MarketingServiceSocialPostBucketsCountGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialPostBucketsGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        SocialPostBucketDtoListEnvelope response = api.apiV2MarketingServiceSocialPostBucketsGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialPostBucketsPostTest() throws ApiException {
        UUID tenantId = null;
        SocialPostBucketCreateDto socialPostBucketCreateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceSocialPostBucketsPost(tenantId, socialPostBucketCreateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialPostBucketsSocialpostbucketIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID socialpostbucketId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceSocialPostBucketsSocialpostbucketIdDelete(tenantId, socialpostbucketId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialPostBucketsSocialpostbucketIdGetTest() throws ApiException {
        UUID tenantId = null;
        UUID socialpostbucketId = null;
        String apiVersion = null;
        String xApiVersion = null;
        SocialPostBucketDtoEnvelope response = api.apiV2MarketingServiceSocialPostBucketsSocialpostbucketIdGet(tenantId, socialpostbucketId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialPostBucketsSocialpostbucketIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID socialpostbucketId = null;
        SocialPostBucketUpdateDto socialPostBucketUpdateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceSocialPostBucketsSocialpostbucketIdPut(tenantId, socialpostbucketId, socialPostBucketUpdateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

}
