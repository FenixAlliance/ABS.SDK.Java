/*
 * MarketingService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.Int32Envelope;
import org.openapitools.client.model.SocialMediaPostCreateDto;
import org.openapitools.client.model.SocialMediaPostDtoEnvelope;
import org.openapitools.client.model.SocialMediaPostDtoListEnvelope;
import org.openapitools.client.model.SocialMediaPostUpdateDto;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SocialMediaPostsApi
 */
@Disabled
public class SocialMediaPostsApiTest {

    private final SocialMediaPostsApi api = new SocialMediaPostsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialMediaPostsCountGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.apiV2MarketingServiceSocialMediaPostsCountGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialMediaPostsGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        SocialMediaPostDtoListEnvelope response = api.apiV2MarketingServiceSocialMediaPostsGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialMediaPostsPostTest() throws ApiException {
        UUID tenantId = null;
        SocialMediaPostCreateDto socialMediaPostCreateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceSocialMediaPostsPost(tenantId, socialMediaPostCreateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialMediaPostsSocialmediapostIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID socialmediapostId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceSocialMediaPostsSocialmediapostIdDelete(tenantId, socialmediapostId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialMediaPostsSocialmediapostIdGetTest() throws ApiException {
        UUID tenantId = null;
        UUID socialmediapostId = null;
        String apiVersion = null;
        String xApiVersion = null;
        SocialMediaPostDtoEnvelope response = api.apiV2MarketingServiceSocialMediaPostsSocialmediapostIdGet(tenantId, socialmediapostId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2MarketingServiceSocialMediaPostsSocialmediapostIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID socialmediapostId = null;
        SocialMediaPostUpdateDto socialMediaPostUpdateDto = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2MarketingServiceSocialMediaPostsSocialmediapostIdPut(tenantId, socialmediapostId, socialMediaPostUpdateDto, apiVersion, xApiVersion);
        // TODO: test validations
    }

}
