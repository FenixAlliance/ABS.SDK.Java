/*
 * MarketingService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MarketingCampaignCreateDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T15:36:45.577528700-05:00[America/Bogota]", comments = "Generator version: 7.9.0")
public class MarketingCampaignCreateDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private OffsetDateTime timestamp;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OFFER = "offer";
  @SerializedName(SERIALIZED_NAME_OFFER)
  private String offer;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_PROPOSED_START = "proposedStart";
  @SerializedName(SERIALIZED_NAME_PROPOSED_START)
  private OffsetDateTime proposedStart;

  public static final String SERIALIZED_NAME_PROPOSED_END = "proposedEnd";
  @SerializedName(SERIALIZED_NAME_PROPOSED_END)
  private OffsetDateTime proposedEnd;

  public static final String SERIALIZED_NAME_ACTUAL_START = "actualStart";
  @SerializedName(SERIALIZED_NAME_ACTUAL_START)
  private OffsetDateTime actualStart;

  public static final String SERIALIZED_NAME_ACTUAL_END = "actualEnd";
  @SerializedName(SERIALIZED_NAME_ACTUAL_END)
  private OffsetDateTime actualEnd;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_ALLOCATED_BUDGET = "allocatedBudget";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_BUDGET)
  private Double allocatedBudget;

  public static final String SERIALIZED_NAME_ACTIVITY_COST = "activityCost";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_COST)
  private Double activityCost;

  public static final String SERIALIZED_NAME_MISC_COST = "miscCost";
  @SerializedName(SERIALIZED_NAME_MISC_COST)
  private Double miscCost;

  public static final String SERIALIZED_NAME_EXPECTED_RESPONSE_PERCENT = "expectedResponsePercent";
  @SerializedName(SERIALIZED_NAME_EXPECTED_RESPONSE_PERCENT)
  private Double expectedResponsePercent;

  public static final String SERIALIZED_NAME_MARKETING_AREA_ID = "marketingAreaId";
  @SerializedName(SERIALIZED_NAME_MARKETING_AREA_ID)
  private String marketingAreaId;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "currencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private String currencyId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_ENROLMENT_ID = "enrolmentId";
  @SerializedName(SERIALIZED_NAME_ENROLMENT_ID)
  private String enrolmentId;

  public MarketingCampaignCreateDto() {
  }

  public MarketingCampaignCreateDto(
     UUID id, 
     OffsetDateTime timestamp
  ) {
    this();
    this.id = id;
    this.timestamp = timestamp;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }



  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }



  public MarketingCampaignCreateDto name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public MarketingCampaignCreateDto offer(String offer) {
    this.offer = offer;
    return this;
  }

  /**
   * Get offer
   * @return offer
   */
  @javax.annotation.Nullable
  public String getOffer() {
    return offer;
  }

  public void setOffer(String offer) {
    this.offer = offer;
  }


  public MarketingCampaignCreateDto active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Get active
   * @return active
   */
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public MarketingCampaignCreateDto proposedStart(OffsetDateTime proposedStart) {
    this.proposedStart = proposedStart;
    return this;
  }

  /**
   * Get proposedStart
   * @return proposedStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getProposedStart() {
    return proposedStart;
  }

  public void setProposedStart(OffsetDateTime proposedStart) {
    this.proposedStart = proposedStart;
  }


  public MarketingCampaignCreateDto proposedEnd(OffsetDateTime proposedEnd) {
    this.proposedEnd = proposedEnd;
    return this;
  }

  /**
   * Get proposedEnd
   * @return proposedEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getProposedEnd() {
    return proposedEnd;
  }

  public void setProposedEnd(OffsetDateTime proposedEnd) {
    this.proposedEnd = proposedEnd;
  }


  public MarketingCampaignCreateDto actualStart(OffsetDateTime actualStart) {
    this.actualStart = actualStart;
    return this;
  }

  /**
   * Get actualStart
   * @return actualStart
   */
  @javax.annotation.Nullable
  public OffsetDateTime getActualStart() {
    return actualStart;
  }

  public void setActualStart(OffsetDateTime actualStart) {
    this.actualStart = actualStart;
  }


  public MarketingCampaignCreateDto actualEnd(OffsetDateTime actualEnd) {
    this.actualEnd = actualEnd;
    return this;
  }

  /**
   * Get actualEnd
   * @return actualEnd
   */
  @javax.annotation.Nullable
  public OffsetDateTime getActualEnd() {
    return actualEnd;
  }

  public void setActualEnd(OffsetDateTime actualEnd) {
    this.actualEnd = actualEnd;
  }


  public MarketingCampaignCreateDto code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public MarketingCampaignCreateDto allocatedBudget(Double allocatedBudget) {
    this.allocatedBudget = allocatedBudget;
    return this;
  }

  /**
   * Get allocatedBudget
   * @return allocatedBudget
   */
  @javax.annotation.Nullable
  public Double getAllocatedBudget() {
    return allocatedBudget;
  }

  public void setAllocatedBudget(Double allocatedBudget) {
    this.allocatedBudget = allocatedBudget;
  }


  public MarketingCampaignCreateDto activityCost(Double activityCost) {
    this.activityCost = activityCost;
    return this;
  }

  /**
   * Get activityCost
   * @return activityCost
   */
  @javax.annotation.Nullable
  public Double getActivityCost() {
    return activityCost;
  }

  public void setActivityCost(Double activityCost) {
    this.activityCost = activityCost;
  }


  public MarketingCampaignCreateDto miscCost(Double miscCost) {
    this.miscCost = miscCost;
    return this;
  }

  /**
   * Get miscCost
   * @return miscCost
   */
  @javax.annotation.Nullable
  public Double getMiscCost() {
    return miscCost;
  }

  public void setMiscCost(Double miscCost) {
    this.miscCost = miscCost;
  }


  public MarketingCampaignCreateDto expectedResponsePercent(Double expectedResponsePercent) {
    this.expectedResponsePercent = expectedResponsePercent;
    return this;
  }

  /**
   * Get expectedResponsePercent
   * @return expectedResponsePercent
   */
  @javax.annotation.Nullable
  public Double getExpectedResponsePercent() {
    return expectedResponsePercent;
  }

  public void setExpectedResponsePercent(Double expectedResponsePercent) {
    this.expectedResponsePercent = expectedResponsePercent;
  }


  public MarketingCampaignCreateDto marketingAreaId(String marketingAreaId) {
    this.marketingAreaId = marketingAreaId;
    return this;
  }

  /**
   * Get marketingAreaId
   * @return marketingAreaId
   */
  @javax.annotation.Nullable
  public String getMarketingAreaId() {
    return marketingAreaId;
  }

  public void setMarketingAreaId(String marketingAreaId) {
    this.marketingAreaId = marketingAreaId;
  }


  public MarketingCampaignCreateDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public MarketingCampaignCreateDto tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public MarketingCampaignCreateDto enrolmentId(String enrolmentId) {
    this.enrolmentId = enrolmentId;
    return this;
  }

  /**
   * Get enrolmentId
   * @return enrolmentId
   */
  @javax.annotation.Nullable
  public String getEnrolmentId() {
    return enrolmentId;
  }

  public void setEnrolmentId(String enrolmentId) {
    this.enrolmentId = enrolmentId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketingCampaignCreateDto marketingCampaignCreateDto = (MarketingCampaignCreateDto) o;
    return Objects.equals(this.id, marketingCampaignCreateDto.id) &&
        Objects.equals(this.timestamp, marketingCampaignCreateDto.timestamp) &&
        Objects.equals(this.name, marketingCampaignCreateDto.name) &&
        Objects.equals(this.offer, marketingCampaignCreateDto.offer) &&
        Objects.equals(this.active, marketingCampaignCreateDto.active) &&
        Objects.equals(this.proposedStart, marketingCampaignCreateDto.proposedStart) &&
        Objects.equals(this.proposedEnd, marketingCampaignCreateDto.proposedEnd) &&
        Objects.equals(this.actualStart, marketingCampaignCreateDto.actualStart) &&
        Objects.equals(this.actualEnd, marketingCampaignCreateDto.actualEnd) &&
        Objects.equals(this.code, marketingCampaignCreateDto.code) &&
        Objects.equals(this.allocatedBudget, marketingCampaignCreateDto.allocatedBudget) &&
        Objects.equals(this.activityCost, marketingCampaignCreateDto.activityCost) &&
        Objects.equals(this.miscCost, marketingCampaignCreateDto.miscCost) &&
        Objects.equals(this.expectedResponsePercent, marketingCampaignCreateDto.expectedResponsePercent) &&
        Objects.equals(this.marketingAreaId, marketingCampaignCreateDto.marketingAreaId) &&
        Objects.equals(this.currencyId, marketingCampaignCreateDto.currencyId) &&
        Objects.equals(this.tenantId, marketingCampaignCreateDto.tenantId) &&
        Objects.equals(this.enrolmentId, marketingCampaignCreateDto.enrolmentId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, timestamp, name, offer, active, proposedStart, proposedEnd, actualStart, actualEnd, code, allocatedBudget, activityCost, miscCost, expectedResponsePercent, marketingAreaId, currencyId, tenantId, enrolmentId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketingCampaignCreateDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    proposedStart: ").append(toIndentedString(proposedStart)).append("\n");
    sb.append("    proposedEnd: ").append(toIndentedString(proposedEnd)).append("\n");
    sb.append("    actualStart: ").append(toIndentedString(actualStart)).append("\n");
    sb.append("    actualEnd: ").append(toIndentedString(actualEnd)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    allocatedBudget: ").append(toIndentedString(allocatedBudget)).append("\n");
    sb.append("    activityCost: ").append(toIndentedString(activityCost)).append("\n");
    sb.append("    miscCost: ").append(toIndentedString(miscCost)).append("\n");
    sb.append("    expectedResponsePercent: ").append(toIndentedString(expectedResponsePercent)).append("\n");
    sb.append("    marketingAreaId: ").append(toIndentedString(marketingAreaId)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    enrolmentId: ").append(toIndentedString(enrolmentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("timestamp");
    openapiFields.add("name");
    openapiFields.add("offer");
    openapiFields.add("active");
    openapiFields.add("proposedStart");
    openapiFields.add("proposedEnd");
    openapiFields.add("actualStart");
    openapiFields.add("actualEnd");
    openapiFields.add("code");
    openapiFields.add("allocatedBudget");
    openapiFields.add("activityCost");
    openapiFields.add("miscCost");
    openapiFields.add("expectedResponsePercent");
    openapiFields.add("marketingAreaId");
    openapiFields.add("currencyId");
    openapiFields.add("tenantId");
    openapiFields.add("enrolmentId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MarketingCampaignCreateDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MarketingCampaignCreateDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MarketingCampaignCreateDto is not found in the empty JSON string", MarketingCampaignCreateDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MarketingCampaignCreateDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MarketingCampaignCreateDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("offer") != null && !jsonObj.get("offer").isJsonNull()) && !jsonObj.get("offer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offer").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("marketingAreaId") != null && !jsonObj.get("marketingAreaId").isJsonNull()) && !jsonObj.get("marketingAreaId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketingAreaId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketingAreaId").toString()));
      }
      if ((jsonObj.get("currencyId") != null && !jsonObj.get("currencyId").isJsonNull()) && !jsonObj.get("currencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyId").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("enrolmentId") != null && !jsonObj.get("enrolmentId").isJsonNull()) && !jsonObj.get("enrolmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enrolmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enrolmentId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MarketingCampaignCreateDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MarketingCampaignCreateDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MarketingCampaignCreateDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MarketingCampaignCreateDto.class));

       return (TypeAdapter<T>) new TypeAdapter<MarketingCampaignCreateDto>() {
           @Override
           public void write(JsonWriter out, MarketingCampaignCreateDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MarketingCampaignCreateDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MarketingCampaignCreateDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MarketingCampaignCreateDto
   * @throws IOException if the JSON string is invalid with respect to MarketingCampaignCreateDto
   */
  public static MarketingCampaignCreateDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MarketingCampaignCreateDto.class);
  }

  /**
   * Convert an instance of MarketingCampaignCreateDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

