/*
 * QuotesService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContactDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T15:37:22.246748800-05:00[America/Bogota]", comments = "Generator version: 7.9.0")
public class ContactDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private OffsetDateTime timestamp;

  public static final String SERIALIZED_NAME_QUALIFIED_NAME = "qualifiedName";
  @SerializedName(SERIALIZED_NAME_QUALIFIED_NAME)
  private String qualifiedName;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(Integer value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_PUBLIC_NAME = "publicName";
  @SerializedName(SERIALIZED_NAME_PUBLIC_NAME)
  private String publicName;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_COVER_URL = "coverUrl";
  @SerializedName(SERIALIZED_NAME_COVER_URL)
  private String coverUrl;

  public static final String SERIALIZED_NAME_AVATAR_URL = "avatarUrl";
  @SerializedName(SERIALIZED_NAME_AVATAR_URL)
  private String avatarUrl;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private String countryId;

  public static final String SERIALIZED_NAME_TIMEZONE_ID = "timezoneId";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_ID)
  private String timezoneId;

  public static final String SERIALIZED_NAME_LANGUAGE_ID = "languageId";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_ID)
  private String languageId;

  public static final String SERIALIZED_NAME_SOCIAL_PROFILE_ID = "socialProfileId";
  @SerializedName(SERIALIZED_NAME_SOCIAL_PROFILE_ID)
  private String socialProfileId;

  public static final String SERIALIZED_NAME_WEB_URL = "webUrl";
  @SerializedName(SERIALIZED_NAME_WEB_URL)
  private String webUrl;

  public static final String SERIALIZED_NAME_GIT_HUB_URL = "gitHubUrl";
  @SerializedName(SERIALIZED_NAME_GIT_HUB_URL)
  private String gitHubUrl;

  public static final String SERIALIZED_NAME_TWITCH_URL = "twitchUrl";
  @SerializedName(SERIALIZED_NAME_TWITCH_URL)
  private String twitchUrl;

  public static final String SERIALIZED_NAME_REDDIT_URL = "redditUrl";
  @SerializedName(SERIALIZED_NAME_REDDIT_URL)
  private String redditUrl;

  public static final String SERIALIZED_NAME_TIK_TOK_URL = "tikTokUrl";
  @SerializedName(SERIALIZED_NAME_TIK_TOK_URL)
  private String tikTokUrl;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "websiteUrl";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;

  public static final String SERIALIZED_NAME_TWITTER_URL = "twitterUrl";
  @SerializedName(SERIALIZED_NAME_TWITTER_URL)
  private String twitterUrl;

  public static final String SERIALIZED_NAME_FACEBOOK_URL = "facebookUrl";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_URL)
  private String facebookUrl;

  public static final String SERIALIZED_NAME_YOU_TUBE_URL = "youTubeUrl";
  @SerializedName(SERIALIZED_NAME_YOU_TUBE_URL)
  private String youTubeUrl;

  public static final String SERIALIZED_NAME_LINKED_IN_URL = "linkedInUrl";
  @SerializedName(SERIALIZED_NAME_LINKED_IN_URL)
  private String linkedInUrl;

  public static final String SERIALIZED_NAME_INSTAGRAM_URL = "instagramUrl";
  @SerializedName(SERIALIZED_NAME_INSTAGRAM_URL)
  private String instagramUrl;

  public static final String SERIALIZED_NAME_GITHUB_USERNAME = "githubUsername";
  @SerializedName(SERIALIZED_NAME_GITHUB_USERNAME)
  private String githubUsername;

  public static final String SERIALIZED_NAME_DUNS = "duns";
  @SerializedName(SERIALIZED_NAME_DUNS)
  private String duns;

  public static final String SERIALIZED_NAME_TAX_ID = "taxId";
  @SerializedName(SERIALIZED_NAME_TAX_ID)
  private String taxId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_ABOUT = "about";
  @SerializedName(SERIALIZED_NAME_ABOUT)
  private String about;

  public static final String SERIALIZED_NAME_STREET = "street";
  @SerializedName(SERIALIZED_NAME_STREET)
  private String street;

  public static final String SERIALIZED_NAME_CART_ID = "cartId";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private String cartId;

  public static final String SERIALIZED_NAME_CITY_ID = "cityId";
  @SerializedName(SERIALIZED_NAME_CITY_ID)
  private String cityId;

  public static final String SERIALIZED_NAME_ZIP_CODE = "zipCode";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  private String zipCode;

  public static final String SERIALIZED_NAME_STATE_ID = "stateId";
  @SerializedName(SERIALIZED_NAME_STATE_ID)
  private String stateId;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  private String walletId;

  public static final String SERIALIZED_NAME_FAX_NUMBER = "faxNumber";
  @SerializedName(SERIALIZED_NAME_FAX_NUMBER)
  private String faxNumber;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "currencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private String currencyId;

  public static final String SERIALIZED_NAME_STREET_LINE1 = "streetLine1";
  @SerializedName(SERIALIZED_NAME_STREET_LINE1)
  private String streetLine1;

  public static final String SERIALIZED_NAME_STREET_LINE2 = "streetLine2";
  @SerializedName(SERIALIZED_NAME_STREET_LINE2)
  private String streetLine2;

  public static final String SERIALIZED_NAME_TERRITORY_ID = "territoryId";
  @SerializedName(SERIALIZED_NAME_TERRITORY_ID)
  private String territoryId;

  public static final String SERIALIZED_NAME_MOBILE_PHONE = "mobilePhone";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE)
  private String mobilePhone;

  public static final String SERIALIZED_NAME_ENROLLMENT_ID = "enrollmentId";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_ID)
  private String enrollmentId;

  public static final String SERIALIZED_NAME_ANNUAL_REVENUE = "annualRevenue";
  @SerializedName(SERIALIZED_NAME_ANNUAL_REVENUE)
  private String annualRevenue;

  public static final String SERIALIZED_NAME_RELATED_USER_ID = "relatedUserId";
  @SerializedName(SERIALIZED_NAME_RELATED_USER_ID)
  private String relatedUserId;

  public static final String SERIALIZED_NAME_BUSINESS_PHONE = "businessPhone";
  @SerializedName(SERIALIZED_NAME_BUSINESS_PHONE)
  private String businessPhone;

  public static final String SERIALIZED_NAME_OWNER_CONTACT_ID = "ownerContactId";
  @SerializedName(SERIALIZED_NAME_OWNER_CONTACT_ID)
  private String ownerContactId;

  public static final String SERIALIZED_NAME_RELATED_TENANT_ID = "relatedTenantId";
  @SerializedName(SERIALIZED_NAME_RELATED_TENANT_ID)
  private String relatedTenantId;

  public static final String SERIALIZED_NAME_ACTIVITY_FEED_ID = "activityFeedId";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_FEED_ID)
  private String activityFeedId;

  public static final String SERIALIZED_NAME_PARENT_CONTACT_ID = "parentContactId";
  @SerializedName(SERIALIZED_NAME_PARENT_CONTACT_ID)
  private String parentContactId;

  public static final String SERIALIZED_NAME_IDENTITY_PROVIDER = "identityProvider";
  @SerializedName(SERIALIZED_NAME_IDENTITY_PROVIDER)
  private String identityProvider;

  public static final String SERIALIZED_NAME_PARTNER_PROFILE_ID = "partnerProfileId";
  @SerializedName(SERIALIZED_NAME_PARTNER_PROFILE_ID)
  private String partnerProfileId;

  public static final String SERIALIZED_NAME_PRIMARY_CONTACT_ID = "primaryContactId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CONTACT_ID)
  private String primaryContactId;

  public static final String SERIALIZED_NAME_ACTIVE_DIRECTORY_ID = "activeDirectoryId";
  @SerializedName(SERIALIZED_NAME_ACTIVE_DIRECTORY_ID)
  private String activeDirectoryId;

  public static final String SERIALIZED_NAME_IDENTITY_PROVIDER_ACCESS_TOKEN = "identityProviderAccessToken";
  @SerializedName(SERIALIZED_NAME_IDENTITY_PROVIDER_ACCESS_TOKEN)
  private String identityProviderAccessToken;

  public static final String SERIALIZED_NAME_BIRTHDAY = "birthday";
  @SerializedName(SERIALIZED_NAME_BIRTHDAY)
  private OffsetDateTime birthday;

  public ContactDto() {
  }

  public ContactDto(
     String qualifiedName
  ) {
    this();
    this.qualifiedName = qualifiedName;
  }

  public ContactDto id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ContactDto timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  /**
   * Get qualifiedName
   * @return qualifiedName
   */
  @javax.annotation.Nullable
  public String getQualifiedName() {
    return qualifiedName;
  }



  public ContactDto tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public ContactDto type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ContactDto publicName(String publicName) {
    this.publicName = publicName;
    return this;
  }

  /**
   * Get publicName
   * @return publicName
   */
  @javax.annotation.Nullable
  public String getPublicName() {
    return publicName;
  }

  public void setPublicName(String publicName) {
    this.publicName = publicName;
  }


  public ContactDto firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public ContactDto lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public ContactDto jobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
    return this;
  }

  /**
   * Get jobTitle
   * @return jobTitle
   */
  @javax.annotation.Nullable
  public String getJobTitle() {
    return jobTitle;
  }

  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }


  public ContactDto coverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
    return this;
  }

  /**
   * Get coverUrl
   * @return coverUrl
   */
  @javax.annotation.Nullable
  public String getCoverUrl() {
    return coverUrl;
  }

  public void setCoverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
  }


  public ContactDto avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  /**
   * Get avatarUrl
   * @return avatarUrl
   */
  @javax.annotation.Nullable
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }


  public ContactDto countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

  /**
   * Get countryId
   * @return countryId
   */
  @javax.annotation.Nullable
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }


  public ContactDto timezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
    return this;
  }

  /**
   * Get timezoneId
   * @return timezoneId
   */
  @javax.annotation.Nullable
  public String getTimezoneId() {
    return timezoneId;
  }

  public void setTimezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
  }


  public ContactDto languageId(String languageId) {
    this.languageId = languageId;
    return this;
  }

  /**
   * Get languageId
   * @return languageId
   */
  @javax.annotation.Nullable
  public String getLanguageId() {
    return languageId;
  }

  public void setLanguageId(String languageId) {
    this.languageId = languageId;
  }


  public ContactDto socialProfileId(String socialProfileId) {
    this.socialProfileId = socialProfileId;
    return this;
  }

  /**
   * Get socialProfileId
   * @return socialProfileId
   */
  @javax.annotation.Nullable
  public String getSocialProfileId() {
    return socialProfileId;
  }

  public void setSocialProfileId(String socialProfileId) {
    this.socialProfileId = socialProfileId;
  }


  public ContactDto webUrl(String webUrl) {
    this.webUrl = webUrl;
    return this;
  }

  /**
   * Get webUrl
   * @return webUrl
   */
  @javax.annotation.Nullable
  public String getWebUrl() {
    return webUrl;
  }

  public void setWebUrl(String webUrl) {
    this.webUrl = webUrl;
  }


  public ContactDto gitHubUrl(String gitHubUrl) {
    this.gitHubUrl = gitHubUrl;
    return this;
  }

  /**
   * Get gitHubUrl
   * @return gitHubUrl
   */
  @javax.annotation.Nullable
  public String getGitHubUrl() {
    return gitHubUrl;
  }

  public void setGitHubUrl(String gitHubUrl) {
    this.gitHubUrl = gitHubUrl;
  }


  public ContactDto twitchUrl(String twitchUrl) {
    this.twitchUrl = twitchUrl;
    return this;
  }

  /**
   * Get twitchUrl
   * @return twitchUrl
   */
  @javax.annotation.Nullable
  public String getTwitchUrl() {
    return twitchUrl;
  }

  public void setTwitchUrl(String twitchUrl) {
    this.twitchUrl = twitchUrl;
  }


  public ContactDto redditUrl(String redditUrl) {
    this.redditUrl = redditUrl;
    return this;
  }

  /**
   * Get redditUrl
   * @return redditUrl
   */
  @javax.annotation.Nullable
  public String getRedditUrl() {
    return redditUrl;
  }

  public void setRedditUrl(String redditUrl) {
    this.redditUrl = redditUrl;
  }


  public ContactDto tikTokUrl(String tikTokUrl) {
    this.tikTokUrl = tikTokUrl;
    return this;
  }

  /**
   * Get tikTokUrl
   * @return tikTokUrl
   */
  @javax.annotation.Nullable
  public String getTikTokUrl() {
    return tikTokUrl;
  }

  public void setTikTokUrl(String tikTokUrl) {
    this.tikTokUrl = tikTokUrl;
  }


  public ContactDto websiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * Get websiteUrl
   * @return websiteUrl
   */
  @javax.annotation.Nullable
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }


  public ContactDto twitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
    return this;
  }

  /**
   * Get twitterUrl
   * @return twitterUrl
   */
  @javax.annotation.Nullable
  public String getTwitterUrl() {
    return twitterUrl;
  }

  public void setTwitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
  }


  public ContactDto facebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
    return this;
  }

  /**
   * Get facebookUrl
   * @return facebookUrl
   */
  @javax.annotation.Nullable
  public String getFacebookUrl() {
    return facebookUrl;
  }

  public void setFacebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
  }


  public ContactDto youTubeUrl(String youTubeUrl) {
    this.youTubeUrl = youTubeUrl;
    return this;
  }

  /**
   * Get youTubeUrl
   * @return youTubeUrl
   */
  @javax.annotation.Nullable
  public String getYouTubeUrl() {
    return youTubeUrl;
  }

  public void setYouTubeUrl(String youTubeUrl) {
    this.youTubeUrl = youTubeUrl;
  }


  public ContactDto linkedInUrl(String linkedInUrl) {
    this.linkedInUrl = linkedInUrl;
    return this;
  }

  /**
   * Get linkedInUrl
   * @return linkedInUrl
   */
  @javax.annotation.Nullable
  public String getLinkedInUrl() {
    return linkedInUrl;
  }

  public void setLinkedInUrl(String linkedInUrl) {
    this.linkedInUrl = linkedInUrl;
  }


  public ContactDto instagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
    return this;
  }

  /**
   * Get instagramUrl
   * @return instagramUrl
   */
  @javax.annotation.Nullable
  public String getInstagramUrl() {
    return instagramUrl;
  }

  public void setInstagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
  }


  public ContactDto githubUsername(String githubUsername) {
    this.githubUsername = githubUsername;
    return this;
  }

  /**
   * Get githubUsername
   * @return githubUsername
   */
  @javax.annotation.Nullable
  public String getGithubUsername() {
    return githubUsername;
  }

  public void setGithubUsername(String githubUsername) {
    this.githubUsername = githubUsername;
  }


  public ContactDto duns(String duns) {
    this.duns = duns;
    return this;
  }

  /**
   * Get duns
   * @return duns
   */
  @javax.annotation.Nullable
  public String getDuns() {
    return duns;
  }

  public void setDuns(String duns) {
    this.duns = duns;
  }


  public ContactDto taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

  /**
   * Get taxId
   * @return taxId
   */
  @javax.annotation.Nullable
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }


  public ContactDto email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public ContactDto about(String about) {
    this.about = about;
    return this;
  }

  /**
   * Get about
   * @return about
   */
  @javax.annotation.Nullable
  public String getAbout() {
    return about;
  }

  public void setAbout(String about) {
    this.about = about;
  }


  public ContactDto street(String street) {
    this.street = street;
    return this;
  }

  /**
   * Get street
   * @return street
   */
  @javax.annotation.Nullable
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }


  public ContactDto cartId(String cartId) {
    this.cartId = cartId;
    return this;
  }

  /**
   * Get cartId
   * @return cartId
   */
  @javax.annotation.Nullable
  public String getCartId() {
    return cartId;
  }

  public void setCartId(String cartId) {
    this.cartId = cartId;
  }


  public ContactDto cityId(String cityId) {
    this.cityId = cityId;
    return this;
  }

  /**
   * Get cityId
   * @return cityId
   */
  @javax.annotation.Nullable
  public String getCityId() {
    return cityId;
  }

  public void setCityId(String cityId) {
    this.cityId = cityId;
  }


  public ContactDto zipCode(String zipCode) {
    this.zipCode = zipCode;
    return this;
  }

  /**
   * Get zipCode
   * @return zipCode
   */
  @javax.annotation.Nullable
  public String getZipCode() {
    return zipCode;
  }

  public void setZipCode(String zipCode) {
    this.zipCode = zipCode;
  }


  public ContactDto stateId(String stateId) {
    this.stateId = stateId;
    return this;
  }

  /**
   * Get stateId
   * @return stateId
   */
  @javax.annotation.Nullable
  public String getStateId() {
    return stateId;
  }

  public void setStateId(String stateId) {
    this.stateId = stateId;
  }


  public ContactDto walletId(String walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * Get walletId
   * @return walletId
   */
  @javax.annotation.Nullable
  public String getWalletId() {
    return walletId;
  }

  public void setWalletId(String walletId) {
    this.walletId = walletId;
  }


  public ContactDto faxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
    return this;
  }

  /**
   * Get faxNumber
   * @return faxNumber
   */
  @javax.annotation.Nullable
  public String getFaxNumber() {
    return faxNumber;
  }

  public void setFaxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
  }


  public ContactDto postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public ContactDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public ContactDto streetLine1(String streetLine1) {
    this.streetLine1 = streetLine1;
    return this;
  }

  /**
   * Get streetLine1
   * @return streetLine1
   */
  @javax.annotation.Nullable
  public String getStreetLine1() {
    return streetLine1;
  }

  public void setStreetLine1(String streetLine1) {
    this.streetLine1 = streetLine1;
  }


  public ContactDto streetLine2(String streetLine2) {
    this.streetLine2 = streetLine2;
    return this;
  }

  /**
   * Get streetLine2
   * @return streetLine2
   */
  @javax.annotation.Nullable
  public String getStreetLine2() {
    return streetLine2;
  }

  public void setStreetLine2(String streetLine2) {
    this.streetLine2 = streetLine2;
  }


  public ContactDto territoryId(String territoryId) {
    this.territoryId = territoryId;
    return this;
  }

  /**
   * Get territoryId
   * @return territoryId
   */
  @javax.annotation.Nullable
  public String getTerritoryId() {
    return territoryId;
  }

  public void setTerritoryId(String territoryId) {
    this.territoryId = territoryId;
  }


  public ContactDto mobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
    return this;
  }

  /**
   * Get mobilePhone
   * @return mobilePhone
   */
  @javax.annotation.Nullable
  public String getMobilePhone() {
    return mobilePhone;
  }

  public void setMobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
  }


  public ContactDto enrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
    return this;
  }

  /**
   * Get enrollmentId
   * @return enrollmentId
   */
  @javax.annotation.Nullable
  public String getEnrollmentId() {
    return enrollmentId;
  }

  public void setEnrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
  }


  public ContactDto annualRevenue(String annualRevenue) {
    this.annualRevenue = annualRevenue;
    return this;
  }

  /**
   * Get annualRevenue
   * @return annualRevenue
   */
  @javax.annotation.Nullable
  public String getAnnualRevenue() {
    return annualRevenue;
  }

  public void setAnnualRevenue(String annualRevenue) {
    this.annualRevenue = annualRevenue;
  }


  public ContactDto relatedUserId(String relatedUserId) {
    this.relatedUserId = relatedUserId;
    return this;
  }

  /**
   * Get relatedUserId
   * @return relatedUserId
   */
  @javax.annotation.Nullable
  public String getRelatedUserId() {
    return relatedUserId;
  }

  public void setRelatedUserId(String relatedUserId) {
    this.relatedUserId = relatedUserId;
  }


  public ContactDto businessPhone(String businessPhone) {
    this.businessPhone = businessPhone;
    return this;
  }

  /**
   * Get businessPhone
   * @return businessPhone
   */
  @javax.annotation.Nullable
  public String getBusinessPhone() {
    return businessPhone;
  }

  public void setBusinessPhone(String businessPhone) {
    this.businessPhone = businessPhone;
  }


  public ContactDto ownerContactId(String ownerContactId) {
    this.ownerContactId = ownerContactId;
    return this;
  }

  /**
   * Get ownerContactId
   * @return ownerContactId
   */
  @javax.annotation.Nullable
  public String getOwnerContactId() {
    return ownerContactId;
  }

  public void setOwnerContactId(String ownerContactId) {
    this.ownerContactId = ownerContactId;
  }


  public ContactDto relatedTenantId(String relatedTenantId) {
    this.relatedTenantId = relatedTenantId;
    return this;
  }

  /**
   * Get relatedTenantId
   * @return relatedTenantId
   */
  @javax.annotation.Nullable
  public String getRelatedTenantId() {
    return relatedTenantId;
  }

  public void setRelatedTenantId(String relatedTenantId) {
    this.relatedTenantId = relatedTenantId;
  }


  public ContactDto activityFeedId(String activityFeedId) {
    this.activityFeedId = activityFeedId;
    return this;
  }

  /**
   * Get activityFeedId
   * @return activityFeedId
   */
  @javax.annotation.Nullable
  public String getActivityFeedId() {
    return activityFeedId;
  }

  public void setActivityFeedId(String activityFeedId) {
    this.activityFeedId = activityFeedId;
  }


  public ContactDto parentContactId(String parentContactId) {
    this.parentContactId = parentContactId;
    return this;
  }

  /**
   * Get parentContactId
   * @return parentContactId
   */
  @javax.annotation.Nullable
  public String getParentContactId() {
    return parentContactId;
  }

  public void setParentContactId(String parentContactId) {
    this.parentContactId = parentContactId;
  }


  public ContactDto identityProvider(String identityProvider) {
    this.identityProvider = identityProvider;
    return this;
  }

  /**
   * Get identityProvider
   * @return identityProvider
   */
  @javax.annotation.Nullable
  public String getIdentityProvider() {
    return identityProvider;
  }

  public void setIdentityProvider(String identityProvider) {
    this.identityProvider = identityProvider;
  }


  public ContactDto partnerProfileId(String partnerProfileId) {
    this.partnerProfileId = partnerProfileId;
    return this;
  }

  /**
   * Get partnerProfileId
   * @return partnerProfileId
   */
  @javax.annotation.Nullable
  public String getPartnerProfileId() {
    return partnerProfileId;
  }

  public void setPartnerProfileId(String partnerProfileId) {
    this.partnerProfileId = partnerProfileId;
  }


  public ContactDto primaryContactId(String primaryContactId) {
    this.primaryContactId = primaryContactId;
    return this;
  }

  /**
   * Get primaryContactId
   * @return primaryContactId
   */
  @javax.annotation.Nullable
  public String getPrimaryContactId() {
    return primaryContactId;
  }

  public void setPrimaryContactId(String primaryContactId) {
    this.primaryContactId = primaryContactId;
  }


  public ContactDto activeDirectoryId(String activeDirectoryId) {
    this.activeDirectoryId = activeDirectoryId;
    return this;
  }

  /**
   * Get activeDirectoryId
   * @return activeDirectoryId
   */
  @javax.annotation.Nullable
  public String getActiveDirectoryId() {
    return activeDirectoryId;
  }

  public void setActiveDirectoryId(String activeDirectoryId) {
    this.activeDirectoryId = activeDirectoryId;
  }


  public ContactDto identityProviderAccessToken(String identityProviderAccessToken) {
    this.identityProviderAccessToken = identityProviderAccessToken;
    return this;
  }

  /**
   * Get identityProviderAccessToken
   * @return identityProviderAccessToken
   */
  @javax.annotation.Nullable
  public String getIdentityProviderAccessToken() {
    return identityProviderAccessToken;
  }

  public void setIdentityProviderAccessToken(String identityProviderAccessToken) {
    this.identityProviderAccessToken = identityProviderAccessToken;
  }


  public ContactDto birthday(OffsetDateTime birthday) {
    this.birthday = birthday;
    return this;
  }

  /**
   * Get birthday
   * @return birthday
   */
  @javax.annotation.Nullable
  public OffsetDateTime getBirthday() {
    return birthday;
  }

  public void setBirthday(OffsetDateTime birthday) {
    this.birthday = birthday;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactDto contactDto = (ContactDto) o;
    return Objects.equals(this.id, contactDto.id) &&
        Objects.equals(this.timestamp, contactDto.timestamp) &&
        Objects.equals(this.qualifiedName, contactDto.qualifiedName) &&
        Objects.equals(this.tenantId, contactDto.tenantId) &&
        Objects.equals(this.type, contactDto.type) &&
        Objects.equals(this.publicName, contactDto.publicName) &&
        Objects.equals(this.firstName, contactDto.firstName) &&
        Objects.equals(this.lastName, contactDto.lastName) &&
        Objects.equals(this.jobTitle, contactDto.jobTitle) &&
        Objects.equals(this.coverUrl, contactDto.coverUrl) &&
        Objects.equals(this.avatarUrl, contactDto.avatarUrl) &&
        Objects.equals(this.countryId, contactDto.countryId) &&
        Objects.equals(this.timezoneId, contactDto.timezoneId) &&
        Objects.equals(this.languageId, contactDto.languageId) &&
        Objects.equals(this.socialProfileId, contactDto.socialProfileId) &&
        Objects.equals(this.webUrl, contactDto.webUrl) &&
        Objects.equals(this.gitHubUrl, contactDto.gitHubUrl) &&
        Objects.equals(this.twitchUrl, contactDto.twitchUrl) &&
        Objects.equals(this.redditUrl, contactDto.redditUrl) &&
        Objects.equals(this.tikTokUrl, contactDto.tikTokUrl) &&
        Objects.equals(this.websiteUrl, contactDto.websiteUrl) &&
        Objects.equals(this.twitterUrl, contactDto.twitterUrl) &&
        Objects.equals(this.facebookUrl, contactDto.facebookUrl) &&
        Objects.equals(this.youTubeUrl, contactDto.youTubeUrl) &&
        Objects.equals(this.linkedInUrl, contactDto.linkedInUrl) &&
        Objects.equals(this.instagramUrl, contactDto.instagramUrl) &&
        Objects.equals(this.githubUsername, contactDto.githubUsername) &&
        Objects.equals(this.duns, contactDto.duns) &&
        Objects.equals(this.taxId, contactDto.taxId) &&
        Objects.equals(this.email, contactDto.email) &&
        Objects.equals(this.about, contactDto.about) &&
        Objects.equals(this.street, contactDto.street) &&
        Objects.equals(this.cartId, contactDto.cartId) &&
        Objects.equals(this.cityId, contactDto.cityId) &&
        Objects.equals(this.zipCode, contactDto.zipCode) &&
        Objects.equals(this.stateId, contactDto.stateId) &&
        Objects.equals(this.walletId, contactDto.walletId) &&
        Objects.equals(this.faxNumber, contactDto.faxNumber) &&
        Objects.equals(this.postalCode, contactDto.postalCode) &&
        Objects.equals(this.currencyId, contactDto.currencyId) &&
        Objects.equals(this.streetLine1, contactDto.streetLine1) &&
        Objects.equals(this.streetLine2, contactDto.streetLine2) &&
        Objects.equals(this.territoryId, contactDto.territoryId) &&
        Objects.equals(this.mobilePhone, contactDto.mobilePhone) &&
        Objects.equals(this.enrollmentId, contactDto.enrollmentId) &&
        Objects.equals(this.annualRevenue, contactDto.annualRevenue) &&
        Objects.equals(this.relatedUserId, contactDto.relatedUserId) &&
        Objects.equals(this.businessPhone, contactDto.businessPhone) &&
        Objects.equals(this.ownerContactId, contactDto.ownerContactId) &&
        Objects.equals(this.relatedTenantId, contactDto.relatedTenantId) &&
        Objects.equals(this.activityFeedId, contactDto.activityFeedId) &&
        Objects.equals(this.parentContactId, contactDto.parentContactId) &&
        Objects.equals(this.identityProvider, contactDto.identityProvider) &&
        Objects.equals(this.partnerProfileId, contactDto.partnerProfileId) &&
        Objects.equals(this.primaryContactId, contactDto.primaryContactId) &&
        Objects.equals(this.activeDirectoryId, contactDto.activeDirectoryId) &&
        Objects.equals(this.identityProviderAccessToken, contactDto.identityProviderAccessToken) &&
        Objects.equals(this.birthday, contactDto.birthday);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, timestamp, qualifiedName, tenantId, type, publicName, firstName, lastName, jobTitle, coverUrl, avatarUrl, countryId, timezoneId, languageId, socialProfileId, webUrl, gitHubUrl, twitchUrl, redditUrl, tikTokUrl, websiteUrl, twitterUrl, facebookUrl, youTubeUrl, linkedInUrl, instagramUrl, githubUsername, duns, taxId, email, about, street, cartId, cityId, zipCode, stateId, walletId, faxNumber, postalCode, currencyId, streetLine1, streetLine2, territoryId, mobilePhone, enrollmentId, annualRevenue, relatedUserId, businessPhone, ownerContactId, relatedTenantId, activityFeedId, parentContactId, identityProvider, partnerProfileId, primaryContactId, activeDirectoryId, identityProviderAccessToken, birthday);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    qualifiedName: ").append(toIndentedString(qualifiedName)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    publicName: ").append(toIndentedString(publicName)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    coverUrl: ").append(toIndentedString(coverUrl)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    timezoneId: ").append(toIndentedString(timezoneId)).append("\n");
    sb.append("    languageId: ").append(toIndentedString(languageId)).append("\n");
    sb.append("    socialProfileId: ").append(toIndentedString(socialProfileId)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("    gitHubUrl: ").append(toIndentedString(gitHubUrl)).append("\n");
    sb.append("    twitchUrl: ").append(toIndentedString(twitchUrl)).append("\n");
    sb.append("    redditUrl: ").append(toIndentedString(redditUrl)).append("\n");
    sb.append("    tikTokUrl: ").append(toIndentedString(tikTokUrl)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    twitterUrl: ").append(toIndentedString(twitterUrl)).append("\n");
    sb.append("    facebookUrl: ").append(toIndentedString(facebookUrl)).append("\n");
    sb.append("    youTubeUrl: ").append(toIndentedString(youTubeUrl)).append("\n");
    sb.append("    linkedInUrl: ").append(toIndentedString(linkedInUrl)).append("\n");
    sb.append("    instagramUrl: ").append(toIndentedString(instagramUrl)).append("\n");
    sb.append("    githubUsername: ").append(toIndentedString(githubUsername)).append("\n");
    sb.append("    duns: ").append(toIndentedString(duns)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    about: ").append(toIndentedString(about)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    cityId: ").append(toIndentedString(cityId)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("    stateId: ").append(toIndentedString(stateId)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    faxNumber: ").append(toIndentedString(faxNumber)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    streetLine1: ").append(toIndentedString(streetLine1)).append("\n");
    sb.append("    streetLine2: ").append(toIndentedString(streetLine2)).append("\n");
    sb.append("    territoryId: ").append(toIndentedString(territoryId)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    enrollmentId: ").append(toIndentedString(enrollmentId)).append("\n");
    sb.append("    annualRevenue: ").append(toIndentedString(annualRevenue)).append("\n");
    sb.append("    relatedUserId: ").append(toIndentedString(relatedUserId)).append("\n");
    sb.append("    businessPhone: ").append(toIndentedString(businessPhone)).append("\n");
    sb.append("    ownerContactId: ").append(toIndentedString(ownerContactId)).append("\n");
    sb.append("    relatedTenantId: ").append(toIndentedString(relatedTenantId)).append("\n");
    sb.append("    activityFeedId: ").append(toIndentedString(activityFeedId)).append("\n");
    sb.append("    parentContactId: ").append(toIndentedString(parentContactId)).append("\n");
    sb.append("    identityProvider: ").append(toIndentedString(identityProvider)).append("\n");
    sb.append("    partnerProfileId: ").append(toIndentedString(partnerProfileId)).append("\n");
    sb.append("    primaryContactId: ").append(toIndentedString(primaryContactId)).append("\n");
    sb.append("    activeDirectoryId: ").append(toIndentedString(activeDirectoryId)).append("\n");
    sb.append("    identityProviderAccessToken: ").append(toIndentedString(identityProviderAccessToken)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("timestamp");
    openapiFields.add("qualifiedName");
    openapiFields.add("tenantId");
    openapiFields.add("type");
    openapiFields.add("publicName");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("jobTitle");
    openapiFields.add("coverUrl");
    openapiFields.add("avatarUrl");
    openapiFields.add("countryId");
    openapiFields.add("timezoneId");
    openapiFields.add("languageId");
    openapiFields.add("socialProfileId");
    openapiFields.add("webUrl");
    openapiFields.add("gitHubUrl");
    openapiFields.add("twitchUrl");
    openapiFields.add("redditUrl");
    openapiFields.add("tikTokUrl");
    openapiFields.add("websiteUrl");
    openapiFields.add("twitterUrl");
    openapiFields.add("facebookUrl");
    openapiFields.add("youTubeUrl");
    openapiFields.add("linkedInUrl");
    openapiFields.add("instagramUrl");
    openapiFields.add("githubUsername");
    openapiFields.add("duns");
    openapiFields.add("taxId");
    openapiFields.add("email");
    openapiFields.add("about");
    openapiFields.add("street");
    openapiFields.add("cartId");
    openapiFields.add("cityId");
    openapiFields.add("zipCode");
    openapiFields.add("stateId");
    openapiFields.add("walletId");
    openapiFields.add("faxNumber");
    openapiFields.add("postalCode");
    openapiFields.add("currencyId");
    openapiFields.add("streetLine1");
    openapiFields.add("streetLine2");
    openapiFields.add("territoryId");
    openapiFields.add("mobilePhone");
    openapiFields.add("enrollmentId");
    openapiFields.add("annualRevenue");
    openapiFields.add("relatedUserId");
    openapiFields.add("businessPhone");
    openapiFields.add("ownerContactId");
    openapiFields.add("relatedTenantId");
    openapiFields.add("activityFeedId");
    openapiFields.add("parentContactId");
    openapiFields.add("identityProvider");
    openapiFields.add("partnerProfileId");
    openapiFields.add("primaryContactId");
    openapiFields.add("activeDirectoryId");
    openapiFields.add("identityProviderAccessToken");
    openapiFields.add("birthday");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContactDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContactDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContactDto is not found in the empty JSON string", ContactDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContactDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContactDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("qualifiedName") != null && !jsonObj.get("qualifiedName").isJsonNull()) && !jsonObj.get("qualifiedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qualifiedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qualifiedName").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      if ((jsonObj.get("publicName") != null && !jsonObj.get("publicName").isJsonNull()) && !jsonObj.get("publicName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publicName").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonNull()) && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
      if ((jsonObj.get("coverUrl") != null && !jsonObj.get("coverUrl").isJsonNull()) && !jsonObj.get("coverUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverUrl").toString()));
      }
      if ((jsonObj.get("avatarUrl") != null && !jsonObj.get("avatarUrl").isJsonNull()) && !jsonObj.get("avatarUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatarUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatarUrl").toString()));
      }
      if ((jsonObj.get("countryId") != null && !jsonObj.get("countryId").isJsonNull()) && !jsonObj.get("countryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryId").toString()));
      }
      if ((jsonObj.get("timezoneId") != null && !jsonObj.get("timezoneId").isJsonNull()) && !jsonObj.get("timezoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezoneId").toString()));
      }
      if ((jsonObj.get("languageId") != null && !jsonObj.get("languageId").isJsonNull()) && !jsonObj.get("languageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageId").toString()));
      }
      if ((jsonObj.get("socialProfileId") != null && !jsonObj.get("socialProfileId").isJsonNull()) && !jsonObj.get("socialProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `socialProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("socialProfileId").toString()));
      }
      if ((jsonObj.get("webUrl") != null && !jsonObj.get("webUrl").isJsonNull()) && !jsonObj.get("webUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webUrl").toString()));
      }
      if ((jsonObj.get("gitHubUrl") != null && !jsonObj.get("gitHubUrl").isJsonNull()) && !jsonObj.get("gitHubUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gitHubUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gitHubUrl").toString()));
      }
      if ((jsonObj.get("twitchUrl") != null && !jsonObj.get("twitchUrl").isJsonNull()) && !jsonObj.get("twitchUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitchUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitchUrl").toString()));
      }
      if ((jsonObj.get("redditUrl") != null && !jsonObj.get("redditUrl").isJsonNull()) && !jsonObj.get("redditUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redditUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redditUrl").toString()));
      }
      if ((jsonObj.get("tikTokUrl") != null && !jsonObj.get("tikTokUrl").isJsonNull()) && !jsonObj.get("tikTokUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tikTokUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tikTokUrl").toString()));
      }
      if ((jsonObj.get("websiteUrl") != null && !jsonObj.get("websiteUrl").isJsonNull()) && !jsonObj.get("websiteUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `websiteUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("websiteUrl").toString()));
      }
      if ((jsonObj.get("twitterUrl") != null && !jsonObj.get("twitterUrl").isJsonNull()) && !jsonObj.get("twitterUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitterUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitterUrl").toString()));
      }
      if ((jsonObj.get("facebookUrl") != null && !jsonObj.get("facebookUrl").isJsonNull()) && !jsonObj.get("facebookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebookUrl").toString()));
      }
      if ((jsonObj.get("youTubeUrl") != null && !jsonObj.get("youTubeUrl").isJsonNull()) && !jsonObj.get("youTubeUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `youTubeUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("youTubeUrl").toString()));
      }
      if ((jsonObj.get("linkedInUrl") != null && !jsonObj.get("linkedInUrl").isJsonNull()) && !jsonObj.get("linkedInUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedInUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedInUrl").toString()));
      }
      if ((jsonObj.get("instagramUrl") != null && !jsonObj.get("instagramUrl").isJsonNull()) && !jsonObj.get("instagramUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instagramUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instagramUrl").toString()));
      }
      if ((jsonObj.get("githubUsername") != null && !jsonObj.get("githubUsername").isJsonNull()) && !jsonObj.get("githubUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `githubUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("githubUsername").toString()));
      }
      if ((jsonObj.get("duns") != null && !jsonObj.get("duns").isJsonNull()) && !jsonObj.get("duns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `duns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("duns").toString()));
      }
      if ((jsonObj.get("taxId") != null && !jsonObj.get("taxId").isJsonNull()) && !jsonObj.get("taxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxId").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("about") != null && !jsonObj.get("about").isJsonNull()) && !jsonObj.get("about").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `about` to be a primitive type in the JSON string but got `%s`", jsonObj.get("about").toString()));
      }
      if ((jsonObj.get("street") != null && !jsonObj.get("street").isJsonNull()) && !jsonObj.get("street").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street").toString()));
      }
      if ((jsonObj.get("cartId") != null && !jsonObj.get("cartId").isJsonNull()) && !jsonObj.get("cartId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cartId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cartId").toString()));
      }
      if ((jsonObj.get("cityId") != null && !jsonObj.get("cityId").isJsonNull()) && !jsonObj.get("cityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cityId").toString()));
      }
      if ((jsonObj.get("zipCode") != null && !jsonObj.get("zipCode").isJsonNull()) && !jsonObj.get("zipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zipCode").toString()));
      }
      if ((jsonObj.get("stateId") != null && !jsonObj.get("stateId").isJsonNull()) && !jsonObj.get("stateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateId").toString()));
      }
      if ((jsonObj.get("walletId") != null && !jsonObj.get("walletId").isJsonNull()) && !jsonObj.get("walletId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletId").toString()));
      }
      if ((jsonObj.get("faxNumber") != null && !jsonObj.get("faxNumber").isJsonNull()) && !jsonObj.get("faxNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `faxNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("faxNumber").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("currencyId") != null && !jsonObj.get("currencyId").isJsonNull()) && !jsonObj.get("currencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyId").toString()));
      }
      if ((jsonObj.get("streetLine1") != null && !jsonObj.get("streetLine1").isJsonNull()) && !jsonObj.get("streetLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetLine1").toString()));
      }
      if ((jsonObj.get("streetLine2") != null && !jsonObj.get("streetLine2").isJsonNull()) && !jsonObj.get("streetLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetLine2").toString()));
      }
      if ((jsonObj.get("territoryId") != null && !jsonObj.get("territoryId").isJsonNull()) && !jsonObj.get("territoryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `territoryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("territoryId").toString()));
      }
      if ((jsonObj.get("mobilePhone") != null && !jsonObj.get("mobilePhone").isJsonNull()) && !jsonObj.get("mobilePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobilePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobilePhone").toString()));
      }
      if ((jsonObj.get("enrollmentId") != null && !jsonObj.get("enrollmentId").isJsonNull()) && !jsonObj.get("enrollmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enrollmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enrollmentId").toString()));
      }
      if ((jsonObj.get("annualRevenue") != null && !jsonObj.get("annualRevenue").isJsonNull()) && !jsonObj.get("annualRevenue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `annualRevenue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("annualRevenue").toString()));
      }
      if ((jsonObj.get("relatedUserId") != null && !jsonObj.get("relatedUserId").isJsonNull()) && !jsonObj.get("relatedUserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relatedUserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relatedUserId").toString()));
      }
      if ((jsonObj.get("businessPhone") != null && !jsonObj.get("businessPhone").isJsonNull()) && !jsonObj.get("businessPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessPhone").toString()));
      }
      if ((jsonObj.get("ownerContactId") != null && !jsonObj.get("ownerContactId").isJsonNull()) && !jsonObj.get("ownerContactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerContactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerContactId").toString()));
      }
      if ((jsonObj.get("relatedTenantId") != null && !jsonObj.get("relatedTenantId").isJsonNull()) && !jsonObj.get("relatedTenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relatedTenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relatedTenantId").toString()));
      }
      if ((jsonObj.get("activityFeedId") != null && !jsonObj.get("activityFeedId").isJsonNull()) && !jsonObj.get("activityFeedId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityFeedId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityFeedId").toString()));
      }
      if ((jsonObj.get("parentContactId") != null && !jsonObj.get("parentContactId").isJsonNull()) && !jsonObj.get("parentContactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentContactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentContactId").toString()));
      }
      if ((jsonObj.get("identityProvider") != null && !jsonObj.get("identityProvider").isJsonNull()) && !jsonObj.get("identityProvider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identityProvider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identityProvider").toString()));
      }
      if ((jsonObj.get("partnerProfileId") != null && !jsonObj.get("partnerProfileId").isJsonNull()) && !jsonObj.get("partnerProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partnerProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partnerProfileId").toString()));
      }
      if ((jsonObj.get("primaryContactId") != null && !jsonObj.get("primaryContactId").isJsonNull()) && !jsonObj.get("primaryContactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryContactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryContactId").toString()));
      }
      if ((jsonObj.get("activeDirectoryId") != null && !jsonObj.get("activeDirectoryId").isJsonNull()) && !jsonObj.get("activeDirectoryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activeDirectoryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activeDirectoryId").toString()));
      }
      if ((jsonObj.get("identityProviderAccessToken") != null && !jsonObj.get("identityProviderAccessToken").isJsonNull()) && !jsonObj.get("identityProviderAccessToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identityProviderAccessToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identityProviderAccessToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContactDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContactDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContactDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContactDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ContactDto>() {
           @Override
           public void write(JsonWriter out, ContactDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContactDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContactDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContactDto
   * @throws IOException if the JSON string is invalid with respect to ContactDto
   */
  public static ContactDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContactDto.class);
  }

  /**
   * Convert an instance of ContactDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

