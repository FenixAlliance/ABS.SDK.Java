/*
 * QuotesService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * QuoteUpdateDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T15:37:22.246748800-05:00[America/Bogota]", comments = "Generator version: 7.9.0")
public class QuoteUpdateDto {
  public static final String SERIALIZED_NAME_CLOSED = "closed";
  @SerializedName(SERIALIZED_NAME_CLOSED)
  private Boolean closed;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_FOREX_RATE = "forexRate";
  @SerializedName(SERIALIZED_NAME_FOREX_RATE)
  private Double forexRate;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "currencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private String currencyId;

  public static final String SERIALIZED_NAME_PRICE_LIST_ID = "priceListId";
  @SerializedName(SERIALIZED_NAME_PRICE_LIST_ID)
  private String priceListId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENROLLMENT_ID = "enrollmentId";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_ID)
  private String enrollmentId;

  public static final String SERIALIZED_NAME_INDIVIDUAL_ID = "individualId";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_ID)
  private String individualId;

  public static final String SERIALIZED_NAME_PAYMENT_TERM_ID = "paymentTermId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERM_ID)
  private String paymentTermId;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private String organizationId;

  public static final String SERIALIZED_NAME_RECEIVER_TENANT_ID = "receiverTenantId";
  @SerializedName(SERIALIZED_NAME_RECEIVER_TENANT_ID)
  private String receiverTenantId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_BILLING_EMAIL = "billingEmail";
  @SerializedName(SERIALIZED_NAME_BILLING_EMAIL)
  private String billingEmail;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private String countryId;

  public static final String SERIALIZED_NAME_STATE_ID = "stateId";
  @SerializedName(SERIALIZED_NAME_STATE_ID)
  private String stateId;

  public static final String SERIALIZED_NAME_CITY_ID = "cityId";
  @SerializedName(SERIALIZED_NAME_CITY_ID)
  private String cityId;

  public static final String SERIALIZED_NAME_BILLING_LOCATION_ID = "billingLocationId";
  @SerializedName(SERIALIZED_NAME_BILLING_LOCATION_ID)
  private String billingLocationId;

  public static final String SERIALIZED_NAME_SHIPPING_LOCATION_ID = "shippingLocationId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LOCATION_ID)
  private String shippingLocationId;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_ID = "shippingMethodId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_ID)
  private String shippingMethodId;

  public static final String SERIALIZED_NAME_CART_ID = "cartId";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private String cartId;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  public static final String SERIALIZED_NAME_TOTAL_TAXES = "totalTaxes";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAXES)
  private Double totalTaxes;

  /**
   * Gets or Sets quoteStatus
   */
  @JsonAdapter(QuoteStatusEnum.Adapter.class)
  public enum QuoteStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    QuoteStatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static QuoteStatusEnum fromValue(Integer value) {
      for (QuoteStatusEnum b : QuoteStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<QuoteStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final QuoteStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public QuoteStatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return QuoteStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      QuoteStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_QUOTE_STATUS = "quoteStatus";
  @SerializedName(SERIALIZED_NAME_QUOTE_STATUS)
  private QuoteStatusEnum quoteStatus;

  /**
   * Gets or Sets freightTerms
   */
  @JsonAdapter(FreightTermsEnum.Adapter.class)
  public enum FreightTermsEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    FreightTermsEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FreightTermsEnum fromValue(Integer value) {
      for (FreightTermsEnum b : FreightTermsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FreightTermsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FreightTermsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FreightTermsEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return FreightTermsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      FreightTermsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FREIGHT_TERMS = "freightTerms";
  @SerializedName(SERIALIZED_NAME_FREIGHT_TERMS)
  private FreightTermsEnum freightTerms;

  /**
   * Gets or Sets costCalculationMethod
   */
  @JsonAdapter(CostCalculationMethodEnum.Adapter.class)
  public enum CostCalculationMethodEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    CostCalculationMethodEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CostCalculationMethodEnum fromValue(Integer value) {
      for (CostCalculationMethodEnum b : CostCalculationMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CostCalculationMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CostCalculationMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CostCalculationMethodEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return CostCalculationMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      CostCalculationMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_COST_CALCULATION_METHOD = "costCalculationMethod";
  @SerializedName(SERIALIZED_NAME_COST_CALCULATION_METHOD)
  private CostCalculationMethodEnum costCalculationMethod;

  public static final String SERIALIZED_NAME_EFFECTIVE_TO = "effectiveTo";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_TO)
  private OffsetDateTime effectiveTo;

  public static final String SERIALIZED_NAME_EFFECTIVE_FROM = "effectiveFrom";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_FROM)
  private OffsetDateTime effectiveFrom;

  public static final String SERIALIZED_NAME_CUSTOM_TAX_AMOUNT = "customTaxAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TAX_AMOUNT)
  private Double customTaxAmount;

  public static final String SERIALIZED_NAME_CUSTOM_TOTAL_AMOUNT = "customTotalAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TOTAL_AMOUNT)
  private Double customTotalAmount;

  public static final String SERIALIZED_NAME_CUSTOM_DETAIL_AMOUNT = "customDetailAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DETAIL_AMOUNT)
  private Double customDetailAmount;

  public static final String SERIALIZED_NAME_CUSTOM_PROFIT_AMOUNT = "customProfitAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PROFIT_AMOUNT)
  private Double customProfitAmount;

  public static final String SERIALIZED_NAME_CUSTOM_DISCOUNTS_AMOUNT = "customDiscountsAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DISCOUNTS_AMOUNT)
  private Double customDiscountsAmount;

  public static final String SERIALIZED_NAME_CUSTOM_SURCHARGES_AMOUNT = "customSurchargesAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_SURCHARGES_AMOUNT)
  private Double customSurchargesAmount;

  public static final String SERIALIZED_NAME_CUSTOM_SHIPPING_COST_AMOUNT = "customShippingCostAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_SHIPPING_COST_AMOUNT)
  private Double customShippingCostAmount;

  public static final String SERIALIZED_NAME_CUSTOM_SHIPPING_TAX_AMOUNT = "customShippingTaxAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_SHIPPING_TAX_AMOUNT)
  private Double customShippingTaxAmount;

  public static final String SERIALIZED_NAME_CUSTOM_WITHHOLDING_TAX_AMOUNT = "customWithholdingTaxAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_WITHHOLDING_TAX_AMOUNT)
  private Double customWithholdingTaxAmount;

  public QuoteUpdateDto() {
  }

  public QuoteUpdateDto closed(Boolean closed) {
    this.closed = closed;
    return this;
  }

  /**
   * Get closed
   * @return closed
   */
  @javax.annotation.Nullable
  public Boolean getClosed() {
    return closed;
  }

  public void setClosed(Boolean closed) {
    this.closed = closed;
  }


  public QuoteUpdateDto title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public QuoteUpdateDto userId(String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  public QuoteUpdateDto tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public QuoteUpdateDto forexRate(Double forexRate) {
    this.forexRate = forexRate;
    return this;
  }

  /**
   * Get forexRate
   * @return forexRate
   */
  @javax.annotation.Nullable
  public Double getForexRate() {
    return forexRate;
  }

  public void setForexRate(Double forexRate) {
    this.forexRate = forexRate;
  }


  public QuoteUpdateDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public QuoteUpdateDto priceListId(String priceListId) {
    this.priceListId = priceListId;
    return this;
  }

  /**
   * Get priceListId
   * @return priceListId
   */
  @javax.annotation.Nullable
  public String getPriceListId() {
    return priceListId;
  }

  public void setPriceListId(String priceListId) {
    this.priceListId = priceListId;
  }


  public QuoteUpdateDto description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public QuoteUpdateDto enrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
    return this;
  }

  /**
   * Get enrollmentId
   * @return enrollmentId
   */
  @javax.annotation.Nullable
  public String getEnrollmentId() {
    return enrollmentId;
  }

  public void setEnrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
  }


  public QuoteUpdateDto individualId(String individualId) {
    this.individualId = individualId;
    return this;
  }

  /**
   * Get individualId
   * @return individualId
   */
  @javax.annotation.Nullable
  public String getIndividualId() {
    return individualId;
  }

  public void setIndividualId(String individualId) {
    this.individualId = individualId;
  }


  public QuoteUpdateDto paymentTermId(String paymentTermId) {
    this.paymentTermId = paymentTermId;
    return this;
  }

  /**
   * Get paymentTermId
   * @return paymentTermId
   */
  @javax.annotation.Nullable
  public String getPaymentTermId() {
    return paymentTermId;
  }

  public void setPaymentTermId(String paymentTermId) {
    this.paymentTermId = paymentTermId;
  }


  public QuoteUpdateDto organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Get organizationId
   * @return organizationId
   */
  @javax.annotation.Nullable
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }


  public QuoteUpdateDto receiverTenantId(String receiverTenantId) {
    this.receiverTenantId = receiverTenantId;
    return this;
  }

  /**
   * Get receiverTenantId
   * @return receiverTenantId
   */
  @javax.annotation.Nullable
  public String getReceiverTenantId() {
    return receiverTenantId;
  }

  public void setReceiverTenantId(String receiverTenantId) {
    this.receiverTenantId = receiverTenantId;
  }


  public QuoteUpdateDto firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public QuoteUpdateDto lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public QuoteUpdateDto companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public QuoteUpdateDto billingEmail(String billingEmail) {
    this.billingEmail = billingEmail;
    return this;
  }

  /**
   * Get billingEmail
   * @return billingEmail
   */
  @javax.annotation.Nullable
  public String getBillingEmail() {
    return billingEmail;
  }

  public void setBillingEmail(String billingEmail) {
    this.billingEmail = billingEmail;
  }


  public QuoteUpdateDto addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Get addressLine1
   * @return addressLine1
   */
  @javax.annotation.Nullable
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public QuoteUpdateDto addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

  /**
   * Get addressLine2
   * @return addressLine2
   */
  @javax.annotation.Nullable
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public QuoteUpdateDto postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public QuoteUpdateDto countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

  /**
   * Get countryId
   * @return countryId
   */
  @javax.annotation.Nullable
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }


  public QuoteUpdateDto stateId(String stateId) {
    this.stateId = stateId;
    return this;
  }

  /**
   * Get stateId
   * @return stateId
   */
  @javax.annotation.Nullable
  public String getStateId() {
    return stateId;
  }

  public void setStateId(String stateId) {
    this.stateId = stateId;
  }


  public QuoteUpdateDto cityId(String cityId) {
    this.cityId = cityId;
    return this;
  }

  /**
   * Get cityId
   * @return cityId
   */
  @javax.annotation.Nullable
  public String getCityId() {
    return cityId;
  }

  public void setCityId(String cityId) {
    this.cityId = cityId;
  }


  public QuoteUpdateDto billingLocationId(String billingLocationId) {
    this.billingLocationId = billingLocationId;
    return this;
  }

  /**
   * Get billingLocationId
   * @return billingLocationId
   */
  @javax.annotation.Nullable
  public String getBillingLocationId() {
    return billingLocationId;
  }

  public void setBillingLocationId(String billingLocationId) {
    this.billingLocationId = billingLocationId;
  }


  public QuoteUpdateDto shippingLocationId(String shippingLocationId) {
    this.shippingLocationId = shippingLocationId;
    return this;
  }

  /**
   * Get shippingLocationId
   * @return shippingLocationId
   */
  @javax.annotation.Nullable
  public String getShippingLocationId() {
    return shippingLocationId;
  }

  public void setShippingLocationId(String shippingLocationId) {
    this.shippingLocationId = shippingLocationId;
  }


  public QuoteUpdateDto shippingMethodId(String shippingMethodId) {
    this.shippingMethodId = shippingMethodId;
    return this;
  }

  /**
   * Get shippingMethodId
   * @return shippingMethodId
   */
  @javax.annotation.Nullable
  public String getShippingMethodId() {
    return shippingMethodId;
  }

  public void setShippingMethodId(String shippingMethodId) {
    this.shippingMethodId = shippingMethodId;
  }


  public QuoteUpdateDto cartId(String cartId) {
    this.cartId = cartId;
    return this;
  }

  /**
   * Get cartId
   * @return cartId
   */
  @javax.annotation.Nullable
  public String getCartId() {
    return cartId;
  }

  public void setCartId(String cartId) {
    this.cartId = cartId;
  }


  public QuoteUpdateDto total(Double total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nullable
  public Double getTotal() {
    return total;
  }

  public void setTotal(Double total) {
    this.total = total;
  }


  public QuoteUpdateDto totalTaxes(Double totalTaxes) {
    this.totalTaxes = totalTaxes;
    return this;
  }

  /**
   * Get totalTaxes
   * @return totalTaxes
   */
  @javax.annotation.Nullable
  public Double getTotalTaxes() {
    return totalTaxes;
  }

  public void setTotalTaxes(Double totalTaxes) {
    this.totalTaxes = totalTaxes;
  }


  public QuoteUpdateDto quoteStatus(QuoteStatusEnum quoteStatus) {
    this.quoteStatus = quoteStatus;
    return this;
  }

  /**
   * Get quoteStatus
   * @return quoteStatus
   */
  @javax.annotation.Nullable
  public QuoteStatusEnum getQuoteStatus() {
    return quoteStatus;
  }

  public void setQuoteStatus(QuoteStatusEnum quoteStatus) {
    this.quoteStatus = quoteStatus;
  }


  public QuoteUpdateDto freightTerms(FreightTermsEnum freightTerms) {
    this.freightTerms = freightTerms;
    return this;
  }

  /**
   * Get freightTerms
   * @return freightTerms
   */
  @javax.annotation.Nullable
  public FreightTermsEnum getFreightTerms() {
    return freightTerms;
  }

  public void setFreightTerms(FreightTermsEnum freightTerms) {
    this.freightTerms = freightTerms;
  }


  public QuoteUpdateDto costCalculationMethod(CostCalculationMethodEnum costCalculationMethod) {
    this.costCalculationMethod = costCalculationMethod;
    return this;
  }

  /**
   * Get costCalculationMethod
   * @return costCalculationMethod
   */
  @javax.annotation.Nullable
  public CostCalculationMethodEnum getCostCalculationMethod() {
    return costCalculationMethod;
  }

  public void setCostCalculationMethod(CostCalculationMethodEnum costCalculationMethod) {
    this.costCalculationMethod = costCalculationMethod;
  }


  public QuoteUpdateDto effectiveTo(OffsetDateTime effectiveTo) {
    this.effectiveTo = effectiveTo;
    return this;
  }

  /**
   * Get effectiveTo
   * @return effectiveTo
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEffectiveTo() {
    return effectiveTo;
  }

  public void setEffectiveTo(OffsetDateTime effectiveTo) {
    this.effectiveTo = effectiveTo;
  }


  public QuoteUpdateDto effectiveFrom(OffsetDateTime effectiveFrom) {
    this.effectiveFrom = effectiveFrom;
    return this;
  }

  /**
   * Get effectiveFrom
   * @return effectiveFrom
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEffectiveFrom() {
    return effectiveFrom;
  }

  public void setEffectiveFrom(OffsetDateTime effectiveFrom) {
    this.effectiveFrom = effectiveFrom;
  }


  public QuoteUpdateDto customTaxAmount(Double customTaxAmount) {
    this.customTaxAmount = customTaxAmount;
    return this;
  }

  /**
   * Get customTaxAmount
   * @return customTaxAmount
   */
  @javax.annotation.Nullable
  public Double getCustomTaxAmount() {
    return customTaxAmount;
  }

  public void setCustomTaxAmount(Double customTaxAmount) {
    this.customTaxAmount = customTaxAmount;
  }


  public QuoteUpdateDto customTotalAmount(Double customTotalAmount) {
    this.customTotalAmount = customTotalAmount;
    return this;
  }

  /**
   * Get customTotalAmount
   * @return customTotalAmount
   */
  @javax.annotation.Nullable
  public Double getCustomTotalAmount() {
    return customTotalAmount;
  }

  public void setCustomTotalAmount(Double customTotalAmount) {
    this.customTotalAmount = customTotalAmount;
  }


  public QuoteUpdateDto customDetailAmount(Double customDetailAmount) {
    this.customDetailAmount = customDetailAmount;
    return this;
  }

  /**
   * Get customDetailAmount
   * @return customDetailAmount
   */
  @javax.annotation.Nullable
  public Double getCustomDetailAmount() {
    return customDetailAmount;
  }

  public void setCustomDetailAmount(Double customDetailAmount) {
    this.customDetailAmount = customDetailAmount;
  }


  public QuoteUpdateDto customProfitAmount(Double customProfitAmount) {
    this.customProfitAmount = customProfitAmount;
    return this;
  }

  /**
   * Get customProfitAmount
   * @return customProfitAmount
   */
  @javax.annotation.Nullable
  public Double getCustomProfitAmount() {
    return customProfitAmount;
  }

  public void setCustomProfitAmount(Double customProfitAmount) {
    this.customProfitAmount = customProfitAmount;
  }


  public QuoteUpdateDto customDiscountsAmount(Double customDiscountsAmount) {
    this.customDiscountsAmount = customDiscountsAmount;
    return this;
  }

  /**
   * Get customDiscountsAmount
   * @return customDiscountsAmount
   */
  @javax.annotation.Nullable
  public Double getCustomDiscountsAmount() {
    return customDiscountsAmount;
  }

  public void setCustomDiscountsAmount(Double customDiscountsAmount) {
    this.customDiscountsAmount = customDiscountsAmount;
  }


  public QuoteUpdateDto customSurchargesAmount(Double customSurchargesAmount) {
    this.customSurchargesAmount = customSurchargesAmount;
    return this;
  }

  /**
   * Get customSurchargesAmount
   * @return customSurchargesAmount
   */
  @javax.annotation.Nullable
  public Double getCustomSurchargesAmount() {
    return customSurchargesAmount;
  }

  public void setCustomSurchargesAmount(Double customSurchargesAmount) {
    this.customSurchargesAmount = customSurchargesAmount;
  }


  public QuoteUpdateDto customShippingCostAmount(Double customShippingCostAmount) {
    this.customShippingCostAmount = customShippingCostAmount;
    return this;
  }

  /**
   * Get customShippingCostAmount
   * @return customShippingCostAmount
   */
  @javax.annotation.Nullable
  public Double getCustomShippingCostAmount() {
    return customShippingCostAmount;
  }

  public void setCustomShippingCostAmount(Double customShippingCostAmount) {
    this.customShippingCostAmount = customShippingCostAmount;
  }


  public QuoteUpdateDto customShippingTaxAmount(Double customShippingTaxAmount) {
    this.customShippingTaxAmount = customShippingTaxAmount;
    return this;
  }

  /**
   * Get customShippingTaxAmount
   * @return customShippingTaxAmount
   */
  @javax.annotation.Nullable
  public Double getCustomShippingTaxAmount() {
    return customShippingTaxAmount;
  }

  public void setCustomShippingTaxAmount(Double customShippingTaxAmount) {
    this.customShippingTaxAmount = customShippingTaxAmount;
  }


  public QuoteUpdateDto customWithholdingTaxAmount(Double customWithholdingTaxAmount) {
    this.customWithholdingTaxAmount = customWithholdingTaxAmount;
    return this;
  }

  /**
   * Get customWithholdingTaxAmount
   * @return customWithholdingTaxAmount
   */
  @javax.annotation.Nullable
  public Double getCustomWithholdingTaxAmount() {
    return customWithholdingTaxAmount;
  }

  public void setCustomWithholdingTaxAmount(Double customWithholdingTaxAmount) {
    this.customWithholdingTaxAmount = customWithholdingTaxAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteUpdateDto quoteUpdateDto = (QuoteUpdateDto) o;
    return Objects.equals(this.closed, quoteUpdateDto.closed) &&
        Objects.equals(this.title, quoteUpdateDto.title) &&
        Objects.equals(this.userId, quoteUpdateDto.userId) &&
        Objects.equals(this.tenantId, quoteUpdateDto.tenantId) &&
        Objects.equals(this.forexRate, quoteUpdateDto.forexRate) &&
        Objects.equals(this.currencyId, quoteUpdateDto.currencyId) &&
        Objects.equals(this.priceListId, quoteUpdateDto.priceListId) &&
        Objects.equals(this.description, quoteUpdateDto.description) &&
        Objects.equals(this.enrollmentId, quoteUpdateDto.enrollmentId) &&
        Objects.equals(this.individualId, quoteUpdateDto.individualId) &&
        Objects.equals(this.paymentTermId, quoteUpdateDto.paymentTermId) &&
        Objects.equals(this.organizationId, quoteUpdateDto.organizationId) &&
        Objects.equals(this.receiverTenantId, quoteUpdateDto.receiverTenantId) &&
        Objects.equals(this.firstName, quoteUpdateDto.firstName) &&
        Objects.equals(this.lastName, quoteUpdateDto.lastName) &&
        Objects.equals(this.companyName, quoteUpdateDto.companyName) &&
        Objects.equals(this.billingEmail, quoteUpdateDto.billingEmail) &&
        Objects.equals(this.addressLine1, quoteUpdateDto.addressLine1) &&
        Objects.equals(this.addressLine2, quoteUpdateDto.addressLine2) &&
        Objects.equals(this.postalCode, quoteUpdateDto.postalCode) &&
        Objects.equals(this.countryId, quoteUpdateDto.countryId) &&
        Objects.equals(this.stateId, quoteUpdateDto.stateId) &&
        Objects.equals(this.cityId, quoteUpdateDto.cityId) &&
        Objects.equals(this.billingLocationId, quoteUpdateDto.billingLocationId) &&
        Objects.equals(this.shippingLocationId, quoteUpdateDto.shippingLocationId) &&
        Objects.equals(this.shippingMethodId, quoteUpdateDto.shippingMethodId) &&
        Objects.equals(this.cartId, quoteUpdateDto.cartId) &&
        Objects.equals(this.total, quoteUpdateDto.total) &&
        Objects.equals(this.totalTaxes, quoteUpdateDto.totalTaxes) &&
        Objects.equals(this.quoteStatus, quoteUpdateDto.quoteStatus) &&
        Objects.equals(this.freightTerms, quoteUpdateDto.freightTerms) &&
        Objects.equals(this.costCalculationMethod, quoteUpdateDto.costCalculationMethod) &&
        Objects.equals(this.effectiveTo, quoteUpdateDto.effectiveTo) &&
        Objects.equals(this.effectiveFrom, quoteUpdateDto.effectiveFrom) &&
        Objects.equals(this.customTaxAmount, quoteUpdateDto.customTaxAmount) &&
        Objects.equals(this.customTotalAmount, quoteUpdateDto.customTotalAmount) &&
        Objects.equals(this.customDetailAmount, quoteUpdateDto.customDetailAmount) &&
        Objects.equals(this.customProfitAmount, quoteUpdateDto.customProfitAmount) &&
        Objects.equals(this.customDiscountsAmount, quoteUpdateDto.customDiscountsAmount) &&
        Objects.equals(this.customSurchargesAmount, quoteUpdateDto.customSurchargesAmount) &&
        Objects.equals(this.customShippingCostAmount, quoteUpdateDto.customShippingCostAmount) &&
        Objects.equals(this.customShippingTaxAmount, quoteUpdateDto.customShippingTaxAmount) &&
        Objects.equals(this.customWithholdingTaxAmount, quoteUpdateDto.customWithholdingTaxAmount);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(closed, title, userId, tenantId, forexRate, currencyId, priceListId, description, enrollmentId, individualId, paymentTermId, organizationId, receiverTenantId, firstName, lastName, companyName, billingEmail, addressLine1, addressLine2, postalCode, countryId, stateId, cityId, billingLocationId, shippingLocationId, shippingMethodId, cartId, total, totalTaxes, quoteStatus, freightTerms, costCalculationMethod, effectiveTo, effectiveFrom, customTaxAmount, customTotalAmount, customDetailAmount, customProfitAmount, customDiscountsAmount, customSurchargesAmount, customShippingCostAmount, customShippingTaxAmount, customWithholdingTaxAmount);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteUpdateDto {\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    forexRate: ").append(toIndentedString(forexRate)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    priceListId: ").append(toIndentedString(priceListId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enrollmentId: ").append(toIndentedString(enrollmentId)).append("\n");
    sb.append("    individualId: ").append(toIndentedString(individualId)).append("\n");
    sb.append("    paymentTermId: ").append(toIndentedString(paymentTermId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    receiverTenantId: ").append(toIndentedString(receiverTenantId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    billingEmail: ").append(toIndentedString(billingEmail)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    stateId: ").append(toIndentedString(stateId)).append("\n");
    sb.append("    cityId: ").append(toIndentedString(cityId)).append("\n");
    sb.append("    billingLocationId: ").append(toIndentedString(billingLocationId)).append("\n");
    sb.append("    shippingLocationId: ").append(toIndentedString(shippingLocationId)).append("\n");
    sb.append("    shippingMethodId: ").append(toIndentedString(shippingMethodId)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalTaxes: ").append(toIndentedString(totalTaxes)).append("\n");
    sb.append("    quoteStatus: ").append(toIndentedString(quoteStatus)).append("\n");
    sb.append("    freightTerms: ").append(toIndentedString(freightTerms)).append("\n");
    sb.append("    costCalculationMethod: ").append(toIndentedString(costCalculationMethod)).append("\n");
    sb.append("    effectiveTo: ").append(toIndentedString(effectiveTo)).append("\n");
    sb.append("    effectiveFrom: ").append(toIndentedString(effectiveFrom)).append("\n");
    sb.append("    customTaxAmount: ").append(toIndentedString(customTaxAmount)).append("\n");
    sb.append("    customTotalAmount: ").append(toIndentedString(customTotalAmount)).append("\n");
    sb.append("    customDetailAmount: ").append(toIndentedString(customDetailAmount)).append("\n");
    sb.append("    customProfitAmount: ").append(toIndentedString(customProfitAmount)).append("\n");
    sb.append("    customDiscountsAmount: ").append(toIndentedString(customDiscountsAmount)).append("\n");
    sb.append("    customSurchargesAmount: ").append(toIndentedString(customSurchargesAmount)).append("\n");
    sb.append("    customShippingCostAmount: ").append(toIndentedString(customShippingCostAmount)).append("\n");
    sb.append("    customShippingTaxAmount: ").append(toIndentedString(customShippingTaxAmount)).append("\n");
    sb.append("    customWithholdingTaxAmount: ").append(toIndentedString(customWithholdingTaxAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("closed");
    openapiFields.add("title");
    openapiFields.add("userId");
    openapiFields.add("tenantId");
    openapiFields.add("forexRate");
    openapiFields.add("currencyId");
    openapiFields.add("priceListId");
    openapiFields.add("description");
    openapiFields.add("enrollmentId");
    openapiFields.add("individualId");
    openapiFields.add("paymentTermId");
    openapiFields.add("organizationId");
    openapiFields.add("receiverTenantId");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("companyName");
    openapiFields.add("billingEmail");
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("postalCode");
    openapiFields.add("countryId");
    openapiFields.add("stateId");
    openapiFields.add("cityId");
    openapiFields.add("billingLocationId");
    openapiFields.add("shippingLocationId");
    openapiFields.add("shippingMethodId");
    openapiFields.add("cartId");
    openapiFields.add("total");
    openapiFields.add("totalTaxes");
    openapiFields.add("quoteStatus");
    openapiFields.add("freightTerms");
    openapiFields.add("costCalculationMethod");
    openapiFields.add("effectiveTo");
    openapiFields.add("effectiveFrom");
    openapiFields.add("customTaxAmount");
    openapiFields.add("customTotalAmount");
    openapiFields.add("customDetailAmount");
    openapiFields.add("customProfitAmount");
    openapiFields.add("customDiscountsAmount");
    openapiFields.add("customSurchargesAmount");
    openapiFields.add("customShippingCostAmount");
    openapiFields.add("customShippingTaxAmount");
    openapiFields.add("customWithholdingTaxAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuoteUpdateDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuoteUpdateDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuoteUpdateDto is not found in the empty JSON string", QuoteUpdateDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuoteUpdateDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuoteUpdateDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("currencyId") != null && !jsonObj.get("currencyId").isJsonNull()) && !jsonObj.get("currencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyId").toString()));
      }
      if ((jsonObj.get("priceListId") != null && !jsonObj.get("priceListId").isJsonNull()) && !jsonObj.get("priceListId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceListId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceListId").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("enrollmentId") != null && !jsonObj.get("enrollmentId").isJsonNull()) && !jsonObj.get("enrollmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enrollmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enrollmentId").toString()));
      }
      if ((jsonObj.get("individualId") != null && !jsonObj.get("individualId").isJsonNull()) && !jsonObj.get("individualId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `individualId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("individualId").toString()));
      }
      if ((jsonObj.get("paymentTermId") != null && !jsonObj.get("paymentTermId").isJsonNull()) && !jsonObj.get("paymentTermId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentTermId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentTermId").toString()));
      }
      if ((jsonObj.get("organizationId") != null && !jsonObj.get("organizationId").isJsonNull()) && !jsonObj.get("organizationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationId").toString()));
      }
      if ((jsonObj.get("receiverTenantId") != null && !jsonObj.get("receiverTenantId").isJsonNull()) && !jsonObj.get("receiverTenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverTenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverTenantId").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("billingEmail") != null && !jsonObj.get("billingEmail").isJsonNull()) && !jsonObj.get("billingEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingEmail").toString()));
      }
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("countryId") != null && !jsonObj.get("countryId").isJsonNull()) && !jsonObj.get("countryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryId").toString()));
      }
      if ((jsonObj.get("stateId") != null && !jsonObj.get("stateId").isJsonNull()) && !jsonObj.get("stateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateId").toString()));
      }
      if ((jsonObj.get("cityId") != null && !jsonObj.get("cityId").isJsonNull()) && !jsonObj.get("cityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cityId").toString()));
      }
      if ((jsonObj.get("billingLocationId") != null && !jsonObj.get("billingLocationId").isJsonNull()) && !jsonObj.get("billingLocationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingLocationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingLocationId").toString()));
      }
      if ((jsonObj.get("shippingLocationId") != null && !jsonObj.get("shippingLocationId").isJsonNull()) && !jsonObj.get("shippingLocationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingLocationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingLocationId").toString()));
      }
      if ((jsonObj.get("shippingMethodId") != null && !jsonObj.get("shippingMethodId").isJsonNull()) && !jsonObj.get("shippingMethodId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodId").toString()));
      }
      if ((jsonObj.get("cartId") != null && !jsonObj.get("cartId").isJsonNull()) && !jsonObj.get("cartId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cartId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cartId").toString()));
      }
      // validate the optional field `quoteStatus`
      if (jsonObj.get("quoteStatus") != null && !jsonObj.get("quoteStatus").isJsonNull()) {
        QuoteStatusEnum.validateJsonElement(jsonObj.get("quoteStatus"));
      }
      // validate the optional field `freightTerms`
      if (jsonObj.get("freightTerms") != null && !jsonObj.get("freightTerms").isJsonNull()) {
        FreightTermsEnum.validateJsonElement(jsonObj.get("freightTerms"));
      }
      // validate the optional field `costCalculationMethod`
      if (jsonObj.get("costCalculationMethod") != null && !jsonObj.get("costCalculationMethod").isJsonNull()) {
        CostCalculationMethodEnum.validateJsonElement(jsonObj.get("costCalculationMethod"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuoteUpdateDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuoteUpdateDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuoteUpdateDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuoteUpdateDto.class));

       return (TypeAdapter<T>) new TypeAdapter<QuoteUpdateDto>() {
           @Override
           public void write(JsonWriter out, QuoteUpdateDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuoteUpdateDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuoteUpdateDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuoteUpdateDto
   * @throws IOException if the JSON string is invalid with respect to QuoteUpdateDto
   */
  public static QuoteUpdateDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuoteUpdateDto.class);
  }

  /**
   * Convert an instance of QuoteUpdateDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

