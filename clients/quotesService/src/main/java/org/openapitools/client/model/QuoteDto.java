/*
 * QuotesService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Currency;
import org.openapitools.client.model.Money;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * QuoteDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T15:37:22.246748800-05:00[America/Bogota]", comments = "Generator version: 7.9.0")
public class QuoteDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private OffsetDateTime timestamp;

  public static final String SERIALIZED_NAME_CLOSED = "closed";
  @SerializedName(SERIALIZED_NAME_CLOSED)
  private Boolean closed;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private String tenantId;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "currencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private String currencyId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PRICE_LIST_ID = "priceListId";
  @SerializedName(SERIALIZED_NAME_PRICE_LIST_ID)
  private String priceListId;

  public static final String SERIALIZED_NAME_ENROLLMENT_ID = "enrollmentId";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_ID)
  private String enrollmentId;

  public static final String SERIALIZED_NAME_INDIVIDUAL_ID = "individualId";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_ID)
  private String individualId;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private String organizationId;

  public static final String SERIALIZED_NAME_RECEIVER_TENANT_ID = "receiverTenantId";
  @SerializedName(SERIALIZED_NAME_RECEIVER_TENANT_ID)
  private String receiverTenantId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_BILLING_EMAIL = "billingEmail";
  @SerializedName(SERIALIZED_NAME_BILLING_EMAIL)
  private String billingEmail;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private String countryId;

  public static final String SERIALIZED_NAME_STATE_ID = "stateId";
  @SerializedName(SERIALIZED_NAME_STATE_ID)
  private String stateId;

  public static final String SERIALIZED_NAME_CITY_ID = "cityId";
  @SerializedName(SERIALIZED_NAME_CITY_ID)
  private String cityId;

  public static final String SERIALIZED_NAME_CUSTOMER_NOTES = "customerNotes";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NOTES)
  private String customerNotes;

  public static final String SERIALIZED_NAME_FOREX_RATE = "forexRate";
  @SerializedName(SERIALIZED_NAME_FOREX_RATE)
  private Double forexRate;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  public static final String SERIALIZED_NAME_TOTAL_TAXES = "totalTaxes";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAXES)
  private Double totalTaxes;

  public static final String SERIALIZED_NAME_TOTAL_TAX_BASE = "totalTaxBase";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX_BASE)
  private Double totalTaxBase;

  public static final String SERIALIZED_NAME_TOTAL_DISCOUNTS = "totalDiscounts";
  @SerializedName(SERIALIZED_NAME_TOTAL_DISCOUNTS)
  private Double totalDiscounts;

  public static final String SERIALIZED_NAME_TOTAL_SURCHARGES = "totalSurcharges";
  @SerializedName(SERIALIZED_NAME_TOTAL_SURCHARGES)
  private Double totalSurcharges;

  public static final String SERIALIZED_NAME_TOTAL_GLOBAL_DISCOUNTS = "totalGlobalDiscounts";
  @SerializedName(SERIALIZED_NAME_TOTAL_GLOBAL_DISCOUNTS)
  private Double totalGlobalDiscounts;

  public static final String SERIALIZED_NAME_TOTAL_GLOBAL_SURCHARGES = "totalGlobalSurcharges";
  @SerializedName(SERIALIZED_NAME_TOTAL_GLOBAL_SURCHARGES)
  private Double totalGlobalSurcharges;

  public static final String SERIALIZED_NAME_TOTAL_TAXES_IN_USD = "totalTaxesInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAXES_IN_USD)
  private Double totalTaxesInUsd;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT_IN_USD = "totalAmountInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT_IN_USD)
  private Double totalAmountInUsd;

  public static final String SERIALIZED_NAME_TOTAL_PROFIT_IN_USD = "totalProfitInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_PROFIT_IN_USD)
  private Double totalProfitInUsd;

  public static final String SERIALIZED_NAME_TOTAL_TAX_BASE_IN_USD = "totalTaxBaseInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX_BASE_IN_USD)
  private Double totalTaxBaseInUsd;

  public static final String SERIALIZED_NAME_TOTAL_DISCOUNTS_IN_USD = "totalDiscountsInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_DISCOUNTS_IN_USD)
  private Double totalDiscountsInUsd;

  public static final String SERIALIZED_NAME_TOTAL_SURCHARGES_IN_USD = "totalSurchargesInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_SURCHARGES_IN_USD)
  private Double totalSurchargesInUsd;

  public static final String SERIALIZED_NAME_TOTAL_DETAIL_AMOUNT_IN_USD = "totalDetailAmountInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_DETAIL_AMOUNT_IN_USD)
  private Double totalDetailAmountInUsd;

  public static final String SERIALIZED_NAME_TOTAL_GLOBAL_DISCOUNTS_IN_USD = "totalGlobalDiscountsInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_GLOBAL_DISCOUNTS_IN_USD)
  private Double totalGlobalDiscountsInUsd;

  public static final String SERIALIZED_NAME_TOTAL_GLOBAL_SURCHARGES_IN_USD = "totalGlobalSurchargesInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_GLOBAL_SURCHARGES_IN_USD)
  private Double totalGlobalSurchargesInUsd;

  public static final String SERIALIZED_NAME_TOTAL_WITHHOLDING_TAXES_IN_USD = "totalWithholdingTaxesInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_WITHHOLDING_TAXES_IN_USD)
  private Double totalWithholdingTaxesInUsd;

  public static final String SERIALIZED_NAME_TOTAL_SHIPPING_COST_IN_USD = "totalShippingCostInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_SHIPPING_COST_IN_USD)
  private Double totalShippingCostInUsd;

  public static final String SERIALIZED_NAME_TOTAL_SHIPPING_TAXES_IN_USD = "totalShippingTaxesInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_SHIPPING_TAXES_IN_USD)
  private Double totalShippingTaxesInUsd;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private Currency currency;

  public static final String SERIALIZED_NAME_TOTAL_IN_USD = "totalInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_IN_USD)
  private Money totalInUsd;

  public static final String SERIALIZED_NAME_TOTAL_TAX_AMOUNT_IN_USD = "totalTaxAmountInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX_AMOUNT_IN_USD)
  private Money totalTaxAmountInUsd;

  public static final String SERIALIZED_NAME_TOTAL_TAX_BASE_AMOUNT_IN_USD = "totalTaxBaseAmountInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX_BASE_AMOUNT_IN_USD)
  private Money totalTaxBaseAmountInUsd;

  public static final String SERIALIZED_NAME_TOTAL_DISCOUNTS_AMOUNT_IN_USD = "totalDiscountsAmountInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_DISCOUNTS_AMOUNT_IN_USD)
  private Money totalDiscountsAmountInUsd;

  public static final String SERIALIZED_NAME_TOTAL_SURCHARGES_AMOUNT_IN_USD = "totalSurchargesAmountInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_SURCHARGES_AMOUNT_IN_USD)
  private Money totalSurchargesAmountInUsd;

  public static final String SERIALIZED_NAME_TOTAL_GLOBAL_DISCOUNTS_AMOUNT_IN_USD = "totalGlobalDiscountsAmountInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_GLOBAL_DISCOUNTS_AMOUNT_IN_USD)
  private Money totalGlobalDiscountsAmountInUsd;

  public static final String SERIALIZED_NAME_TOTAL_GLOBAL_SURCHARGES_AMOUNT_IN_USD = "totalGlobalSurchargesAmountInUsd";
  @SerializedName(SERIALIZED_NAME_TOTAL_GLOBAL_SURCHARGES_AMOUNT_IN_USD)
  private Money totalGlobalSurchargesAmountInUsd;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT = "totalAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT)
  private Money totalAmount;

  public static final String SERIALIZED_NAME_TOTAL_TAX_AMOUNT = "totalTaxAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX_AMOUNT)
  private Money totalTaxAmount;

  public static final String SERIALIZED_NAME_TOTAL_TAX_BASE_AMOUNT = "totalTaxBaseAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX_BASE_AMOUNT)
  private Money totalTaxBaseAmount;

  public static final String SERIALIZED_NAME_TOTAL_DISCOUNTS_AMOUNT = "totalDiscountsAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_DISCOUNTS_AMOUNT)
  private Money totalDiscountsAmount;

  public static final String SERIALIZED_NAME_TOTAL_SURCHARGES_AMOUNT = "totalSurchargesAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_SURCHARGES_AMOUNT)
  private Money totalSurchargesAmount;

  public static final String SERIALIZED_NAME_TOTAL_GLOBAL_DISCOUNTS_AMOUNT = "totalGlobalDiscountsAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_GLOBAL_DISCOUNTS_AMOUNT)
  private Money totalGlobalDiscountsAmount;

  public static final String SERIALIZED_NAME_TOTAL_GLOBAL_SURCHARGES_AMOUNT = "totalGlobalSurchargesAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_GLOBAL_SURCHARGES_AMOUNT)
  private Money totalGlobalSurchargesAmount;

  public static final String SERIALIZED_NAME_CART_ID = "cartId";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private String cartId;

  public static final String SERIALIZED_NAME_EFFECTIVE_TO = "effectiveTo";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_TO)
  private OffsetDateTime effectiveTo;

  public static final String SERIALIZED_NAME_EFFECTIVE_FROM = "effectiveFrom";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_FROM)
  private OffsetDateTime effectiveFrom;

  /**
   * Gets or Sets quoteStatus
   */
  @JsonAdapter(QuoteStatusEnum.Adapter.class)
  public enum QuoteStatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    QuoteStatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static QuoteStatusEnum fromValue(Integer value) {
      for (QuoteStatusEnum b : QuoteStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<QuoteStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final QuoteStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public QuoteStatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return QuoteStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      QuoteStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_QUOTE_STATUS = "quoteStatus";
  @SerializedName(SERIALIZED_NAME_QUOTE_STATUS)
  private QuoteStatusEnum quoteStatus;

  /**
   * Gets or Sets freightTerms
   */
  @JsonAdapter(FreightTermsEnum.Adapter.class)
  public enum FreightTermsEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    FreightTermsEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FreightTermsEnum fromValue(Integer value) {
      for (FreightTermsEnum b : FreightTermsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FreightTermsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FreightTermsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FreightTermsEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return FreightTermsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      FreightTermsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FREIGHT_TERMS = "freightTerms";
  @SerializedName(SERIALIZED_NAME_FREIGHT_TERMS)
  private FreightTermsEnum freightTerms;

  /**
   * Gets or Sets costCalculationMethod
   */
  @JsonAdapter(CostCalculationMethodEnum.Adapter.class)
  public enum CostCalculationMethodEnum {
    NUMBER_0(0),
    
    NUMBER_1(1);

    private Integer value;

    CostCalculationMethodEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CostCalculationMethodEnum fromValue(Integer value) {
      for (CostCalculationMethodEnum b : CostCalculationMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CostCalculationMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CostCalculationMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CostCalculationMethodEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return CostCalculationMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      CostCalculationMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_COST_CALCULATION_METHOD = "costCalculationMethod";
  @SerializedName(SERIALIZED_NAME_COST_CALCULATION_METHOD)
  private CostCalculationMethodEnum costCalculationMethod;

  public static final String SERIALIZED_NAME_CUSTOM_DISCOUNTS_AMOUNT = "customDiscountsAmount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DISCOUNTS_AMOUNT)
  private Double customDiscountsAmount;

  public QuoteDto() {
  }

  public QuoteDto id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public QuoteDto timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  public QuoteDto closed(Boolean closed) {
    this.closed = closed;
    return this;
  }

  /**
   * Get closed
   * @return closed
   */
  @javax.annotation.Nullable
  public Boolean getClosed() {
    return closed;
  }

  public void setClosed(Boolean closed) {
    this.closed = closed;
  }


  public QuoteDto type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public QuoteDto title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public QuoteDto userId(String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  public QuoteDto tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public QuoteDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public QuoteDto description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public QuoteDto priceListId(String priceListId) {
    this.priceListId = priceListId;
    return this;
  }

  /**
   * Get priceListId
   * @return priceListId
   */
  @javax.annotation.Nullable
  public String getPriceListId() {
    return priceListId;
  }

  public void setPriceListId(String priceListId) {
    this.priceListId = priceListId;
  }


  public QuoteDto enrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
    return this;
  }

  /**
   * Get enrollmentId
   * @return enrollmentId
   */
  @javax.annotation.Nullable
  public String getEnrollmentId() {
    return enrollmentId;
  }

  public void setEnrollmentId(String enrollmentId) {
    this.enrollmentId = enrollmentId;
  }


  public QuoteDto individualId(String individualId) {
    this.individualId = individualId;
    return this;
  }

  /**
   * Get individualId
   * @return individualId
   */
  @javax.annotation.Nullable
  public String getIndividualId() {
    return individualId;
  }

  public void setIndividualId(String individualId) {
    this.individualId = individualId;
  }


  public QuoteDto organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Get organizationId
   * @return organizationId
   */
  @javax.annotation.Nullable
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }


  public QuoteDto receiverTenantId(String receiverTenantId) {
    this.receiverTenantId = receiverTenantId;
    return this;
  }

  /**
   * Get receiverTenantId
   * @return receiverTenantId
   */
  @javax.annotation.Nullable
  public String getReceiverTenantId() {
    return receiverTenantId;
  }

  public void setReceiverTenantId(String receiverTenantId) {
    this.receiverTenantId = receiverTenantId;
  }


  public QuoteDto firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public QuoteDto lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public QuoteDto companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public QuoteDto billingEmail(String billingEmail) {
    this.billingEmail = billingEmail;
    return this;
  }

  /**
   * Get billingEmail
   * @return billingEmail
   */
  @javax.annotation.Nullable
  public String getBillingEmail() {
    return billingEmail;
  }

  public void setBillingEmail(String billingEmail) {
    this.billingEmail = billingEmail;
  }


  public QuoteDto addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Get addressLine1
   * @return addressLine1
   */
  @javax.annotation.Nullable
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public QuoteDto addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

  /**
   * Get addressLine2
   * @return addressLine2
   */
  @javax.annotation.Nullable
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public QuoteDto postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public QuoteDto countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

  /**
   * Get countryId
   * @return countryId
   */
  @javax.annotation.Nullable
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }


  public QuoteDto stateId(String stateId) {
    this.stateId = stateId;
    return this;
  }

  /**
   * Get stateId
   * @return stateId
   */
  @javax.annotation.Nullable
  public String getStateId() {
    return stateId;
  }

  public void setStateId(String stateId) {
    this.stateId = stateId;
  }


  public QuoteDto cityId(String cityId) {
    this.cityId = cityId;
    return this;
  }

  /**
   * Get cityId
   * @return cityId
   */
  @javax.annotation.Nullable
  public String getCityId() {
    return cityId;
  }

  public void setCityId(String cityId) {
    this.cityId = cityId;
  }


  public QuoteDto customerNotes(String customerNotes) {
    this.customerNotes = customerNotes;
    return this;
  }

  /**
   * Get customerNotes
   * @return customerNotes
   */
  @javax.annotation.Nullable
  public String getCustomerNotes() {
    return customerNotes;
  }

  public void setCustomerNotes(String customerNotes) {
    this.customerNotes = customerNotes;
  }


  public QuoteDto forexRate(Double forexRate) {
    this.forexRate = forexRate;
    return this;
  }

  /**
   * Get forexRate
   * @return forexRate
   */
  @javax.annotation.Nullable
  public Double getForexRate() {
    return forexRate;
  }

  public void setForexRate(Double forexRate) {
    this.forexRate = forexRate;
  }


  public QuoteDto total(Double total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nullable
  public Double getTotal() {
    return total;
  }

  public void setTotal(Double total) {
    this.total = total;
  }


  public QuoteDto totalTaxes(Double totalTaxes) {
    this.totalTaxes = totalTaxes;
    return this;
  }

  /**
   * Get totalTaxes
   * @return totalTaxes
   */
  @javax.annotation.Nullable
  public Double getTotalTaxes() {
    return totalTaxes;
  }

  public void setTotalTaxes(Double totalTaxes) {
    this.totalTaxes = totalTaxes;
  }


  public QuoteDto totalTaxBase(Double totalTaxBase) {
    this.totalTaxBase = totalTaxBase;
    return this;
  }

  /**
   * Get totalTaxBase
   * @return totalTaxBase
   */
  @javax.annotation.Nullable
  public Double getTotalTaxBase() {
    return totalTaxBase;
  }

  public void setTotalTaxBase(Double totalTaxBase) {
    this.totalTaxBase = totalTaxBase;
  }


  public QuoteDto totalDiscounts(Double totalDiscounts) {
    this.totalDiscounts = totalDiscounts;
    return this;
  }

  /**
   * Get totalDiscounts
   * @return totalDiscounts
   */
  @javax.annotation.Nullable
  public Double getTotalDiscounts() {
    return totalDiscounts;
  }

  public void setTotalDiscounts(Double totalDiscounts) {
    this.totalDiscounts = totalDiscounts;
  }


  public QuoteDto totalSurcharges(Double totalSurcharges) {
    this.totalSurcharges = totalSurcharges;
    return this;
  }

  /**
   * Get totalSurcharges
   * @return totalSurcharges
   */
  @javax.annotation.Nullable
  public Double getTotalSurcharges() {
    return totalSurcharges;
  }

  public void setTotalSurcharges(Double totalSurcharges) {
    this.totalSurcharges = totalSurcharges;
  }


  public QuoteDto totalGlobalDiscounts(Double totalGlobalDiscounts) {
    this.totalGlobalDiscounts = totalGlobalDiscounts;
    return this;
  }

  /**
   * Get totalGlobalDiscounts
   * @return totalGlobalDiscounts
   */
  @javax.annotation.Nullable
  public Double getTotalGlobalDiscounts() {
    return totalGlobalDiscounts;
  }

  public void setTotalGlobalDiscounts(Double totalGlobalDiscounts) {
    this.totalGlobalDiscounts = totalGlobalDiscounts;
  }


  public QuoteDto totalGlobalSurcharges(Double totalGlobalSurcharges) {
    this.totalGlobalSurcharges = totalGlobalSurcharges;
    return this;
  }

  /**
   * Get totalGlobalSurcharges
   * @return totalGlobalSurcharges
   */
  @javax.annotation.Nullable
  public Double getTotalGlobalSurcharges() {
    return totalGlobalSurcharges;
  }

  public void setTotalGlobalSurcharges(Double totalGlobalSurcharges) {
    this.totalGlobalSurcharges = totalGlobalSurcharges;
  }


  public QuoteDto totalTaxesInUsd(Double totalTaxesInUsd) {
    this.totalTaxesInUsd = totalTaxesInUsd;
    return this;
  }

  /**
   * Get totalTaxesInUsd
   * @return totalTaxesInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalTaxesInUsd() {
    return totalTaxesInUsd;
  }

  public void setTotalTaxesInUsd(Double totalTaxesInUsd) {
    this.totalTaxesInUsd = totalTaxesInUsd;
  }


  public QuoteDto totalAmountInUsd(Double totalAmountInUsd) {
    this.totalAmountInUsd = totalAmountInUsd;
    return this;
  }

  /**
   * Get totalAmountInUsd
   * @return totalAmountInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalAmountInUsd() {
    return totalAmountInUsd;
  }

  public void setTotalAmountInUsd(Double totalAmountInUsd) {
    this.totalAmountInUsd = totalAmountInUsd;
  }


  public QuoteDto totalProfitInUsd(Double totalProfitInUsd) {
    this.totalProfitInUsd = totalProfitInUsd;
    return this;
  }

  /**
   * Get totalProfitInUsd
   * @return totalProfitInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalProfitInUsd() {
    return totalProfitInUsd;
  }

  public void setTotalProfitInUsd(Double totalProfitInUsd) {
    this.totalProfitInUsd = totalProfitInUsd;
  }


  public QuoteDto totalTaxBaseInUsd(Double totalTaxBaseInUsd) {
    this.totalTaxBaseInUsd = totalTaxBaseInUsd;
    return this;
  }

  /**
   * Get totalTaxBaseInUsd
   * @return totalTaxBaseInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalTaxBaseInUsd() {
    return totalTaxBaseInUsd;
  }

  public void setTotalTaxBaseInUsd(Double totalTaxBaseInUsd) {
    this.totalTaxBaseInUsd = totalTaxBaseInUsd;
  }


  public QuoteDto totalDiscountsInUsd(Double totalDiscountsInUsd) {
    this.totalDiscountsInUsd = totalDiscountsInUsd;
    return this;
  }

  /**
   * Get totalDiscountsInUsd
   * @return totalDiscountsInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalDiscountsInUsd() {
    return totalDiscountsInUsd;
  }

  public void setTotalDiscountsInUsd(Double totalDiscountsInUsd) {
    this.totalDiscountsInUsd = totalDiscountsInUsd;
  }


  public QuoteDto totalSurchargesInUsd(Double totalSurchargesInUsd) {
    this.totalSurchargesInUsd = totalSurchargesInUsd;
    return this;
  }

  /**
   * Get totalSurchargesInUsd
   * @return totalSurchargesInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalSurchargesInUsd() {
    return totalSurchargesInUsd;
  }

  public void setTotalSurchargesInUsd(Double totalSurchargesInUsd) {
    this.totalSurchargesInUsd = totalSurchargesInUsd;
  }


  public QuoteDto totalDetailAmountInUsd(Double totalDetailAmountInUsd) {
    this.totalDetailAmountInUsd = totalDetailAmountInUsd;
    return this;
  }

  /**
   * Get totalDetailAmountInUsd
   * @return totalDetailAmountInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalDetailAmountInUsd() {
    return totalDetailAmountInUsd;
  }

  public void setTotalDetailAmountInUsd(Double totalDetailAmountInUsd) {
    this.totalDetailAmountInUsd = totalDetailAmountInUsd;
  }


  public QuoteDto totalGlobalDiscountsInUsd(Double totalGlobalDiscountsInUsd) {
    this.totalGlobalDiscountsInUsd = totalGlobalDiscountsInUsd;
    return this;
  }

  /**
   * Get totalGlobalDiscountsInUsd
   * @return totalGlobalDiscountsInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalGlobalDiscountsInUsd() {
    return totalGlobalDiscountsInUsd;
  }

  public void setTotalGlobalDiscountsInUsd(Double totalGlobalDiscountsInUsd) {
    this.totalGlobalDiscountsInUsd = totalGlobalDiscountsInUsd;
  }


  public QuoteDto totalGlobalSurchargesInUsd(Double totalGlobalSurchargesInUsd) {
    this.totalGlobalSurchargesInUsd = totalGlobalSurchargesInUsd;
    return this;
  }

  /**
   * Get totalGlobalSurchargesInUsd
   * @return totalGlobalSurchargesInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalGlobalSurchargesInUsd() {
    return totalGlobalSurchargesInUsd;
  }

  public void setTotalGlobalSurchargesInUsd(Double totalGlobalSurchargesInUsd) {
    this.totalGlobalSurchargesInUsd = totalGlobalSurchargesInUsd;
  }


  public QuoteDto totalWithholdingTaxesInUsd(Double totalWithholdingTaxesInUsd) {
    this.totalWithholdingTaxesInUsd = totalWithholdingTaxesInUsd;
    return this;
  }

  /**
   * Get totalWithholdingTaxesInUsd
   * @return totalWithholdingTaxesInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalWithholdingTaxesInUsd() {
    return totalWithholdingTaxesInUsd;
  }

  public void setTotalWithholdingTaxesInUsd(Double totalWithholdingTaxesInUsd) {
    this.totalWithholdingTaxesInUsd = totalWithholdingTaxesInUsd;
  }


  public QuoteDto totalShippingCostInUsd(Double totalShippingCostInUsd) {
    this.totalShippingCostInUsd = totalShippingCostInUsd;
    return this;
  }

  /**
   * Get totalShippingCostInUsd
   * @return totalShippingCostInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalShippingCostInUsd() {
    return totalShippingCostInUsd;
  }

  public void setTotalShippingCostInUsd(Double totalShippingCostInUsd) {
    this.totalShippingCostInUsd = totalShippingCostInUsd;
  }


  public QuoteDto totalShippingTaxesInUsd(Double totalShippingTaxesInUsd) {
    this.totalShippingTaxesInUsd = totalShippingTaxesInUsd;
    return this;
  }

  /**
   * Get totalShippingTaxesInUsd
   * @return totalShippingTaxesInUsd
   */
  @javax.annotation.Nullable
  public Double getTotalShippingTaxesInUsd() {
    return totalShippingTaxesInUsd;
  }

  public void setTotalShippingTaxesInUsd(Double totalShippingTaxesInUsd) {
    this.totalShippingTaxesInUsd = totalShippingTaxesInUsd;
  }


  public QuoteDto currency(Currency currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  public QuoteDto totalInUsd(Money totalInUsd) {
    this.totalInUsd = totalInUsd;
    return this;
  }

  /**
   * Get totalInUsd
   * @return totalInUsd
   */
  @javax.annotation.Nullable
  public Money getTotalInUsd() {
    return totalInUsd;
  }

  public void setTotalInUsd(Money totalInUsd) {
    this.totalInUsd = totalInUsd;
  }


  public QuoteDto totalTaxAmountInUsd(Money totalTaxAmountInUsd) {
    this.totalTaxAmountInUsd = totalTaxAmountInUsd;
    return this;
  }

  /**
   * Get totalTaxAmountInUsd
   * @return totalTaxAmountInUsd
   */
  @javax.annotation.Nullable
  public Money getTotalTaxAmountInUsd() {
    return totalTaxAmountInUsd;
  }

  public void setTotalTaxAmountInUsd(Money totalTaxAmountInUsd) {
    this.totalTaxAmountInUsd = totalTaxAmountInUsd;
  }


  public QuoteDto totalTaxBaseAmountInUsd(Money totalTaxBaseAmountInUsd) {
    this.totalTaxBaseAmountInUsd = totalTaxBaseAmountInUsd;
    return this;
  }

  /**
   * Get totalTaxBaseAmountInUsd
   * @return totalTaxBaseAmountInUsd
   */
  @javax.annotation.Nullable
  public Money getTotalTaxBaseAmountInUsd() {
    return totalTaxBaseAmountInUsd;
  }

  public void setTotalTaxBaseAmountInUsd(Money totalTaxBaseAmountInUsd) {
    this.totalTaxBaseAmountInUsd = totalTaxBaseAmountInUsd;
  }


  public QuoteDto totalDiscountsAmountInUsd(Money totalDiscountsAmountInUsd) {
    this.totalDiscountsAmountInUsd = totalDiscountsAmountInUsd;
    return this;
  }

  /**
   * Get totalDiscountsAmountInUsd
   * @return totalDiscountsAmountInUsd
   */
  @javax.annotation.Nullable
  public Money getTotalDiscountsAmountInUsd() {
    return totalDiscountsAmountInUsd;
  }

  public void setTotalDiscountsAmountInUsd(Money totalDiscountsAmountInUsd) {
    this.totalDiscountsAmountInUsd = totalDiscountsAmountInUsd;
  }


  public QuoteDto totalSurchargesAmountInUsd(Money totalSurchargesAmountInUsd) {
    this.totalSurchargesAmountInUsd = totalSurchargesAmountInUsd;
    return this;
  }

  /**
   * Get totalSurchargesAmountInUsd
   * @return totalSurchargesAmountInUsd
   */
  @javax.annotation.Nullable
  public Money getTotalSurchargesAmountInUsd() {
    return totalSurchargesAmountInUsd;
  }

  public void setTotalSurchargesAmountInUsd(Money totalSurchargesAmountInUsd) {
    this.totalSurchargesAmountInUsd = totalSurchargesAmountInUsd;
  }


  public QuoteDto totalGlobalDiscountsAmountInUsd(Money totalGlobalDiscountsAmountInUsd) {
    this.totalGlobalDiscountsAmountInUsd = totalGlobalDiscountsAmountInUsd;
    return this;
  }

  /**
   * Get totalGlobalDiscountsAmountInUsd
   * @return totalGlobalDiscountsAmountInUsd
   */
  @javax.annotation.Nullable
  public Money getTotalGlobalDiscountsAmountInUsd() {
    return totalGlobalDiscountsAmountInUsd;
  }

  public void setTotalGlobalDiscountsAmountInUsd(Money totalGlobalDiscountsAmountInUsd) {
    this.totalGlobalDiscountsAmountInUsd = totalGlobalDiscountsAmountInUsd;
  }


  public QuoteDto totalGlobalSurchargesAmountInUsd(Money totalGlobalSurchargesAmountInUsd) {
    this.totalGlobalSurchargesAmountInUsd = totalGlobalSurchargesAmountInUsd;
    return this;
  }

  /**
   * Get totalGlobalSurchargesAmountInUsd
   * @return totalGlobalSurchargesAmountInUsd
   */
  @javax.annotation.Nullable
  public Money getTotalGlobalSurchargesAmountInUsd() {
    return totalGlobalSurchargesAmountInUsd;
  }

  public void setTotalGlobalSurchargesAmountInUsd(Money totalGlobalSurchargesAmountInUsd) {
    this.totalGlobalSurchargesAmountInUsd = totalGlobalSurchargesAmountInUsd;
  }


  public QuoteDto totalAmount(Money totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Get totalAmount
   * @return totalAmount
   */
  @javax.annotation.Nullable
  public Money getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(Money totalAmount) {
    this.totalAmount = totalAmount;
  }


  public QuoteDto totalTaxAmount(Money totalTaxAmount) {
    this.totalTaxAmount = totalTaxAmount;
    return this;
  }

  /**
   * Get totalTaxAmount
   * @return totalTaxAmount
   */
  @javax.annotation.Nullable
  public Money getTotalTaxAmount() {
    return totalTaxAmount;
  }

  public void setTotalTaxAmount(Money totalTaxAmount) {
    this.totalTaxAmount = totalTaxAmount;
  }


  public QuoteDto totalTaxBaseAmount(Money totalTaxBaseAmount) {
    this.totalTaxBaseAmount = totalTaxBaseAmount;
    return this;
  }

  /**
   * Get totalTaxBaseAmount
   * @return totalTaxBaseAmount
   */
  @javax.annotation.Nullable
  public Money getTotalTaxBaseAmount() {
    return totalTaxBaseAmount;
  }

  public void setTotalTaxBaseAmount(Money totalTaxBaseAmount) {
    this.totalTaxBaseAmount = totalTaxBaseAmount;
  }


  public QuoteDto totalDiscountsAmount(Money totalDiscountsAmount) {
    this.totalDiscountsAmount = totalDiscountsAmount;
    return this;
  }

  /**
   * Get totalDiscountsAmount
   * @return totalDiscountsAmount
   */
  @javax.annotation.Nullable
  public Money getTotalDiscountsAmount() {
    return totalDiscountsAmount;
  }

  public void setTotalDiscountsAmount(Money totalDiscountsAmount) {
    this.totalDiscountsAmount = totalDiscountsAmount;
  }


  public QuoteDto totalSurchargesAmount(Money totalSurchargesAmount) {
    this.totalSurchargesAmount = totalSurchargesAmount;
    return this;
  }

  /**
   * Get totalSurchargesAmount
   * @return totalSurchargesAmount
   */
  @javax.annotation.Nullable
  public Money getTotalSurchargesAmount() {
    return totalSurchargesAmount;
  }

  public void setTotalSurchargesAmount(Money totalSurchargesAmount) {
    this.totalSurchargesAmount = totalSurchargesAmount;
  }


  public QuoteDto totalGlobalDiscountsAmount(Money totalGlobalDiscountsAmount) {
    this.totalGlobalDiscountsAmount = totalGlobalDiscountsAmount;
    return this;
  }

  /**
   * Get totalGlobalDiscountsAmount
   * @return totalGlobalDiscountsAmount
   */
  @javax.annotation.Nullable
  public Money getTotalGlobalDiscountsAmount() {
    return totalGlobalDiscountsAmount;
  }

  public void setTotalGlobalDiscountsAmount(Money totalGlobalDiscountsAmount) {
    this.totalGlobalDiscountsAmount = totalGlobalDiscountsAmount;
  }


  public QuoteDto totalGlobalSurchargesAmount(Money totalGlobalSurchargesAmount) {
    this.totalGlobalSurchargesAmount = totalGlobalSurchargesAmount;
    return this;
  }

  /**
   * Get totalGlobalSurchargesAmount
   * @return totalGlobalSurchargesAmount
   */
  @javax.annotation.Nullable
  public Money getTotalGlobalSurchargesAmount() {
    return totalGlobalSurchargesAmount;
  }

  public void setTotalGlobalSurchargesAmount(Money totalGlobalSurchargesAmount) {
    this.totalGlobalSurchargesAmount = totalGlobalSurchargesAmount;
  }


  public QuoteDto cartId(String cartId) {
    this.cartId = cartId;
    return this;
  }

  /**
   * Get cartId
   * @return cartId
   */
  @javax.annotation.Nullable
  public String getCartId() {
    return cartId;
  }

  public void setCartId(String cartId) {
    this.cartId = cartId;
  }


  public QuoteDto effectiveTo(OffsetDateTime effectiveTo) {
    this.effectiveTo = effectiveTo;
    return this;
  }

  /**
   * Get effectiveTo
   * @return effectiveTo
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEffectiveTo() {
    return effectiveTo;
  }

  public void setEffectiveTo(OffsetDateTime effectiveTo) {
    this.effectiveTo = effectiveTo;
  }


  public QuoteDto effectiveFrom(OffsetDateTime effectiveFrom) {
    this.effectiveFrom = effectiveFrom;
    return this;
  }

  /**
   * Get effectiveFrom
   * @return effectiveFrom
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEffectiveFrom() {
    return effectiveFrom;
  }

  public void setEffectiveFrom(OffsetDateTime effectiveFrom) {
    this.effectiveFrom = effectiveFrom;
  }


  public QuoteDto quoteStatus(QuoteStatusEnum quoteStatus) {
    this.quoteStatus = quoteStatus;
    return this;
  }

  /**
   * Get quoteStatus
   * @return quoteStatus
   */
  @javax.annotation.Nullable
  public QuoteStatusEnum getQuoteStatus() {
    return quoteStatus;
  }

  public void setQuoteStatus(QuoteStatusEnum quoteStatus) {
    this.quoteStatus = quoteStatus;
  }


  public QuoteDto freightTerms(FreightTermsEnum freightTerms) {
    this.freightTerms = freightTerms;
    return this;
  }

  /**
   * Get freightTerms
   * @return freightTerms
   */
  @javax.annotation.Nullable
  public FreightTermsEnum getFreightTerms() {
    return freightTerms;
  }

  public void setFreightTerms(FreightTermsEnum freightTerms) {
    this.freightTerms = freightTerms;
  }


  public QuoteDto costCalculationMethod(CostCalculationMethodEnum costCalculationMethod) {
    this.costCalculationMethod = costCalculationMethod;
    return this;
  }

  /**
   * Get costCalculationMethod
   * @return costCalculationMethod
   */
  @javax.annotation.Nullable
  public CostCalculationMethodEnum getCostCalculationMethod() {
    return costCalculationMethod;
  }

  public void setCostCalculationMethod(CostCalculationMethodEnum costCalculationMethod) {
    this.costCalculationMethod = costCalculationMethod;
  }


  public QuoteDto customDiscountsAmount(Double customDiscountsAmount) {
    this.customDiscountsAmount = customDiscountsAmount;
    return this;
  }

  /**
   * Get customDiscountsAmount
   * @return customDiscountsAmount
   */
  @javax.annotation.Nullable
  public Double getCustomDiscountsAmount() {
    return customDiscountsAmount;
  }

  public void setCustomDiscountsAmount(Double customDiscountsAmount) {
    this.customDiscountsAmount = customDiscountsAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDto quoteDto = (QuoteDto) o;
    return Objects.equals(this.id, quoteDto.id) &&
        Objects.equals(this.timestamp, quoteDto.timestamp) &&
        Objects.equals(this.closed, quoteDto.closed) &&
        Objects.equals(this.type, quoteDto.type) &&
        Objects.equals(this.title, quoteDto.title) &&
        Objects.equals(this.userId, quoteDto.userId) &&
        Objects.equals(this.tenantId, quoteDto.tenantId) &&
        Objects.equals(this.currencyId, quoteDto.currencyId) &&
        Objects.equals(this.description, quoteDto.description) &&
        Objects.equals(this.priceListId, quoteDto.priceListId) &&
        Objects.equals(this.enrollmentId, quoteDto.enrollmentId) &&
        Objects.equals(this.individualId, quoteDto.individualId) &&
        Objects.equals(this.organizationId, quoteDto.organizationId) &&
        Objects.equals(this.receiverTenantId, quoteDto.receiverTenantId) &&
        Objects.equals(this.firstName, quoteDto.firstName) &&
        Objects.equals(this.lastName, quoteDto.lastName) &&
        Objects.equals(this.companyName, quoteDto.companyName) &&
        Objects.equals(this.billingEmail, quoteDto.billingEmail) &&
        Objects.equals(this.addressLine1, quoteDto.addressLine1) &&
        Objects.equals(this.addressLine2, quoteDto.addressLine2) &&
        Objects.equals(this.postalCode, quoteDto.postalCode) &&
        Objects.equals(this.countryId, quoteDto.countryId) &&
        Objects.equals(this.stateId, quoteDto.stateId) &&
        Objects.equals(this.cityId, quoteDto.cityId) &&
        Objects.equals(this.customerNotes, quoteDto.customerNotes) &&
        Objects.equals(this.forexRate, quoteDto.forexRate) &&
        Objects.equals(this.total, quoteDto.total) &&
        Objects.equals(this.totalTaxes, quoteDto.totalTaxes) &&
        Objects.equals(this.totalTaxBase, quoteDto.totalTaxBase) &&
        Objects.equals(this.totalDiscounts, quoteDto.totalDiscounts) &&
        Objects.equals(this.totalSurcharges, quoteDto.totalSurcharges) &&
        Objects.equals(this.totalGlobalDiscounts, quoteDto.totalGlobalDiscounts) &&
        Objects.equals(this.totalGlobalSurcharges, quoteDto.totalGlobalSurcharges) &&
        Objects.equals(this.totalTaxesInUsd, quoteDto.totalTaxesInUsd) &&
        Objects.equals(this.totalAmountInUsd, quoteDto.totalAmountInUsd) &&
        Objects.equals(this.totalProfitInUsd, quoteDto.totalProfitInUsd) &&
        Objects.equals(this.totalTaxBaseInUsd, quoteDto.totalTaxBaseInUsd) &&
        Objects.equals(this.totalDiscountsInUsd, quoteDto.totalDiscountsInUsd) &&
        Objects.equals(this.totalSurchargesInUsd, quoteDto.totalSurchargesInUsd) &&
        Objects.equals(this.totalDetailAmountInUsd, quoteDto.totalDetailAmountInUsd) &&
        Objects.equals(this.totalGlobalDiscountsInUsd, quoteDto.totalGlobalDiscountsInUsd) &&
        Objects.equals(this.totalGlobalSurchargesInUsd, quoteDto.totalGlobalSurchargesInUsd) &&
        Objects.equals(this.totalWithholdingTaxesInUsd, quoteDto.totalWithholdingTaxesInUsd) &&
        Objects.equals(this.totalShippingCostInUsd, quoteDto.totalShippingCostInUsd) &&
        Objects.equals(this.totalShippingTaxesInUsd, quoteDto.totalShippingTaxesInUsd) &&
        Objects.equals(this.currency, quoteDto.currency) &&
        Objects.equals(this.totalInUsd, quoteDto.totalInUsd) &&
        Objects.equals(this.totalTaxAmountInUsd, quoteDto.totalTaxAmountInUsd) &&
        Objects.equals(this.totalTaxBaseAmountInUsd, quoteDto.totalTaxBaseAmountInUsd) &&
        Objects.equals(this.totalDiscountsAmountInUsd, quoteDto.totalDiscountsAmountInUsd) &&
        Objects.equals(this.totalSurchargesAmountInUsd, quoteDto.totalSurchargesAmountInUsd) &&
        Objects.equals(this.totalGlobalDiscountsAmountInUsd, quoteDto.totalGlobalDiscountsAmountInUsd) &&
        Objects.equals(this.totalGlobalSurchargesAmountInUsd, quoteDto.totalGlobalSurchargesAmountInUsd) &&
        Objects.equals(this.totalAmount, quoteDto.totalAmount) &&
        Objects.equals(this.totalTaxAmount, quoteDto.totalTaxAmount) &&
        Objects.equals(this.totalTaxBaseAmount, quoteDto.totalTaxBaseAmount) &&
        Objects.equals(this.totalDiscountsAmount, quoteDto.totalDiscountsAmount) &&
        Objects.equals(this.totalSurchargesAmount, quoteDto.totalSurchargesAmount) &&
        Objects.equals(this.totalGlobalDiscountsAmount, quoteDto.totalGlobalDiscountsAmount) &&
        Objects.equals(this.totalGlobalSurchargesAmount, quoteDto.totalGlobalSurchargesAmount) &&
        Objects.equals(this.cartId, quoteDto.cartId) &&
        Objects.equals(this.effectiveTo, quoteDto.effectiveTo) &&
        Objects.equals(this.effectiveFrom, quoteDto.effectiveFrom) &&
        Objects.equals(this.quoteStatus, quoteDto.quoteStatus) &&
        Objects.equals(this.freightTerms, quoteDto.freightTerms) &&
        Objects.equals(this.costCalculationMethod, quoteDto.costCalculationMethod) &&
        Objects.equals(this.customDiscountsAmount, quoteDto.customDiscountsAmount);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, timestamp, closed, type, title, userId, tenantId, currencyId, description, priceListId, enrollmentId, individualId, organizationId, receiverTenantId, firstName, lastName, companyName, billingEmail, addressLine1, addressLine2, postalCode, countryId, stateId, cityId, customerNotes, forexRate, total, totalTaxes, totalTaxBase, totalDiscounts, totalSurcharges, totalGlobalDiscounts, totalGlobalSurcharges, totalTaxesInUsd, totalAmountInUsd, totalProfitInUsd, totalTaxBaseInUsd, totalDiscountsInUsd, totalSurchargesInUsd, totalDetailAmountInUsd, totalGlobalDiscountsInUsd, totalGlobalSurchargesInUsd, totalWithholdingTaxesInUsd, totalShippingCostInUsd, totalShippingTaxesInUsd, currency, totalInUsd, totalTaxAmountInUsd, totalTaxBaseAmountInUsd, totalDiscountsAmountInUsd, totalSurchargesAmountInUsd, totalGlobalDiscountsAmountInUsd, totalGlobalSurchargesAmountInUsd, totalAmount, totalTaxAmount, totalTaxBaseAmount, totalDiscountsAmount, totalSurchargesAmount, totalGlobalDiscountsAmount, totalGlobalSurchargesAmount, cartId, effectiveTo, effectiveFrom, quoteStatus, freightTerms, costCalculationMethod, customDiscountsAmount);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    priceListId: ").append(toIndentedString(priceListId)).append("\n");
    sb.append("    enrollmentId: ").append(toIndentedString(enrollmentId)).append("\n");
    sb.append("    individualId: ").append(toIndentedString(individualId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    receiverTenantId: ").append(toIndentedString(receiverTenantId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    billingEmail: ").append(toIndentedString(billingEmail)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    stateId: ").append(toIndentedString(stateId)).append("\n");
    sb.append("    cityId: ").append(toIndentedString(cityId)).append("\n");
    sb.append("    customerNotes: ").append(toIndentedString(customerNotes)).append("\n");
    sb.append("    forexRate: ").append(toIndentedString(forexRate)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalTaxes: ").append(toIndentedString(totalTaxes)).append("\n");
    sb.append("    totalTaxBase: ").append(toIndentedString(totalTaxBase)).append("\n");
    sb.append("    totalDiscounts: ").append(toIndentedString(totalDiscounts)).append("\n");
    sb.append("    totalSurcharges: ").append(toIndentedString(totalSurcharges)).append("\n");
    sb.append("    totalGlobalDiscounts: ").append(toIndentedString(totalGlobalDiscounts)).append("\n");
    sb.append("    totalGlobalSurcharges: ").append(toIndentedString(totalGlobalSurcharges)).append("\n");
    sb.append("    totalTaxesInUsd: ").append(toIndentedString(totalTaxesInUsd)).append("\n");
    sb.append("    totalAmountInUsd: ").append(toIndentedString(totalAmountInUsd)).append("\n");
    sb.append("    totalProfitInUsd: ").append(toIndentedString(totalProfitInUsd)).append("\n");
    sb.append("    totalTaxBaseInUsd: ").append(toIndentedString(totalTaxBaseInUsd)).append("\n");
    sb.append("    totalDiscountsInUsd: ").append(toIndentedString(totalDiscountsInUsd)).append("\n");
    sb.append("    totalSurchargesInUsd: ").append(toIndentedString(totalSurchargesInUsd)).append("\n");
    sb.append("    totalDetailAmountInUsd: ").append(toIndentedString(totalDetailAmountInUsd)).append("\n");
    sb.append("    totalGlobalDiscountsInUsd: ").append(toIndentedString(totalGlobalDiscountsInUsd)).append("\n");
    sb.append("    totalGlobalSurchargesInUsd: ").append(toIndentedString(totalGlobalSurchargesInUsd)).append("\n");
    sb.append("    totalWithholdingTaxesInUsd: ").append(toIndentedString(totalWithholdingTaxesInUsd)).append("\n");
    sb.append("    totalShippingCostInUsd: ").append(toIndentedString(totalShippingCostInUsd)).append("\n");
    sb.append("    totalShippingTaxesInUsd: ").append(toIndentedString(totalShippingTaxesInUsd)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    totalInUsd: ").append(toIndentedString(totalInUsd)).append("\n");
    sb.append("    totalTaxAmountInUsd: ").append(toIndentedString(totalTaxAmountInUsd)).append("\n");
    sb.append("    totalTaxBaseAmountInUsd: ").append(toIndentedString(totalTaxBaseAmountInUsd)).append("\n");
    sb.append("    totalDiscountsAmountInUsd: ").append(toIndentedString(totalDiscountsAmountInUsd)).append("\n");
    sb.append("    totalSurchargesAmountInUsd: ").append(toIndentedString(totalSurchargesAmountInUsd)).append("\n");
    sb.append("    totalGlobalDiscountsAmountInUsd: ").append(toIndentedString(totalGlobalDiscountsAmountInUsd)).append("\n");
    sb.append("    totalGlobalSurchargesAmountInUsd: ").append(toIndentedString(totalGlobalSurchargesAmountInUsd)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    totalTaxAmount: ").append(toIndentedString(totalTaxAmount)).append("\n");
    sb.append("    totalTaxBaseAmount: ").append(toIndentedString(totalTaxBaseAmount)).append("\n");
    sb.append("    totalDiscountsAmount: ").append(toIndentedString(totalDiscountsAmount)).append("\n");
    sb.append("    totalSurchargesAmount: ").append(toIndentedString(totalSurchargesAmount)).append("\n");
    sb.append("    totalGlobalDiscountsAmount: ").append(toIndentedString(totalGlobalDiscountsAmount)).append("\n");
    sb.append("    totalGlobalSurchargesAmount: ").append(toIndentedString(totalGlobalSurchargesAmount)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    effectiveTo: ").append(toIndentedString(effectiveTo)).append("\n");
    sb.append("    effectiveFrom: ").append(toIndentedString(effectiveFrom)).append("\n");
    sb.append("    quoteStatus: ").append(toIndentedString(quoteStatus)).append("\n");
    sb.append("    freightTerms: ").append(toIndentedString(freightTerms)).append("\n");
    sb.append("    costCalculationMethod: ").append(toIndentedString(costCalculationMethod)).append("\n");
    sb.append("    customDiscountsAmount: ").append(toIndentedString(customDiscountsAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("timestamp");
    openapiFields.add("closed");
    openapiFields.add("type");
    openapiFields.add("title");
    openapiFields.add("userId");
    openapiFields.add("tenantId");
    openapiFields.add("currencyId");
    openapiFields.add("description");
    openapiFields.add("priceListId");
    openapiFields.add("enrollmentId");
    openapiFields.add("individualId");
    openapiFields.add("organizationId");
    openapiFields.add("receiverTenantId");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("companyName");
    openapiFields.add("billingEmail");
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("postalCode");
    openapiFields.add("countryId");
    openapiFields.add("stateId");
    openapiFields.add("cityId");
    openapiFields.add("customerNotes");
    openapiFields.add("forexRate");
    openapiFields.add("total");
    openapiFields.add("totalTaxes");
    openapiFields.add("totalTaxBase");
    openapiFields.add("totalDiscounts");
    openapiFields.add("totalSurcharges");
    openapiFields.add("totalGlobalDiscounts");
    openapiFields.add("totalGlobalSurcharges");
    openapiFields.add("totalTaxesInUsd");
    openapiFields.add("totalAmountInUsd");
    openapiFields.add("totalProfitInUsd");
    openapiFields.add("totalTaxBaseInUsd");
    openapiFields.add("totalDiscountsInUsd");
    openapiFields.add("totalSurchargesInUsd");
    openapiFields.add("totalDetailAmountInUsd");
    openapiFields.add("totalGlobalDiscountsInUsd");
    openapiFields.add("totalGlobalSurchargesInUsd");
    openapiFields.add("totalWithholdingTaxesInUsd");
    openapiFields.add("totalShippingCostInUsd");
    openapiFields.add("totalShippingTaxesInUsd");
    openapiFields.add("currency");
    openapiFields.add("totalInUsd");
    openapiFields.add("totalTaxAmountInUsd");
    openapiFields.add("totalTaxBaseAmountInUsd");
    openapiFields.add("totalDiscountsAmountInUsd");
    openapiFields.add("totalSurchargesAmountInUsd");
    openapiFields.add("totalGlobalDiscountsAmountInUsd");
    openapiFields.add("totalGlobalSurchargesAmountInUsd");
    openapiFields.add("totalAmount");
    openapiFields.add("totalTaxAmount");
    openapiFields.add("totalTaxBaseAmount");
    openapiFields.add("totalDiscountsAmount");
    openapiFields.add("totalSurchargesAmount");
    openapiFields.add("totalGlobalDiscountsAmount");
    openapiFields.add("totalGlobalSurchargesAmount");
    openapiFields.add("cartId");
    openapiFields.add("effectiveTo");
    openapiFields.add("effectiveFrom");
    openapiFields.add("quoteStatus");
    openapiFields.add("freightTerms");
    openapiFields.add("costCalculationMethod");
    openapiFields.add("customDiscountsAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuoteDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuoteDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuoteDto is not found in the empty JSON string", QuoteDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuoteDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuoteDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("tenantId") != null && !jsonObj.get("tenantId").isJsonNull()) && !jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("currencyId") != null && !jsonObj.get("currencyId").isJsonNull()) && !jsonObj.get("currencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyId").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("priceListId") != null && !jsonObj.get("priceListId").isJsonNull()) && !jsonObj.get("priceListId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceListId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceListId").toString()));
      }
      if ((jsonObj.get("enrollmentId") != null && !jsonObj.get("enrollmentId").isJsonNull()) && !jsonObj.get("enrollmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enrollmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enrollmentId").toString()));
      }
      if ((jsonObj.get("individualId") != null && !jsonObj.get("individualId").isJsonNull()) && !jsonObj.get("individualId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `individualId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("individualId").toString()));
      }
      if ((jsonObj.get("organizationId") != null && !jsonObj.get("organizationId").isJsonNull()) && !jsonObj.get("organizationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationId").toString()));
      }
      if ((jsonObj.get("receiverTenantId") != null && !jsonObj.get("receiverTenantId").isJsonNull()) && !jsonObj.get("receiverTenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiverTenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiverTenantId").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("billingEmail") != null && !jsonObj.get("billingEmail").isJsonNull()) && !jsonObj.get("billingEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingEmail").toString()));
      }
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("countryId") != null && !jsonObj.get("countryId").isJsonNull()) && !jsonObj.get("countryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryId").toString()));
      }
      if ((jsonObj.get("stateId") != null && !jsonObj.get("stateId").isJsonNull()) && !jsonObj.get("stateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateId").toString()));
      }
      if ((jsonObj.get("cityId") != null && !jsonObj.get("cityId").isJsonNull()) && !jsonObj.get("cityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cityId").toString()));
      }
      if ((jsonObj.get("customerNotes") != null && !jsonObj.get("customerNotes").isJsonNull()) && !jsonObj.get("customerNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerNotes").toString()));
      }
      // validate the optional field `currency`
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) {
        Currency.validateJsonElement(jsonObj.get("currency"));
      }
      // validate the optional field `totalInUsd`
      if (jsonObj.get("totalInUsd") != null && !jsonObj.get("totalInUsd").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalInUsd"));
      }
      // validate the optional field `totalTaxAmountInUsd`
      if (jsonObj.get("totalTaxAmountInUsd") != null && !jsonObj.get("totalTaxAmountInUsd").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalTaxAmountInUsd"));
      }
      // validate the optional field `totalTaxBaseAmountInUsd`
      if (jsonObj.get("totalTaxBaseAmountInUsd") != null && !jsonObj.get("totalTaxBaseAmountInUsd").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalTaxBaseAmountInUsd"));
      }
      // validate the optional field `totalDiscountsAmountInUsd`
      if (jsonObj.get("totalDiscountsAmountInUsd") != null && !jsonObj.get("totalDiscountsAmountInUsd").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalDiscountsAmountInUsd"));
      }
      // validate the optional field `totalSurchargesAmountInUsd`
      if (jsonObj.get("totalSurchargesAmountInUsd") != null && !jsonObj.get("totalSurchargesAmountInUsd").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalSurchargesAmountInUsd"));
      }
      // validate the optional field `totalGlobalDiscountsAmountInUsd`
      if (jsonObj.get("totalGlobalDiscountsAmountInUsd") != null && !jsonObj.get("totalGlobalDiscountsAmountInUsd").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalGlobalDiscountsAmountInUsd"));
      }
      // validate the optional field `totalGlobalSurchargesAmountInUsd`
      if (jsonObj.get("totalGlobalSurchargesAmountInUsd") != null && !jsonObj.get("totalGlobalSurchargesAmountInUsd").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalGlobalSurchargesAmountInUsd"));
      }
      // validate the optional field `totalAmount`
      if (jsonObj.get("totalAmount") != null && !jsonObj.get("totalAmount").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalAmount"));
      }
      // validate the optional field `totalTaxAmount`
      if (jsonObj.get("totalTaxAmount") != null && !jsonObj.get("totalTaxAmount").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalTaxAmount"));
      }
      // validate the optional field `totalTaxBaseAmount`
      if (jsonObj.get("totalTaxBaseAmount") != null && !jsonObj.get("totalTaxBaseAmount").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalTaxBaseAmount"));
      }
      // validate the optional field `totalDiscountsAmount`
      if (jsonObj.get("totalDiscountsAmount") != null && !jsonObj.get("totalDiscountsAmount").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalDiscountsAmount"));
      }
      // validate the optional field `totalSurchargesAmount`
      if (jsonObj.get("totalSurchargesAmount") != null && !jsonObj.get("totalSurchargesAmount").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalSurchargesAmount"));
      }
      // validate the optional field `totalGlobalDiscountsAmount`
      if (jsonObj.get("totalGlobalDiscountsAmount") != null && !jsonObj.get("totalGlobalDiscountsAmount").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalGlobalDiscountsAmount"));
      }
      // validate the optional field `totalGlobalSurchargesAmount`
      if (jsonObj.get("totalGlobalSurchargesAmount") != null && !jsonObj.get("totalGlobalSurchargesAmount").isJsonNull()) {
        Money.validateJsonElement(jsonObj.get("totalGlobalSurchargesAmount"));
      }
      if ((jsonObj.get("cartId") != null && !jsonObj.get("cartId").isJsonNull()) && !jsonObj.get("cartId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cartId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cartId").toString()));
      }
      // validate the optional field `quoteStatus`
      if (jsonObj.get("quoteStatus") != null && !jsonObj.get("quoteStatus").isJsonNull()) {
        QuoteStatusEnum.validateJsonElement(jsonObj.get("quoteStatus"));
      }
      // validate the optional field `freightTerms`
      if (jsonObj.get("freightTerms") != null && !jsonObj.get("freightTerms").isJsonNull()) {
        FreightTermsEnum.validateJsonElement(jsonObj.get("freightTerms"));
      }
      // validate the optional field `costCalculationMethod`
      if (jsonObj.get("costCalculationMethod") != null && !jsonObj.get("costCalculationMethod").isJsonNull()) {
        CostCalculationMethodEnum.validateJsonElement(jsonObj.get("costCalculationMethod"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuoteDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuoteDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuoteDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuoteDto.class));

       return (TypeAdapter<T>) new TypeAdapter<QuoteDto>() {
           @Override
           public void write(JsonWriter out, QuoteDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuoteDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuoteDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuoteDto
   * @throws IOException if the JSON string is invalid with respect to QuoteDto
   */
  public static QuoteDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuoteDto.class);
  }

  /**
   * Convert an instance of QuoteDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

