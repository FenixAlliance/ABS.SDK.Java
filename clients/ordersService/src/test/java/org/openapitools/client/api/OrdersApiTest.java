/*
 * OrdersService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.ExtendedOrderDtoListEnvelope;
import org.openapitools.client.model.Int32Envelope;
import org.openapitools.client.model.OrderCreateDto;
import org.openapitools.client.model.OrderDtoEnvelope;
import org.openapitools.client.model.OrderDtoListEnvelope;
import org.openapitools.client.model.OrderLineCreateDto;
import org.openapitools.client.model.OrderLineDtoEnvelope;
import org.openapitools.client.model.OrderLineDtoListEnvelope;
import org.openapitools.client.model.OrderLineUpdateDto;
import org.openapitools.client.model.OrderUpdateDto;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrdersApi
 */
@Disabled
public class OrdersApiTest {

    private final OrdersApi api = new OrdersApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersCountGetTest() throws ApiException {
        UUID tenantId = null;
        Int32Envelope response = api.apiV2OrdersServiceOrdersCountGet(tenantId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersExtendedGetTest() throws ApiException {
        UUID tenantId = null;
        ExtendedOrderDtoListEnvelope response = api.apiV2OrdersServiceOrdersExtendedGet(tenantId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdCalculatePutTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        EmptyEnvelope response = api.apiV2OrdersServiceOrdersOrderIdCalculatePut(tenantId, orderId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        EmptyEnvelope response = api.apiV2OrdersServiceOrdersOrderIdDelete(tenantId, orderId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdLinesCountGetTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        Int32Envelope response = api.apiV2OrdersServiceOrdersOrderIdLinesCountGet(tenantId, orderId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdLinesGetTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        UUID itemId = null;
        OrderLineDtoListEnvelope response = api.apiV2OrdersServiceOrdersOrderIdLinesGet(tenantId, orderId, itemId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdLinesOrderLineIdCalculatePutTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        UUID orderLineId = null;
        EmptyEnvelope response = api.apiV2OrdersServiceOrdersOrderIdLinesOrderLineIdCalculatePut(tenantId, orderId, orderLineId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdLinesOrderLineIdDeleteTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        UUID orderLineId = null;
        EmptyEnvelope response = api.apiV2OrdersServiceOrdersOrderIdLinesOrderLineIdDelete(tenantId, orderId, orderLineId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdLinesOrderLineIdGetTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        UUID orderLineId = null;
        OrderLineDtoEnvelope response = api.apiV2OrdersServiceOrdersOrderIdLinesOrderLineIdGet(tenantId, orderId, orderLineId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdLinesOrderLineIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        UUID orderLineId = null;
        OrderLineUpdateDto orderLineUpdateDto = null;
        EmptyEnvelope response = api.apiV2OrdersServiceOrdersOrderIdLinesOrderLineIdPut(tenantId, orderId, orderLineId, orderLineUpdateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdLinesPostTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        OrderLineCreateDto orderLineCreateDto = null;
        EmptyEnvelope response = api.apiV2OrdersServiceOrdersOrderIdLinesPost(tenantId, orderId, orderLineCreateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersOrderIdPutTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        OrderUpdateDto orderUpdateDto = null;
        EmptyEnvelope response = api.apiV2OrdersServiceOrdersOrderIdPut(tenantId, orderId, orderUpdateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersPostTest() throws ApiException {
        UUID tenantId = null;
        OrderCreateDto orderCreateDto = null;
        EmptyEnvelope response = api.apiV2OrdersServiceOrdersPost(tenantId, orderCreateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2OrdersServiceOrdersSubmitCartPostTest() throws ApiException {
        UUID cartId = null;
        OrderDtoEnvelope response = api.apiV2OrdersServiceOrdersSubmitCartPost(cartId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrderAsyncTest() throws ApiException {
        UUID tenantId = null;
        UUID orderId = null;
        OrderDtoEnvelope response = api.getOrderAsync(tenantId, orderId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrdersAsyncTest() throws ApiException {
        UUID tenantId = null;
        OrderDtoListEnvelope response = api.getOrdersAsync(tenantId);
        // TODO: test validations
    }

}
