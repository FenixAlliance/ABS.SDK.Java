/*
 * WalletsService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TenantDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T15:38:29.301949300-05:00[America/Bogota]", comments = "Generator version: 7.9.0")
public class TenantDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private OffsetDateTime timestamp;

  public static final String SERIALIZED_NAME_QUALIFIED_NAME = "qualifiedName";
  @SerializedName(SERIALIZED_NAME_QUALIFIED_NAME)
  private String qualifiedName;

  public static final String SERIALIZED_NAME_TAX_ID = "taxId";
  @SerializedName(SERIALIZED_NAME_TAX_ID)
  private String taxId;

  public static final String SERIALIZED_NAME_ABOUT = "about";
  @SerializedName(SERIALIZED_NAME_ABOUT)
  private String about;

  public static final String SERIALIZED_NAME_WALLET_ID = "walletId";
  @SerializedName(SERIALIZED_NAME_WALLET_ID)
  private String walletId;

  public static final String SERIALIZED_NAME_SOCIAL_FEED_ID = "socialFeedId";
  @SerializedName(SERIALIZED_NAME_SOCIAL_FEED_ID)
  private String socialFeedId;

  public static final String SERIALIZED_NAME_BUSINESS_INDUSTRY_ID = "businessIndustryId";
  @SerializedName(SERIALIZED_NAME_BUSINESS_INDUSTRY_ID)
  private String businessIndustryId;

  public static final String SERIALIZED_NAME_BUSINESS_SEGMENT_ID = "businessSegmentId";
  @SerializedName(SERIALIZED_NAME_BUSINESS_SEGMENT_ID)
  private String businessSegmentId;

  public static final String SERIALIZED_NAME_SOCIAL_PROFILE_ID = "socialProfileId";
  @SerializedName(SERIALIZED_NAME_SOCIAL_PROFILE_ID)
  private String socialProfileId;

  public static final String SERIALIZED_NAME_LANGUAGE_ID = "languageId";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_ID)
  private String languageId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DUNS = "duns";
  @SerializedName(SERIALIZED_NAME_DUNS)
  private String duns;

  public static final String SERIALIZED_NAME_SLOGAN = "slogan";
  @SerializedName(SERIALIZED_NAME_SLOGAN)
  private String slogan;

  public static final String SERIALIZED_NAME_LEGAL_NAME = "legalName";
  @SerializedName(SERIALIZED_NAME_LEGAL_NAME)
  private String legalName;

  public static final String SERIALIZED_NAME_COVER_URL = "coverUrl";
  @SerializedName(SERIALIZED_NAME_COVER_URL)
  private String coverUrl;

  public static final String SERIALIZED_NAME_AVATAR_URL = "avatarUrl";
  @SerializedName(SERIALIZED_NAME_AVATAR_URL)
  private String avatarUrl;

  public static final String SERIALIZED_NAME_CART_ID = "cartId";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private String cartId;

  public static final String SERIALIZED_NAME_CURRENCY_ID = "currencyId";
  @SerializedName(SERIALIZED_NAME_CURRENCY_ID)
  private String currencyId;

  public static final String SERIALIZED_NAME_TIMEZONE_ID = "timezoneId";
  @SerializedName(SERIALIZED_NAME_TIMEZONE_ID)
  private String timezoneId;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private String countryId;

  public static final String SERIALIZED_NAME_STATE_ID = "stateId";
  @SerializedName(SERIALIZED_NAME_STATE_ID)
  private String stateId;

  public static final String SERIALIZED_NAME_CITY_ID = "cityId";
  @SerializedName(SERIALIZED_NAME_CITY_ID)
  private String cityId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_WEB_URL = "webUrl";
  @SerializedName(SERIALIZED_NAME_WEB_URL)
  private String webUrl;

  public static final String SERIALIZED_NAME_FACEBOOK_URL = "facebookUrl";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_URL)
  private String facebookUrl;

  public static final String SERIALIZED_NAME_TWITTER_URL = "twitterUrl";
  @SerializedName(SERIALIZED_NAME_TWITTER_URL)
  private String twitterUrl;

  public static final String SERIALIZED_NAME_GIT_HUB_URL = "gitHubUrl";
  @SerializedName(SERIALIZED_NAME_GIT_HUB_URL)
  private String gitHubUrl;

  public static final String SERIALIZED_NAME_LINKED_IN_URL = "linkedInUrl";
  @SerializedName(SERIALIZED_NAME_LINKED_IN_URL)
  private String linkedInUrl;

  public static final String SERIALIZED_NAME_INSTAGRAM_URL = "instagramUrl";
  @SerializedName(SERIALIZED_NAME_INSTAGRAM_URL)
  private String instagramUrl;

  public static final String SERIALIZED_NAME_YOU_TUBE_URL = "youTubeUrl";
  @SerializedName(SERIALIZED_NAME_YOU_TUBE_URL)
  private String youTubeUrl;

  public static final String SERIALIZED_NAME_WHATS_APP_NUMBER = "whatsAppNumber";
  @SerializedName(SERIALIZED_NAME_WHATS_APP_NUMBER)
  private String whatsAppNumber;

  public static final String SERIALIZED_NAME_SUPPORT_PHONE_NUMBER = "supportPhoneNumber";
  @SerializedName(SERIALIZED_NAME_SUPPORT_PHONE_NUMBER)
  private String supportPhoneNumber;

  public static final String SERIALIZED_NAME_VERIFIED = "verified";
  @SerializedName(SERIALIZED_NAME_VERIFIED)
  private Boolean verified;

  public static final String SERIALIZED_NAME_BUSINESS_NAME = "businessName";
  @SerializedName(SERIALIZED_NAME_BUSINESS_NAME)
  private String businessName;

  public static final String SERIALIZED_NAME_BUSINESS_LEGAL_NAME = "businessLegalName";
  @SerializedName(SERIALIZED_NAME_BUSINESS_LEGAL_NAME)
  private String businessLegalName;

  public static final String SERIALIZED_NAME_TWITTER_USERNAME = "twitterUsername";
  @SerializedName(SERIALIZED_NAME_TWITTER_USERNAME)
  private String twitterUsername;

  public TenantDto() {
  }

  public TenantDto(
     String qualifiedName, 
     String businessName, 
     String businessLegalName
  ) {
    this();
    this.qualifiedName = qualifiedName;
    this.businessName = businessName;
    this.businessLegalName = businessLegalName;
  }

  public TenantDto id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TenantDto timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  /**
   * Get qualifiedName
   * @return qualifiedName
   */
  @javax.annotation.Nullable
  public String getQualifiedName() {
    return qualifiedName;
  }



  public TenantDto taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

  /**
   * Get taxId
   * @return taxId
   */
  @javax.annotation.Nullable
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }


  public TenantDto about(String about) {
    this.about = about;
    return this;
  }

  /**
   * Get about
   * @return about
   */
  @javax.annotation.Nullable
  public String getAbout() {
    return about;
  }

  public void setAbout(String about) {
    this.about = about;
  }


  public TenantDto walletId(String walletId) {
    this.walletId = walletId;
    return this;
  }

  /**
   * Get walletId
   * @return walletId
   */
  @javax.annotation.Nullable
  public String getWalletId() {
    return walletId;
  }

  public void setWalletId(String walletId) {
    this.walletId = walletId;
  }


  public TenantDto socialFeedId(String socialFeedId) {
    this.socialFeedId = socialFeedId;
    return this;
  }

  /**
   * Get socialFeedId
   * @return socialFeedId
   */
  @javax.annotation.Nullable
  public String getSocialFeedId() {
    return socialFeedId;
  }

  public void setSocialFeedId(String socialFeedId) {
    this.socialFeedId = socialFeedId;
  }


  public TenantDto businessIndustryId(String businessIndustryId) {
    this.businessIndustryId = businessIndustryId;
    return this;
  }

  /**
   * Get businessIndustryId
   * @return businessIndustryId
   */
  @javax.annotation.Nullable
  public String getBusinessIndustryId() {
    return businessIndustryId;
  }

  public void setBusinessIndustryId(String businessIndustryId) {
    this.businessIndustryId = businessIndustryId;
  }


  public TenantDto businessSegmentId(String businessSegmentId) {
    this.businessSegmentId = businessSegmentId;
    return this;
  }

  /**
   * Get businessSegmentId
   * @return businessSegmentId
   */
  @javax.annotation.Nullable
  public String getBusinessSegmentId() {
    return businessSegmentId;
  }

  public void setBusinessSegmentId(String businessSegmentId) {
    this.businessSegmentId = businessSegmentId;
  }


  public TenantDto socialProfileId(String socialProfileId) {
    this.socialProfileId = socialProfileId;
    return this;
  }

  /**
   * Get socialProfileId
   * @return socialProfileId
   */
  @javax.annotation.Nullable
  public String getSocialProfileId() {
    return socialProfileId;
  }

  public void setSocialProfileId(String socialProfileId) {
    this.socialProfileId = socialProfileId;
  }


  public TenantDto languageId(String languageId) {
    this.languageId = languageId;
    return this;
  }

  /**
   * Get languageId
   * @return languageId
   */
  @javax.annotation.Nullable
  public String getLanguageId() {
    return languageId;
  }

  public void setLanguageId(String languageId) {
    this.languageId = languageId;
  }


  public TenantDto name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TenantDto duns(String duns) {
    this.duns = duns;
    return this;
  }

  /**
   * Get duns
   * @return duns
   */
  @javax.annotation.Nullable
  public String getDuns() {
    return duns;
  }

  public void setDuns(String duns) {
    this.duns = duns;
  }


  public TenantDto slogan(String slogan) {
    this.slogan = slogan;
    return this;
  }

  /**
   * Get slogan
   * @return slogan
   */
  @javax.annotation.Nullable
  public String getSlogan() {
    return slogan;
  }

  public void setSlogan(String slogan) {
    this.slogan = slogan;
  }


  public TenantDto legalName(String legalName) {
    this.legalName = legalName;
    return this;
  }

  /**
   * Get legalName
   * @return legalName
   */
  @javax.annotation.Nullable
  public String getLegalName() {
    return legalName;
  }

  public void setLegalName(String legalName) {
    this.legalName = legalName;
  }


  public TenantDto coverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
    return this;
  }

  /**
   * Get coverUrl
   * @return coverUrl
   */
  @javax.annotation.Nullable
  public String getCoverUrl() {
    return coverUrl;
  }

  public void setCoverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
  }


  public TenantDto avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  /**
   * Get avatarUrl
   * @return avatarUrl
   */
  @javax.annotation.Nullable
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }


  public TenantDto cartId(String cartId) {
    this.cartId = cartId;
    return this;
  }

  /**
   * Get cartId
   * @return cartId
   */
  @javax.annotation.Nullable
  public String getCartId() {
    return cartId;
  }

  public void setCartId(String cartId) {
    this.cartId = cartId;
  }


  public TenantDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  /**
   * Get currencyId
   * @return currencyId
   */
  @javax.annotation.Nullable
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public TenantDto timezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
    return this;
  }

  /**
   * Get timezoneId
   * @return timezoneId
   */
  @javax.annotation.Nullable
  public String getTimezoneId() {
    return timezoneId;
  }

  public void setTimezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
  }


  public TenantDto countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

  /**
   * Get countryId
   * @return countryId
   */
  @javax.annotation.Nullable
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }


  public TenantDto stateId(String stateId) {
    this.stateId = stateId;
    return this;
  }

  /**
   * Get stateId
   * @return stateId
   */
  @javax.annotation.Nullable
  public String getStateId() {
    return stateId;
  }

  public void setStateId(String stateId) {
    this.stateId = stateId;
  }


  public TenantDto cityId(String cityId) {
    this.cityId = cityId;
    return this;
  }

  /**
   * Get cityId
   * @return cityId
   */
  @javax.annotation.Nullable
  public String getCityId() {
    return cityId;
  }

  public void setCityId(String cityId) {
    this.cityId = cityId;
  }


  public TenantDto email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public TenantDto phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public TenantDto webUrl(String webUrl) {
    this.webUrl = webUrl;
    return this;
  }

  /**
   * Get webUrl
   * @return webUrl
   */
  @javax.annotation.Nullable
  public String getWebUrl() {
    return webUrl;
  }

  public void setWebUrl(String webUrl) {
    this.webUrl = webUrl;
  }


  public TenantDto facebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
    return this;
  }

  /**
   * Get facebookUrl
   * @return facebookUrl
   */
  @javax.annotation.Nullable
  public String getFacebookUrl() {
    return facebookUrl;
  }

  public void setFacebookUrl(String facebookUrl) {
    this.facebookUrl = facebookUrl;
  }


  public TenantDto twitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
    return this;
  }

  /**
   * Get twitterUrl
   * @return twitterUrl
   */
  @javax.annotation.Nullable
  public String getTwitterUrl() {
    return twitterUrl;
  }

  public void setTwitterUrl(String twitterUrl) {
    this.twitterUrl = twitterUrl;
  }


  public TenantDto gitHubUrl(String gitHubUrl) {
    this.gitHubUrl = gitHubUrl;
    return this;
  }

  /**
   * Get gitHubUrl
   * @return gitHubUrl
   */
  @javax.annotation.Nullable
  public String getGitHubUrl() {
    return gitHubUrl;
  }

  public void setGitHubUrl(String gitHubUrl) {
    this.gitHubUrl = gitHubUrl;
  }


  public TenantDto linkedInUrl(String linkedInUrl) {
    this.linkedInUrl = linkedInUrl;
    return this;
  }

  /**
   * Get linkedInUrl
   * @return linkedInUrl
   */
  @javax.annotation.Nullable
  public String getLinkedInUrl() {
    return linkedInUrl;
  }

  public void setLinkedInUrl(String linkedInUrl) {
    this.linkedInUrl = linkedInUrl;
  }


  public TenantDto instagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
    return this;
  }

  /**
   * Get instagramUrl
   * @return instagramUrl
   */
  @javax.annotation.Nullable
  public String getInstagramUrl() {
    return instagramUrl;
  }

  public void setInstagramUrl(String instagramUrl) {
    this.instagramUrl = instagramUrl;
  }


  public TenantDto youTubeUrl(String youTubeUrl) {
    this.youTubeUrl = youTubeUrl;
    return this;
  }

  /**
   * Get youTubeUrl
   * @return youTubeUrl
   */
  @javax.annotation.Nullable
  public String getYouTubeUrl() {
    return youTubeUrl;
  }

  public void setYouTubeUrl(String youTubeUrl) {
    this.youTubeUrl = youTubeUrl;
  }


  public TenantDto whatsAppNumber(String whatsAppNumber) {
    this.whatsAppNumber = whatsAppNumber;
    return this;
  }

  /**
   * Get whatsAppNumber
   * @return whatsAppNumber
   */
  @javax.annotation.Nullable
  public String getWhatsAppNumber() {
    return whatsAppNumber;
  }

  public void setWhatsAppNumber(String whatsAppNumber) {
    this.whatsAppNumber = whatsAppNumber;
  }


  public TenantDto supportPhoneNumber(String supportPhoneNumber) {
    this.supportPhoneNumber = supportPhoneNumber;
    return this;
  }

  /**
   * Get supportPhoneNumber
   * @return supportPhoneNumber
   */
  @javax.annotation.Nullable
  public String getSupportPhoneNumber() {
    return supportPhoneNumber;
  }

  public void setSupportPhoneNumber(String supportPhoneNumber) {
    this.supportPhoneNumber = supportPhoneNumber;
  }


  public TenantDto verified(Boolean verified) {
    this.verified = verified;
    return this;
  }

  /**
   * Get verified
   * @return verified
   */
  @javax.annotation.Nullable
  public Boolean getVerified() {
    return verified;
  }

  public void setVerified(Boolean verified) {
    this.verified = verified;
  }


  /**
   * Get businessName
   * @return businessName
   */
  @javax.annotation.Nullable
  public String getBusinessName() {
    return businessName;
  }



  /**
   * Get businessLegalName
   * @return businessLegalName
   */
  @javax.annotation.Nullable
  public String getBusinessLegalName() {
    return businessLegalName;
  }



  public TenantDto twitterUsername(String twitterUsername) {
    this.twitterUsername = twitterUsername;
    return this;
  }

  /**
   * Get twitterUsername
   * @return twitterUsername
   */
  @javax.annotation.Nullable
  public String getTwitterUsername() {
    return twitterUsername;
  }

  public void setTwitterUsername(String twitterUsername) {
    this.twitterUsername = twitterUsername;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TenantDto tenantDto = (TenantDto) o;
    return Objects.equals(this.id, tenantDto.id) &&
        Objects.equals(this.timestamp, tenantDto.timestamp) &&
        Objects.equals(this.qualifiedName, tenantDto.qualifiedName) &&
        Objects.equals(this.taxId, tenantDto.taxId) &&
        Objects.equals(this.about, tenantDto.about) &&
        Objects.equals(this.walletId, tenantDto.walletId) &&
        Objects.equals(this.socialFeedId, tenantDto.socialFeedId) &&
        Objects.equals(this.businessIndustryId, tenantDto.businessIndustryId) &&
        Objects.equals(this.businessSegmentId, tenantDto.businessSegmentId) &&
        Objects.equals(this.socialProfileId, tenantDto.socialProfileId) &&
        Objects.equals(this.languageId, tenantDto.languageId) &&
        Objects.equals(this.name, tenantDto.name) &&
        Objects.equals(this.duns, tenantDto.duns) &&
        Objects.equals(this.slogan, tenantDto.slogan) &&
        Objects.equals(this.legalName, tenantDto.legalName) &&
        Objects.equals(this.coverUrl, tenantDto.coverUrl) &&
        Objects.equals(this.avatarUrl, tenantDto.avatarUrl) &&
        Objects.equals(this.cartId, tenantDto.cartId) &&
        Objects.equals(this.currencyId, tenantDto.currencyId) &&
        Objects.equals(this.timezoneId, tenantDto.timezoneId) &&
        Objects.equals(this.countryId, tenantDto.countryId) &&
        Objects.equals(this.stateId, tenantDto.stateId) &&
        Objects.equals(this.cityId, tenantDto.cityId) &&
        Objects.equals(this.email, tenantDto.email) &&
        Objects.equals(this.phone, tenantDto.phone) &&
        Objects.equals(this.webUrl, tenantDto.webUrl) &&
        Objects.equals(this.facebookUrl, tenantDto.facebookUrl) &&
        Objects.equals(this.twitterUrl, tenantDto.twitterUrl) &&
        Objects.equals(this.gitHubUrl, tenantDto.gitHubUrl) &&
        Objects.equals(this.linkedInUrl, tenantDto.linkedInUrl) &&
        Objects.equals(this.instagramUrl, tenantDto.instagramUrl) &&
        Objects.equals(this.youTubeUrl, tenantDto.youTubeUrl) &&
        Objects.equals(this.whatsAppNumber, tenantDto.whatsAppNumber) &&
        Objects.equals(this.supportPhoneNumber, tenantDto.supportPhoneNumber) &&
        Objects.equals(this.verified, tenantDto.verified) &&
        Objects.equals(this.businessName, tenantDto.businessName) &&
        Objects.equals(this.businessLegalName, tenantDto.businessLegalName) &&
        Objects.equals(this.twitterUsername, tenantDto.twitterUsername);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, timestamp, qualifiedName, taxId, about, walletId, socialFeedId, businessIndustryId, businessSegmentId, socialProfileId, languageId, name, duns, slogan, legalName, coverUrl, avatarUrl, cartId, currencyId, timezoneId, countryId, stateId, cityId, email, phone, webUrl, facebookUrl, twitterUrl, gitHubUrl, linkedInUrl, instagramUrl, youTubeUrl, whatsAppNumber, supportPhoneNumber, verified, businessName, businessLegalName, twitterUsername);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TenantDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    qualifiedName: ").append(toIndentedString(qualifiedName)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    about: ").append(toIndentedString(about)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    socialFeedId: ").append(toIndentedString(socialFeedId)).append("\n");
    sb.append("    businessIndustryId: ").append(toIndentedString(businessIndustryId)).append("\n");
    sb.append("    businessSegmentId: ").append(toIndentedString(businessSegmentId)).append("\n");
    sb.append("    socialProfileId: ").append(toIndentedString(socialProfileId)).append("\n");
    sb.append("    languageId: ").append(toIndentedString(languageId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    duns: ").append(toIndentedString(duns)).append("\n");
    sb.append("    slogan: ").append(toIndentedString(slogan)).append("\n");
    sb.append("    legalName: ").append(toIndentedString(legalName)).append("\n");
    sb.append("    coverUrl: ").append(toIndentedString(coverUrl)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    timezoneId: ").append(toIndentedString(timezoneId)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    stateId: ").append(toIndentedString(stateId)).append("\n");
    sb.append("    cityId: ").append(toIndentedString(cityId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("    facebookUrl: ").append(toIndentedString(facebookUrl)).append("\n");
    sb.append("    twitterUrl: ").append(toIndentedString(twitterUrl)).append("\n");
    sb.append("    gitHubUrl: ").append(toIndentedString(gitHubUrl)).append("\n");
    sb.append("    linkedInUrl: ").append(toIndentedString(linkedInUrl)).append("\n");
    sb.append("    instagramUrl: ").append(toIndentedString(instagramUrl)).append("\n");
    sb.append("    youTubeUrl: ").append(toIndentedString(youTubeUrl)).append("\n");
    sb.append("    whatsAppNumber: ").append(toIndentedString(whatsAppNumber)).append("\n");
    sb.append("    supportPhoneNumber: ").append(toIndentedString(supportPhoneNumber)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
    sb.append("    businessLegalName: ").append(toIndentedString(businessLegalName)).append("\n");
    sb.append("    twitterUsername: ").append(toIndentedString(twitterUsername)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("timestamp");
    openapiFields.add("qualifiedName");
    openapiFields.add("taxId");
    openapiFields.add("about");
    openapiFields.add("walletId");
    openapiFields.add("socialFeedId");
    openapiFields.add("businessIndustryId");
    openapiFields.add("businessSegmentId");
    openapiFields.add("socialProfileId");
    openapiFields.add("languageId");
    openapiFields.add("name");
    openapiFields.add("duns");
    openapiFields.add("slogan");
    openapiFields.add("legalName");
    openapiFields.add("coverUrl");
    openapiFields.add("avatarUrl");
    openapiFields.add("cartId");
    openapiFields.add("currencyId");
    openapiFields.add("timezoneId");
    openapiFields.add("countryId");
    openapiFields.add("stateId");
    openapiFields.add("cityId");
    openapiFields.add("email");
    openapiFields.add("phone");
    openapiFields.add("webUrl");
    openapiFields.add("facebookUrl");
    openapiFields.add("twitterUrl");
    openapiFields.add("gitHubUrl");
    openapiFields.add("linkedInUrl");
    openapiFields.add("instagramUrl");
    openapiFields.add("youTubeUrl");
    openapiFields.add("whatsAppNumber");
    openapiFields.add("supportPhoneNumber");
    openapiFields.add("verified");
    openapiFields.add("businessName");
    openapiFields.add("businessLegalName");
    openapiFields.add("twitterUsername");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TenantDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TenantDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TenantDto is not found in the empty JSON string", TenantDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TenantDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TenantDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("qualifiedName") != null && !jsonObj.get("qualifiedName").isJsonNull()) && !jsonObj.get("qualifiedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qualifiedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qualifiedName").toString()));
      }
      if ((jsonObj.get("taxId") != null && !jsonObj.get("taxId").isJsonNull()) && !jsonObj.get("taxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxId").toString()));
      }
      if ((jsonObj.get("about") != null && !jsonObj.get("about").isJsonNull()) && !jsonObj.get("about").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `about` to be a primitive type in the JSON string but got `%s`", jsonObj.get("about").toString()));
      }
      if ((jsonObj.get("walletId") != null && !jsonObj.get("walletId").isJsonNull()) && !jsonObj.get("walletId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `walletId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("walletId").toString()));
      }
      if ((jsonObj.get("socialFeedId") != null && !jsonObj.get("socialFeedId").isJsonNull()) && !jsonObj.get("socialFeedId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `socialFeedId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("socialFeedId").toString()));
      }
      if ((jsonObj.get("businessIndustryId") != null && !jsonObj.get("businessIndustryId").isJsonNull()) && !jsonObj.get("businessIndustryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessIndustryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessIndustryId").toString()));
      }
      if ((jsonObj.get("businessSegmentId") != null && !jsonObj.get("businessSegmentId").isJsonNull()) && !jsonObj.get("businessSegmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessSegmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessSegmentId").toString()));
      }
      if ((jsonObj.get("socialProfileId") != null && !jsonObj.get("socialProfileId").isJsonNull()) && !jsonObj.get("socialProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `socialProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("socialProfileId").toString()));
      }
      if ((jsonObj.get("languageId") != null && !jsonObj.get("languageId").isJsonNull()) && !jsonObj.get("languageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("duns") != null && !jsonObj.get("duns").isJsonNull()) && !jsonObj.get("duns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `duns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("duns").toString()));
      }
      if ((jsonObj.get("slogan") != null && !jsonObj.get("slogan").isJsonNull()) && !jsonObj.get("slogan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slogan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slogan").toString()));
      }
      if ((jsonObj.get("legalName") != null && !jsonObj.get("legalName").isJsonNull()) && !jsonObj.get("legalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalName").toString()));
      }
      if ((jsonObj.get("coverUrl") != null && !jsonObj.get("coverUrl").isJsonNull()) && !jsonObj.get("coverUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverUrl").toString()));
      }
      if ((jsonObj.get("avatarUrl") != null && !jsonObj.get("avatarUrl").isJsonNull()) && !jsonObj.get("avatarUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatarUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatarUrl").toString()));
      }
      if ((jsonObj.get("cartId") != null && !jsonObj.get("cartId").isJsonNull()) && !jsonObj.get("cartId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cartId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cartId").toString()));
      }
      if ((jsonObj.get("currencyId") != null && !jsonObj.get("currencyId").isJsonNull()) && !jsonObj.get("currencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyId").toString()));
      }
      if ((jsonObj.get("timezoneId") != null && !jsonObj.get("timezoneId").isJsonNull()) && !jsonObj.get("timezoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezoneId").toString()));
      }
      if ((jsonObj.get("countryId") != null && !jsonObj.get("countryId").isJsonNull()) && !jsonObj.get("countryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryId").toString()));
      }
      if ((jsonObj.get("stateId") != null && !jsonObj.get("stateId").isJsonNull()) && !jsonObj.get("stateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateId").toString()));
      }
      if ((jsonObj.get("cityId") != null && !jsonObj.get("cityId").isJsonNull()) && !jsonObj.get("cityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cityId").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("webUrl") != null && !jsonObj.get("webUrl").isJsonNull()) && !jsonObj.get("webUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webUrl").toString()));
      }
      if ((jsonObj.get("facebookUrl") != null && !jsonObj.get("facebookUrl").isJsonNull()) && !jsonObj.get("facebookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebookUrl").toString()));
      }
      if ((jsonObj.get("twitterUrl") != null && !jsonObj.get("twitterUrl").isJsonNull()) && !jsonObj.get("twitterUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitterUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitterUrl").toString()));
      }
      if ((jsonObj.get("gitHubUrl") != null && !jsonObj.get("gitHubUrl").isJsonNull()) && !jsonObj.get("gitHubUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gitHubUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gitHubUrl").toString()));
      }
      if ((jsonObj.get("linkedInUrl") != null && !jsonObj.get("linkedInUrl").isJsonNull()) && !jsonObj.get("linkedInUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedInUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedInUrl").toString()));
      }
      if ((jsonObj.get("instagramUrl") != null && !jsonObj.get("instagramUrl").isJsonNull()) && !jsonObj.get("instagramUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instagramUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instagramUrl").toString()));
      }
      if ((jsonObj.get("youTubeUrl") != null && !jsonObj.get("youTubeUrl").isJsonNull()) && !jsonObj.get("youTubeUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `youTubeUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("youTubeUrl").toString()));
      }
      if ((jsonObj.get("whatsAppNumber") != null && !jsonObj.get("whatsAppNumber").isJsonNull()) && !jsonObj.get("whatsAppNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `whatsAppNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("whatsAppNumber").toString()));
      }
      if ((jsonObj.get("supportPhoneNumber") != null && !jsonObj.get("supportPhoneNumber").isJsonNull()) && !jsonObj.get("supportPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportPhoneNumber").toString()));
      }
      if ((jsonObj.get("businessName") != null && !jsonObj.get("businessName").isJsonNull()) && !jsonObj.get("businessName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessName").toString()));
      }
      if ((jsonObj.get("businessLegalName") != null && !jsonObj.get("businessLegalName").isJsonNull()) && !jsonObj.get("businessLegalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessLegalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessLegalName").toString()));
      }
      if ((jsonObj.get("twitterUsername") != null && !jsonObj.get("twitterUsername").isJsonNull()) && !jsonObj.get("twitterUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitterUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitterUsername").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TenantDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TenantDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TenantDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TenantDto.class));

       return (TypeAdapter<T>) new TypeAdapter<TenantDto>() {
           @Override
           public void write(JsonWriter out, TenantDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TenantDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TenantDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TenantDto
   * @throws IOException if the JSON string is invalid with respect to TenantDto
   */
  public static TenantDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TenantDto.class);
  }

  /**
   * Convert an instance of TenantDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

