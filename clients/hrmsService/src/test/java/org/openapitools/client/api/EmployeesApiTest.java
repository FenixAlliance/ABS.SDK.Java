/*
 * HrmsService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EmployeeProfileCreateDto;
import org.openapitools.client.model.EmployeeProfileDtoEnvelope;
import org.openapitools.client.model.EmployeeProfileDtoListEnvelope;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.Int32Envelope;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmployeesApi
 */
@Disabled
public class EmployeesApiTest {

    private final EmployeesApi api = new EmployeesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEmployeeAsyncTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmployeeProfileCreateDto employeeProfileCreateDto = null;
        EmptyEnvelope response = api.createEmployeeAsync(tenantId, apiVersion, xApiVersion, employeeProfileCreateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEmployeeAsyncTest() throws ApiException {
        UUID tenantId = null;
        UUID employeeId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.deleteEmployeeAsync(tenantId, employeeId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmployeeByIdAsyncTest() throws ApiException {
        UUID tenantId = null;
        UUID employeeId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmployeeProfileDtoEnvelope response = api.getEmployeeByIdAsync(tenantId, employeeId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmployeesAsyncTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmployeeProfileDtoListEnvelope response = api.getEmployeesAsync(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmployeesCountAsyncTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.getEmployeesCountAsync(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateEmployeeAsyncTest() throws ApiException {
        UUID tenantId = null;
        UUID employeeId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Object body = null;
        EmptyEnvelope response = api.updateEmployeeAsync(tenantId, employeeId, apiVersion, xApiVersion, body);
        // TODO: test validations
    }

}
