/*
 * SystemService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountHolderCreateDto;
import org.openapitools.client.model.EmptyEnvelope;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.ExtendedUserDtoEnvelope;
import org.openapitools.client.model.ExtendedUserDtoListEnvelope;
import org.openapitools.client.model.Int32Envelope;
import org.openapitools.client.model.UserDtoEnvelope;
import org.openapitools.client.model.UserDtoListEnvelope;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2SystemServiceUsersCountGetTest() throws ApiException {
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.apiV2SystemServiceUsersCountGet(apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2SystemServiceUsersExtendedCountGetTest() throws ApiException {
        String apiVersion = null;
        String xApiVersion = null;
        Int32Envelope response = api.apiV2SystemServiceUsersExtendedCountGet(apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2SystemServiceUsersExtendedGetTest() throws ApiException {
        String apiVersion = null;
        String xApiVersion = null;
        ExtendedUserDtoListEnvelope response = api.apiV2SystemServiceUsersExtendedGet(apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2SystemServiceUsersGetTest() throws ApiException {
        String apiVersion = null;
        String xApiVersion = null;
        UserDtoListEnvelope response = api.apiV2SystemServiceUsersGet(apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2SystemServiceUsersPostTest() throws ApiException {
        String apiVersion = null;
        String xApiVersion = null;
        AccountHolderCreateDto accountHolderCreateDto = null;
        EmptyEnvelope response = api.apiV2SystemServiceUsersPost(apiVersion, xApiVersion, accountHolderCreateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2SystemServiceUsersUserIdDeleteTest() throws ApiException {
        String userId = null;
        String apiVersion = null;
        String xApiVersion = null;
        EmptyEnvelope response = api.apiV2SystemServiceUsersUserIdDelete(userId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2SystemServiceUsersUserIdExtendedGetTest() throws ApiException {
        String userId = null;
        String apiVersion = null;
        String xApiVersion = null;
        ExtendedUserDtoEnvelope response = api.apiV2SystemServiceUsersUserIdExtendedGet(userId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2SystemServiceUsersUserIdPutTest() throws ApiException {
        String userId = null;
        String apiVersion = null;
        String xApiVersion = null;
        Object body = null;
        EmptyEnvelope response = api.apiV2SystemServiceUsersUserIdPut(userId, apiVersion, xApiVersion, body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserAsyncTest() throws ApiException {
        String userId = null;
        String apiVersion = null;
        String xApiVersion = null;
        UserDtoEnvelope response = api.getUserAsync(userId, apiVersion, xApiVersion);
        // TODO: test validations
    }

}
