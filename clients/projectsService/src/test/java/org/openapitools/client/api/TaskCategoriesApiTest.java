/*
 * ProjectsService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorEnvelope;
import org.openapitools.client.model.TaskCategoryCreateDto;
import org.openapitools.client.model.TaskCategoryDto;
import org.openapitools.client.model.TaskCategoryDtoListEnvelope;
import org.openapitools.client.model.TaskCategoryUpdateDto;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskCategoriesApi
 */
@Disabled
public class TaskCategoriesApiTest {

    private final TaskCategoriesApi api = new TaskCategoriesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2ProjectsServiceTaskCategoriesGetTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        TaskCategoryDtoListEnvelope response = api.apiV2ProjectsServiceTaskCategoriesGet(tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2ProjectsServiceTaskCategoriesPostTest() throws ApiException {
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        TaskCategoryCreateDto taskCategoryCreateDto = null;
        TaskCategoryDto response = api.apiV2ProjectsServiceTaskCategoriesPost(tenantId, apiVersion, xApiVersion, taskCategoryCreateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2ProjectsServiceTaskCategoriesTaskCategoryIdDeleteTest() throws ApiException {
        UUID taskCategoryId = null;
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        TaskCategoryDto response = api.apiV2ProjectsServiceTaskCategoriesTaskCategoryIdDelete(taskCategoryId, tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2ProjectsServiceTaskCategoriesTaskCategoryIdGetTest() throws ApiException {
        UUID taskCategoryId = null;
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        TaskCategoryDto response = api.apiV2ProjectsServiceTaskCategoriesTaskCategoryIdGet(taskCategoryId, tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2ProjectsServiceTaskCategoriesTaskCategoryIdPutTest() throws ApiException {
        UUID taskCategoryId = null;
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        TaskCategoryUpdateDto taskCategoryUpdateDto = null;
        TaskCategoryDto response = api.apiV2ProjectsServiceTaskCategoriesTaskCategoryIdPut(taskCategoryId, tenantId, apiVersion, xApiVersion, taskCategoryUpdateDto);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2ProjectsServiceTaskCategoriesTaskCategoryIdTypesGetTest() throws ApiException {
        UUID taskCategoryId = null;
        UUID tenantId = null;
        String apiVersion = null;
        String xApiVersion = null;
        TaskCategoryDto response = api.apiV2ProjectsServiceTaskCategoriesTaskCategoryIdTypesGet(taskCategoryId, tenantId, apiVersion, xApiVersion);
        // TODO: test validations
    }

}
