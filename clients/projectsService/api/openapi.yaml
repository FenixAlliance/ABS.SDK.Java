openapi: 3.0.1
info:
  contact:
    email: support@fenix-alliance.com
    name: Fenix Alliance Inc.
    url: https://fenixalliance.com.co/Support
  license:
    name: Fenix Alliance Inc.
    url: https://fenix-alliance.com.co/Legal/Policies/eula
  termsOfService: https://absuite.net/eula
  title: ProjectsService
  version: 2.0.1.4089
servers:
- url: /
security:
- Bearer: []
paths:
  /api/v2/ProjectsService/Projects:
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectDtoListEnvelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProjectCreateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Projects
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/Count:
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int32Envelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/Int32Envelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
    get:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectDtoEnvelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
    put:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProjectUpdateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Projects
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}/Periods:
    get:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPeriodCreateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProjectPeriodCreateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Projects
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}/Periods/{projectPeriodId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectPeriodId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
    put:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectPeriodId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPeriodUpdateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProjectPeriodUpdateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Projects
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}/TimeLogs:
    get:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTimeLogDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectTimeLogDtoListEnvelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}/TimeLogs/Count:
    get:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int32Envelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/Int32Envelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}/Tasks:
    get:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTaskDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectTaskDtoListEnvelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTaskCreateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProjectTaskCreateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Projects
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}/Tasks/Count:
    get:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int32Envelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/Int32Envelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}/Tasks/{projectTaskId}:
    delete:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectTaskId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
    put:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: projectTaskId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTaskUpdateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProjectTaskUpdateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmptyEnvelope'
          description: OK
      tags:
      - Projects
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}/TaskCategories:
    get:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategoryDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskCategoryDtoListEnvelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/Projects/{projectId}/TaskCategories/Count:
    get:
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int32Envelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/Int32Envelope'
          description: OK
      tags:
      - Projects
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/TaskCategories:
    get:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategoryDtoListEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskCategoryDtoListEnvelope'
          description: OK
      tags:
      - TaskCategories
      x-accepts:
      - application/json
      - application/xml
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCategoryCreateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/TaskCategoryCreateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
          description: OK
      tags:
      - TaskCategories
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/TaskCategories/{taskCategoryId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: taskCategoryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
          description: OK
      tags:
      - TaskCategories
      x-accepts:
      - application/json
      - application/xml
    get:
      parameters:
      - explode: false
        in: path
        name: taskCategoryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
          description: OK
      tags:
      - TaskCategories
      x-accepts:
      - application/json
      - application/xml
    put:
      parameters:
      - explode: false
        in: path
        name: taskCategoryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCategoryUpdateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/TaskCategoryUpdateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
          description: OK
      tags:
      - TaskCategories
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/TaskCategories/{taskCategoryId}/Types:
    get:
      parameters:
      - explode: false
        in: path
        name: taskCategoryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskCategoryDto'
          description: OK
      tags:
      - TaskCategories
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/TaskTypes/{taskTypeId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: taskTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTypeDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskTypeDto'
          description: OK
      tags:
      - TaskTypes
      x-accepts:
      - application/json
      - application/xml
    get:
      parameters:
      - explode: false
        in: path
        name: taskTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTypeDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskTypeDto'
          description: OK
      tags:
      - TaskTypes
      x-accepts:
      - application/json
      - application/xml
    put:
      parameters:
      - explode: false
        in: path
        name: taskTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskTypeUpdateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/TaskTypeUpdateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTypeDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskTypeDto'
          description: OK
      tags:
      - TaskTypes
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
  /api/v2/ProjectsService/TaskTypes:
    post:
      parameters:
      - explode: true
        in: query
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: x-api-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskTypeCreateDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/TaskTypeCreateDto'
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Forbidden
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
          description: Unauthorized
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTypeDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskTypeDto'
          description: OK
      tags:
      - TaskTypes
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
components:
  schemas:
    EmptyEnvelope:
      additionalProperties: false
      example:
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
      type: object
    ErrorEnvelope:
      additionalProperties: false
      example:
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
      type: object
    Int32Envelope:
      additionalProperties: false
      example:
        result: 0
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
        result:
          format: int32
          type: integer
      type: object
    ProjectCreateDto:
      additionalProperties: false
      example:
        projectStartDate: 2000-01-23T04:56:07.000+00:00
        projectEndDate: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        title:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        projectStartDate:
          format: date-time
          type: string
        projectEndDate:
          format: date-time
          type: string
      type: object
    ProjectDto:
      additionalProperties: false
      example:
        projectStartDate: 2000-01-23T04:56:07.000+00:00
        projectEndDate: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        title: title
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        timestamp:
          format: date-time
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        projectStartDate:
          format: date-time
          type: string
        projectEndDate:
          format: date-time
          type: string
      type: object
    ProjectDtoEnvelope:
      additionalProperties: false
      example:
        result:
          projectStartDate: 2000-01-23T04:56:07.000+00:00
          projectEndDate: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          timestamp: 2000-01-23T04:56:07.000+00:00
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
        result:
          $ref: '#/components/schemas/ProjectDto'
      type: object
    ProjectDtoListEnvelope:
      additionalProperties: false
      example:
        result:
        - projectStartDate: 2000-01-23T04:56:07.000+00:00
          projectEndDate: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          timestamp: 2000-01-23T04:56:07.000+00:00
        - projectStartDate: 2000-01-23T04:56:07.000+00:00
          projectEndDate: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          timestamp: 2000-01-23T04:56:07.000+00:00
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
        result:
          items:
            $ref: '#/components/schemas/ProjectDto'
          nullable: true
          type: array
      type: object
    ProjectPeriodCreateDto:
      additionalProperties: false
      example:
        periodStartDate: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectID: projectID
        periodEndDate: 2000-01-23T04:56:07.000+00:00
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        periodStartDate:
          format: date-time
          type: string
        periodEndDate:
          format: date-time
          type: string
        projectID:
          nullable: true
          type: string
      type: object
    ProjectPeriodUpdateDto:
      additionalProperties: false
      example:
        periodStartDate: 2000-01-23T04:56:07.000+00:00
        periodEndDate: 2000-01-23T04:56:07.000+00:00
      properties:
        periodStartDate:
          format: date-time
          type: string
        periodEndDate:
          format: date-time
          type: string
      type: object
    ProjectTaskCreateDto:
      additionalProperties: false
      example:
        dueLine: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        projectID: projectID
        startDate: 2000-01-23T04:56:07.000+00:00
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        title:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        dueLine:
          format: date-time
          type: string
        projectID:
          nullable: true
          type: string
      type: object
    ProjectTaskDto:
      additionalProperties: false
      example:
        dueLine: 2000-01-23T04:56:07.000+00:00
        projectTaskBucketID: projectTaskBucketID
        id: id
        projectID: projectID
        startDate: 2000-01-23T04:56:07.000+00:00
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        timestamp:
          format: date-time
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        dueLine:
          format: date-time
          type: string
        projectID:
          nullable: true
          type: string
        projectTaskBucketID:
          nullable: true
          type: string
      type: object
    ProjectTaskDtoListEnvelope:
      additionalProperties: false
      example:
        result:
        - dueLine: 2000-01-23T04:56:07.000+00:00
          projectTaskBucketID: projectTaskBucketID
          id: id
          projectID: projectID
          startDate: 2000-01-23T04:56:07.000+00:00
          timestamp: 2000-01-23T04:56:07.000+00:00
        - dueLine: 2000-01-23T04:56:07.000+00:00
          projectTaskBucketID: projectTaskBucketID
          id: id
          projectID: projectID
          startDate: 2000-01-23T04:56:07.000+00:00
          timestamp: 2000-01-23T04:56:07.000+00:00
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
        result:
          items:
            $ref: '#/components/schemas/ProjectTaskDto'
          nullable: true
          type: array
      type: object
    ProjectTaskUpdateDto:
      additionalProperties: false
      example:
        dueLine: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        startDate:
          format: date-time
          type: string
        dueLine:
          format: date-time
          type: string
      type: object
    ProjectTimeLogDto:
      additionalProperties: false
      example:
        comments: comments
        logDate: 2000-01-23T04:56:07.000+00:00
        recordType: 0
        type: type
        projectPeriodId: projectPeriodId
        timeStamp: 2000-01-23T04:56:07.000+00:00
        projectTaskId: projectTaskId
        responsibleContactId: responsibleContactId
        timeSpan: PT2H30M
        id: id
        taskCategoryId: taskCategoryId
        projectId: projectId
        creatorContactId: creatorContactId
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        timestamp:
          format: date-time
          nullable: true
          type: string
        projectId:
          nullable: true
          type: string
        projectTaskId:
          nullable: true
          type: string
        taskCategoryId:
          nullable: true
          type: string
        projectPeriodId:
          nullable: true
          type: string
        responsibleContactId:
          nullable: true
          type: string
        creatorContactId:
          nullable: true
          type: string
        recordType:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        timeStamp:
          format: date-time
          type: string
        timeSpan:
          example: PT2H30M
          type: string
        logDate:
          format: date-time
          type: string
        comments:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    ProjectTimeLogDtoListEnvelope:
      additionalProperties: false
      example:
        result:
        - comments: comments
          logDate: 2000-01-23T04:56:07.000+00:00
          recordType: 0
          type: type
          projectPeriodId: projectPeriodId
          timeStamp: 2000-01-23T04:56:07.000+00:00
          projectTaskId: projectTaskId
          responsibleContactId: responsibleContactId
          timeSpan: PT2H30M
          id: id
          taskCategoryId: taskCategoryId
          projectId: projectId
          creatorContactId: creatorContactId
          timestamp: 2000-01-23T04:56:07.000+00:00
        - comments: comments
          logDate: 2000-01-23T04:56:07.000+00:00
          recordType: 0
          type: type
          projectPeriodId: projectPeriodId
          timeStamp: 2000-01-23T04:56:07.000+00:00
          projectTaskId: projectTaskId
          responsibleContactId: responsibleContactId
          timeSpan: PT2H30M
          id: id
          taskCategoryId: taskCategoryId
          projectId: projectId
          creatorContactId: creatorContactId
          timestamp: 2000-01-23T04:56:07.000+00:00
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
        result:
          items:
            $ref: '#/components/schemas/ProjectTimeLogDto'
          nullable: true
          type: array
      type: object
    ProjectUpdateDto:
      additionalProperties: false
      example:
        projectStartDate: 2000-01-23T04:56:07.000+00:00
        projectEndDate: 2000-01-23T04:56:07.000+00:00
        description: description
        title: title
      properties:
        title:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        projectStartDate:
          format: date-time
          type: string
        projectEndDate:
          format: date-time
          type: string
      type: object
    TaskCategoryCreateDto:
      additionalProperties: false
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        title:
          nullable: true
          type: string
      type: object
    TaskCategoryDto:
      additionalProperties: false
      example:
        id: id
        title: title
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        timestamp:
          format: date-time
          nullable: true
          type: string
        title:
          nullable: true
          type: string
      type: object
    TaskCategoryDtoListEnvelope:
      additionalProperties: false
      example:
        result:
        - id: id
          title: title
          timestamp: 2000-01-23T04:56:07.000+00:00
        - id: id
          title: title
          timestamp: 2000-01-23T04:56:07.000+00:00
        activityId: activityId
        errorMessage: errorMessage
        correlationId: correlationId
        isSuccess: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        isSuccess:
          readOnly: true
          type: boolean
        errorMessage:
          nullable: true
          type: string
        correlationId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        activityId:
          nullable: true
          readOnly: true
          type: string
        result:
          items:
            $ref: '#/components/schemas/TaskCategoryDto'
          nullable: true
          type: array
      type: object
    TaskCategoryUpdateDto:
      additionalProperties: false
      example:
        title: title
      properties:
        title:
          nullable: true
          type: string
      type: object
    TaskTypeCreateDto:
      additionalProperties: false
      example:
        displayInTimeTracker: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        taskCategoryID: taskCategoryID
        requiresDescription: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        timestamp:
          format: date-time
          readOnly: true
          type: string
        title:
          nullable: true
          type: string
        taskCategoryID:
          nullable: true
          type: string
        displayInTimeTracker:
          type: boolean
        requiresDescription:
          type: boolean
      type: object
    TaskTypeDto:
      additionalProperties: false
      example:
        displayInTimeTracker: true
        id: id
        title: title
        taskCategoryID: taskCategoryID
        requiresDescription: true
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        timestamp:
          format: date-time
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        taskCategoryID:
          nullable: true
          type: string
        displayInTimeTracker:
          type: boolean
        requiresDescription:
          type: boolean
      type: object
    TaskTypeUpdateDto:
      additionalProperties: false
      example:
        displayInTimeTracker: true
        title: title
        requiresDescription: true
      properties:
        title:
          nullable: true
          type: string
        displayInTimeTracker:
          type: boolean
        requiresDescription:
          type: boolean
      type: object
  securitySchemes:
    Bearer:
      description: "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter\
        \ 'Bearer' [Single Space] and then your token in the text input below.\r\n\
        \r\nExample: \"Bearer ey...cc\""
      in: header
      name: Authorization
      type: apiKey

